;
;     Joystick library documentation
;
;      (c) 2023 - Fantaisie Software
;

@Library Joystick

@Overview

  PureBasic provides a full access to the joysticks which are connected to the computer.
  This library supports joysticks and complex gamepads with several pads, triggers and many buttons.

@Remarks  
  On Windows, this library uses the DirectX technology. On Linux it uses SDL.

@CommandList

@ExampleFile All Joystick.pb

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = InitJoystick()

@Description
  Initialize the joystick environment for later use. This function must be called before any other functions
  within this library.
  
@ReturnValue
   Returns the number of joysticks available for use. 
   
@Remarks
  This function can be called on regular basis to detect if new joystick have been connected.

@SeeAlso
  @@ExamineJoystick

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = ExamineJoystick(#Joystick)

@Description
  Updates the current joystick state. It needs to be called before using the following functions:
  @@JoystickButton, @@JoystickAxisX, @@JoystickAxisY and @@JoystickAxisZ.

@Parameter "#Joystick"
  The joystick to use. The first joystick index is 0. The number of available joysticks is returned by @@InitJoystick.

@ReturnValue
  Returns nonzero if the joystick state has been correctly updated, returns zero otherwise.

@Remarks
  In @Link "Screen/OpenScreen" "fullscreen mode" the command @@FlipBuffers need to be called inside your
  event loop to handle all events properly.

@SeeAlso
  @@JoystickButton, @@JoystickAxisX, @@JoystickAxisY, @@JoystickAxisZ.

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = JoystickAxisX(#Joystick [, Pad [, Mode]])

@Description
  Returns the joystick X axis state.
  
@Parameter "#Joystick"
  The joystick to use. The first joystick index is 0. The number of available joysticks is returned by @@InitJoystick.

@OptionalParameter "Pad"
  The pad to use, if the joystick has multiple pads. The first pad index is 0.

@OptionalParameter "Mode"
  The mode can be one of the following value:

@FixedFont
  @#PB_Absolute: Returned value is either -1 (left), 0 (no movement) or 1 (right) (default)
  @#PB_Relative: Returned value is between the range -1000 (left) and 1000 (right). If the gamepad
                doesn't support relative movement, the result will be -1000, 0 or 1000.
@EndFixedFont

@ReturnValue
  Returns the joystick X axis value, depending of the specified mode.

@Remarks
  @@ExamineJoystick has to be called before this function is used, to update the current joystick state.  

@SeeAlso
  @@ExamineJoystick, @@JoystickAxisY, @@JoystickAxisZ

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = JoystickAxisY(#Joystick [, Pad [, Mode]])

@Description

  Returns the joystick Y axis state. 

@Parameter "#Joystick"
  The joystick to use. The first joystick index is 0. The number of available joysticks is returned by @@InitJoystick.

@OptionalParameter "Pad"
  The pad to use, if the joystick has multiple pads. The first pad index is 0.

@OptionalParameter "Mode"
  The mode can be one of the following value:

@FixedFont
  @#PB_Absolute: Returned value is either -1 (up), 0 (no movement) or 1 (down) (default)
  @#PB_Relative: Returned value is between the range -1000 (up) and 1000 (down). If the gamepad doesn't
                support relative movement, the result will be -1000, 0 or 1000.
@EndFixedFont

@ReturnValue
  Returns the joystick Y axis value, depending of the specified mode.

@Remarks
  @@ExamineJoystick has to be called before this function is used, to update the current joystick state.  
  
@SeeAlso
  @@ExamineJoystick, @@JoystickAxisX, @@JoystickAxisZ
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = JoystickAxisZ(#Joystick [, Pad [, Mode]])

@Description

  Returns the joystick Z axis state. This axis is often referred as trigger
  on new gamepad. 

@Parameter "#Joystick"
  The joystick to use. The first joystick index is 0. The number of available joysticks is returned by @@InitJoystick.

@OptionalParameter "Pad"
  The pad to use, if the joystick has multiple pads. The first pad index is 0.

@OptionalParameter "Mode"
  The mode can be one of the following value:

@FixedFont
  @#PB_Absolute: Returned value is either -1, 0 (no movement) or 1 (default)
  @#PB_Relative: Returned value is between the range -1000 and 1000. If the gamepad doesn't
                support relative movement, the result will be -1000, 0 or 1000.
@EndFixedFont

@ReturnValue
  Returns the joystick Z axis value, depending of the specified mode.

@Remarks
  @@ExamineJoystick has to be called before this function is used, to update the current joystick state.

@SeeAlso
  @@ExamineJoystick, @@JoystickAxisX, @@JoystickAxisY

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result$ = JoystickName(#Joystick)

@Description
  Returns the joystick name. It can be useful when having several joystick connected, to identify the right one.

@Parameter "#Joystick"
  The joystick to use. The first joystick index is 0. The number of available joysticks is returned by @@InitJoystick.

@ReturnValue
  Returns the joystick name.

@SeeAlso
  @@InitJoystick

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = JoystickButton(#Joystick, Button)

@Description
  Returns the joystick button state.

@Parameter "#Joystick"
  The joystick to use. The first joystick index is 0. The number of available joysticks is returned by @@InitJoystick.

@Parameter "Button"
  The joystick button to query. The first button index is 1.

@LineBreak
  Return zero if the specified button is not pressed, else it returns nonzero.
  Any number of buttons may be pressed at the same time.
  
@Remarks
  @@ExamineJoystick has to be called before this function is used, to update the current joystick state.    

@SeeAlso
  @@ExamineJoystick

@SupportedOS

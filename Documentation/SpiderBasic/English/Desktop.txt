;
;     Desktop library documentation
;
;       (c) Fantaisie Software
;

@Library Desktop

@Overview

  The desktop library allows access to information about the user's desktop environment. In SpiderBasic
  the desktop is the current web browser page. It can be useful to get information about browser width, height, depth, 
  mouse position etc.

@CommandList

@ExampleFile All Desktop.sb

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = ExamineDesktops()

@Description
  This function is available for PureBasic compatibility only. It always returns 1, as the web browser can only
  have one web page active at once. This function must be called before using the following functions: 
  @@DesktopDepth, @@DesktopFrequency, @@DesktopHeight,  @@DesktopName and @@DesktopWidth.

@NoParameters

@ReturnValue
  Always 1.

@Example
@Code
  MessageRequester("Desktop Information", "You have " + ExamineDesktops() + " active web page")
@EndCode

@SeeAlso
  @@DesktopDepth, @@DesktopFrequency,
  @@DesktopHeight, @@DesktopName, @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopDepth(#Desktop)

@Description
  Returns the color depth of the specified desktop.

@Parameter "#Desktop"
  The index of the desktop. Should be always zero as only one web page is active at once.

@ReturnValue
  Returns the depth in bits-per-pixel: 1, 2, 4, 8, 15, 16, 24 or 32-bit

@Remarks
  @@ExamineDesktops must be called before using this function to retrieve information about the available desktops.

@Example
@Code
  ExamineDesktops()
  MessageRequester("Display Information", "Current resolution = "+ DesktopWidth(0) + "x" +  DesktopHeight(0) + "x" + DesktopDepth(0))
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopFrequency,
  @@DesktopHeight, @@DesktopName, @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result.d = DesktopResolutionX()

@Description
  Returns the desktop DPI resolution factor on the 'x' axis. 

@NoParameters

@ReturnValue
  Returns the desktop DPI resolution factor on the 'x' axis. If the value is '1', then no DPI factor has been applied to the display on the 'x' axis.
  If the value is '1.25', a 125% factor has been applied to the display on the 'x' axis.
  
@Example
@Code
  Debug "Desktop DPI 'x' factor: " + DesktopResolutionX()
@EndCode

@SeeAlso
  @@DesktopResolutionY, @@DesktopScaledX, @@DesktopScaledY, @@DesktopUnscaledX, @@DesktopUnscaledY

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result.d = DesktopResolutionY()

@Description
  Returns the desktop DPI resolution factor on the 'y' axis. 

@NoParameters

@ReturnValue
  Returns the desktop DPI resolution factor on the 'y' axis. If the value is '1', then no DPI factor has been applied to the display on the 'y' axis.
  If the value is '1.25', a 125% factor has been applied to the display on the 'y' axis.
  
@Example
@Code
  Debug "Desktop DPI 'y' factor: " + DesktopResolutionY()
@EndCode

@SeeAlso
  @@DesktopResolutionX, @@DesktopScaledX, @@DesktopScaledY, @@DesktopUnscaledX, @@DesktopUnscaledY

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopScaledX(Value)

@Description
  Returns the scaled value according to current display DPI on 'x' axis. This is mostly
  useful to calculate real pixel position independently of the display DPI.

@Parameter "Value"
  The value to use.

@ReturnValue
  Returns the scaled value according to current display DPI on 'x' axis. For example, on a display
  with a 125% DPI applied, a value of 100 will result to 125.

@Remarks
  The application needs to be compiled with the @ReferenceLink "ide_compiler" "'DPI Aware' switch" to have this command returning scaled DPI value. 
  If not, the result will be always be the same as 'Value' parameter.

@Example
@Code
  Debug "Desktop DPI 'x' scaled value of 100: " + DesktopScaledX(100)
@EndCode

@SeeAlso
  @@DesktopResolutionX, @@DesktopResolutionY, @@DesktopScaledY, @@DesktopUnscaledX, @@DesktopUnscaledY

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopScaledY(Value)

@Description
  Returns the scaled value according to current display DPI on 'y' axis. This is mostly
  useful to calculate real pixel position independently of the display DPI.

@Parameter "Value"
  The value to use.

@ReturnValue
  Returns the scaled value according to current display DPI on 'y' axis. For example, on a display
  with a 125% DPI applied, a value of 100 will result to 125.
  
@Remarks
  The application needs to be compiled with the @ReferenceLink "ide_compiler" "'DPI Aware' switch" to have this command returning scaled DPI value. 
  If not, the result will be always be the same as 'Value' parameter.  
  
@Example
@Code
  Debug "Desktop DPI 'y' scaled value of 100: " + DesktopScaledY(100)
@EndCode

@SeeAlso
  @@DesktopResolutionX, @@DesktopResolutionY, @@DesktopScaledX, @@DesktopUnscaledX, @@DesktopUnscaledY

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopUnscaledX(Value)

@Description
  Returns the unscaled value according to current display DPI on 'x' axis. This is mostly
  useful to calculate real pixel position independently of the display DPI.

@Parameter "Value"
  The value to use.

@ReturnValue
  Returns the unscaled value according to current display DPI on 'x' axis. For example, on a display
  with a 125% DPI applied, a value of 125 will result to 100.

@Example
@Code
  Debug "Desktop DPI 'x' unscaled value of 125: " + DesktopUnscaledX(125)
@EndCode

@SeeAlso
  @@DesktopResolutionX, @@DesktopResolutionY, @@DesktopScaledX, @@DesktopScaledY, @@DesktopUnscaledY

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopUnscaledY(Value)

@Description
  Returns the unscaled value according to current display DPI on 'y' axis. This is mostly
  useful to calculate real pixel position independently of the display DPI.

@Parameter "Value"
  The value to use.

@ReturnValue
  Returns the unscaled value according to current display DPI on 'y' axis. For example, on a display
  with a 125% DPI applied, a value of 125 will result to 100.

@Example
@Code
  Debug "Desktop DPI 'y' unscaled value of 125: " + DesktopUnscaledY(125)
@EndCode

@SeeAlso
  @@DesktopResolutionX, @@DesktopResolutionY, @@DesktopScaledX, @@DesktopScaledY, @@DesktopUnscaledX 

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopFrequency(#Desktop)

@Description
  Returns the frequency of the specified desktop. 

@Parameter "#Desktop"
  The index of the desktop. Should be always zero as only one web page is active at once.

@ReturnValue
  Returns the frequency of the specified desktop in Hertz. 
  If the return-value is 0 then the default hardware frequency is being used, or the actual frequency could not be determined.

@Remarks
  @@ExamineDesktops must be called before using this function to retrieve information about the available desktops.

@Example
@Code
  ExamineDesktops()
  Debug DesktopFrequency(0)
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth,
  @@DesktopHeight, @@DesktopName, @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopHeight(#Desktop)

@Description
  Returns the height of the specified desktop. 

@Parameter "#Desktop"
  The index of the desktop. Should be always zero as only one web page is active at once.

@ReturnValue
  Returns the height in pixels. The returned value is DPI independant, which means it's not 
  the real pixel count if the DPI factor is not 1. To get the real pixel count, use @@DesktopScaledY
  to scale the result (the @ReferenceLink "ide_compiler" "'DPI Aware' switch" needs to be activated).

@Remarks
  @@ExamineDesktops must be called before using this function to retrieve information about the available desktops.

@Example
@Code
  ExamineDesktops()
  MessageRequester("Current resolution = " + DesktopWidth(0) + "x" +  DesktopHeight(0) + "x" + DesktopDepth(0))
@EndCode

@Example Real pixel height
@Code
  ExamineDesktops()
  MessageRequester("Real physical resolution = " + DesktopScaledX(DesktopWidth(0)) + "x" +  DesktopScaledY(DesktopHeight(0)) + "x" + DesktopDepth(0))
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth, @@DesktopX, @@DesktopY, 
  @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopX(#Desktop)

@Description
  Returns the x coordinate of the specified desktop.

@Parameter "#Desktop"
  The index of the desktop. Should be always zero as only one web page is active at once.

@ReturnValue
  Will always retuns zero, as the web page has no offset.

@Remarks
  @@ExamineDesktops must be called before using this function to retrieve information about the available desktops.

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth, @@DesktopY, 
  @@DesktopHeight, @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopY(#Desktop)

@Description
  Returns the y coordinate of the specified desktop.

@Parameter "#Desktop"
  The index of the desktop. Should be always zero as only one web page is active at once.

@ReturnValue
  Will always retuns zero, as the web page has no offset.

@Remarks
  @@ExamineDesktops must be called before using this function to retrieve information about the available desktops.

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth, @@DesktopX, 
  @@DesktopHeight, @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopMouseX()

@Description
  Returns the absolute x position of the mouse on the desktop.

@NoParameters

@ReturnValue
  Returns the x coordinate (in pixel) of the mouse relative to the top left corner of the web page. If the mouse
  cursor is not inside the web page, it will returns -1.
  
@Example
@Code
  Procedure TimerEvent()
    SetGadgetText(0, "Desktop mouse position: " + DesktopMouseX() + "," + DesktopMouseY())
  EndProcedure
  
  If OpenWindow(0, 0, 0, 300, 30, "Desktop mouse monitor", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    TextGadget(0, 10, 6, 200, 20, "")
    
    AddWindowTimer(0, 1, 50) ; Uses a 50 ms timer for the realtime refresh
    BindEvent(#PB_Event_Timer, @TimerEvent(), 0, 1)
  EndIf
@EndCode

@SeeAlso
  @@DesktopMouseY, @@DesktopX, @@DesktopWidth, @@WindowMouseX

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopMouseY()

@Description
  Returns the absolute y position of the mouse on the desktop.

@NoParameters

@ReturnValue
  Returns the y coordinate (in pixel) of the mouse relative to the top left corner of the web page. If the mouse
  cursor is not inside the web page, it will returns -1.

@Example
@Code
  Procedure TimerEvent()
    SetGadgetText(0, "Desktop mouse position: " + DesktopMouseX() + "," + DesktopMouseY())
  EndProcedure
  
  If OpenWindow(0, 0, 0, 300, 30, "Desktop mouse monitor", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    TextGadget(0, 10, 6, 200, 20, "")
    
    AddWindowTimer(0, 1, 50) ; Uses a 50 ms timer for the realtime refresh
    BindEvent(#PB_Event_Timer, @TimerEvent(), 0, 1)
  EndIf
@EndCode

@SeeAlso
  @@DesktopMouseX, @@DesktopY, @@DesktopHeight, @@WindowMouseY

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result$ = DesktopName(#Desktop)

@Description
  Returns the web browser full name for the active web page. 

@Parameter "#Desktop"
  The index of the desktop. Should be always zero as only one web page is active at once.

@ReturnValue
  Returns a string with the web browser full name. If this information can't be retieved, an empty string is returned.

@Remarks
  @@ExamineDesktops must be called before using this function to retrieve information about the available desktops.

@Example
@Code
  ExamineDesktops()
  MessageRequester("Display Information", "Primary desktop name = "+DesktopName(0))
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth, @@DesktopFrequency,
  @@DesktopHeight, @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopWidth(#Desktop)

@Description
  Returns the width for the specified desktop. 

@Parameter "#Desktop"
  The index of the desktop. Should be always zero as only one web page is active at once.

@ReturnValue
  Returns the width in pixels. The returned value is DPI independant, which means it's not 
  the real pixel count if the DPI factor is not 1. To get the real pixel count, use @@DesktopScaledX
  to scale the result (the @ReferenceLink "ide_compiler" "'DPI Aware' switch" needs to be activated).

@Remarks
  @@ExamineDesktops must be called before using this function to retrieve information about the available desktops.

@Example
@Code
  ExamineDesktops()
  MessageRequester("Current resolution = " + DesktopWidth(0) + "x" +  DesktopHeight(0) + "x" + DesktopDepth(0))
@EndCode

@Example Real pixel width
@Code
  ExamineDesktops()
  MessageRequester("Real physical resolution = " + DesktopScaledX(DesktopWidth(0)) + "x" +  DesktopScaledY(DesktopHeight(0)) + "x" + DesktopDepth(0))
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth, @@DesktopX, @@DesktopY, 
  @@DesktopHeight

@SupportedOS

;--------------------------------------------------------------------------------------------------------

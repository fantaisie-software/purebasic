;
;     Font library documentation
;
;      (c) 2020 - Fantaisie Software
;

@Library Font

@Overview
  Zeichensätze (englisch "Fonts") sind auf Computern weit verbreitet, da sie die einzige Möglichkeit
  darstellen, Text in verschiedenen Größen und Formen auszugeben.
@LineBreak
@LineBreak
  Hinweis: Mit PureBasic ist die Verwendung farbiger Zeichensätze noch nicht möglich. Dies kann jedoch 
  mit Hilfe des @@StartDrawing Befehls und daran anschließendem Zeichnen
  direkt auf den sichtbaren Bereich erreicht werden.

@CommandList

@ExampleFile All Font.pb
@ExampleFile All FontRegister.pb

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function FreeFont(#Font)

@Description
  Gibt den angegebenen Zeichensatz frei, der zuvor mittels @@LoadFont initialisiert wurde.

@Parameter "#Font"
  Der freizugebende Zeichensatz. Wenn @#PB_All angegeben wird, dann werden alle verbliebenen Zeichensätze freigegeben.

@NoReturnValue

@Remarks
  Alle verbleibenden Zeichensätze werden automatisch freigegeben, wenn das Programm endet.

@SeeAlso
  @@LoadFont

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function FontID = FontID(#Font)

@Description
  Gibt den eindeutigen System-Identifier (Bezeichner) des Zeichensatzes zurück.

@Parameter "#Font"
  Der zu verwendende Zeichensatz.

@ReturnValue
  Gibt die ID des Zeichensatzes zurück.
  Dieses Ergebnis wird manchmal auch als 'Handle' bezeichnet. Schauen Sie in das Extra-Kapitel
  @ReferenceLink "handles" "'Handles und Nummern'" für weitere Informationen.

@Example
  Ein Beispiel für die Verwendung von FontID() in Kombination mit @@SetGadgetFont:
@Code
  If OpenWindow(0, 0, 0, 222, 130, "FontID()", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ButtonGadget(0, 10, 10, 200, 30, "Anklicken zum Ändern des Fonts...")
    Font1 = LoadFont(#PB_Any, "Arial"  ,  8, #PB_Font_Bold)
    Font2 = LoadFont(#PB_Any, "Verdana", 12, #PB_Font_StrikeOut)
    UsedFont = 1
  EndIf

  Repeat
    Event = WaitWindowEvent()

  If Event = #PB_Event_Gadget
    If EventGadget() = 0
      If UsedFont = 1
        SetGadgetFont(0, FontID(Font2))
        UsedFont = 2
      Else
        SetGadgetFont(0, FontID(Font1))
        UsedFont = 1
      EndIf
    EndIf
  EndIf

  Until Event = #PB_Event_CloseWindow
@EndCode

@SeeAlso
  @@LoadFont,
  @@SetGadgetFont,
  @@DrawingFont

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = IsFont(#Font)

@Description
  Überprüft, ob die angegebene #Font Nummer gültig und ein korrekt initialisierter Zeichensatz ist.

@Parameter "#Font"
  Der zu verwendende Zeichensatz.

@ReturnValue
  Gibt einen Wert ungleich Null zurück, wenn #Font ein gültiger Zeichensatz ist, andernfalls Null.

@Remarks
  Diese Funktion ist "kugelsicher" und kann mit jedem Wert benutzt werden. Ist das Ergebnis
  ungleich Null, dann ist das Objekt gültig und initialisiert, andernfalls wird Null zurückgegeben.
  Dies ist der richtige Weg, um sicher zu stellen, dass ein Zeichensatz bereit zur Verwendung ist.

@SeeAlso
  @@LoadFont

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = LoadFont(#Font, Name$, Höhe [, Flags])

@Description
  Versucht den angegebenen Zeichensatz zu öffnen. 

@Parameter "#Font"
  Die Nummer, durch welche der neue Zeichensatz identifiziert wird.
  @ReferenceLink "purebasic_objects" "#PB_Any" kann verwendet werden, um diese Nummer
  automatisch zu generieren.

@Parameter "Name$"
  Der Name des zu ladenden Zeichensatzes.

@Parameter "Höhe"
  Die vertikale Größe des Zeichensatzes in Punkten.

@OptionalParameter "Flags"
  Optionale Varianten des zu ladenden Zeichensatzes.
  Dies kann eine Kombination der folgenden Konstanten sein:
@FixedFont
  @#PB_Font_Bold       : Fettschrift
  @#PB_Font_Italic     : Kursiv (Schrägschrift)
  @#PB_Font_Underline  : Unterstrichen (nur auf Windows)
  @#PB_Font_StrikeOut  : Durchgestrichen (nur auf Windows)
  @#PB_Font_HighQuality: Zeichensatz mit höchster Qualität laden (langsamer) (nur auf Windows)
@EndFixedFont

@ReturnValue
  Gibt einen Wert ungleich Null zurück, wenn der Zeichensatz erfolgreich geladen wurde,
  und Null wenn nicht. Wenn @#PB_Any als #Font Parameter verwendet wurde,
  dann wird bei Erfolg die generierte Nummer zurückgegeben.

@Remarks
  Wenn vorher ein anderer Zeichensatz mit der gleichen '#Font' Nummer geladen wurde, wird dieser
  automatisch freigegeben.
@LineBreak
@LineBreak
  Auf Windows und OS X wird der systemseitige Font-Mapper (die Schriftart-Zuordnung) immer versuchen,
  eine Schriftart zu finden. Wenn ein nicht existierender Zeichensatz-Name wie
  z.B. "Tim Now Ronin" verwendet wird, dann versucht der Font-Mapper den am besten
  passenden zu finden. Dies wird anhand solcher Kriterien wie Zeichensatz-Name,
  Zeichensatz-Höhe, Stil usw. erfolgen. Daher kann also nicht davon ausgegangen
  werden, dass kein Zeichensatz geladen wird, nur wegen inkorrektem Namen, Größe, etc...

@Example
@Code
  If OpenWindow(0, 0, 0, 270, 160, "Loading font...", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    If LoadFont(1, "Arial", 24)
      SetGadgetFont(#PB_Default, FontID(1))
      TextGadget(0, 10, 10, 250, 40, "Arial 24")
    EndIf
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@LineBreak

@SeeAlso
  @@FontID, @@FreeFont

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = RegisterFontFile(DateiName$)

@Description
  Registriert eine Zeichensatz-Datei für die Verwendung mit dem @@LoadFont Befehl. Alle in der Datei
  enthaltenen Zeichensätze sind dann verfügbar.

@Parameter "DateiName$"
  Die Datei, welche den Zeichensatz beinhaltet. Die Datei muss im TrueType-Format vorliegen.

@ReturnValue
  Gibt einen Wert ungleich Null zurück, wenn die Datei erfolgreich registriert wurde.

@Remarks
  Die Zeichensatz-Datei wird nur für das aktuelle Programm registriert. Dies bedeutet, dass die
  Schrift(en) nicht für andere Programme zugänglich ist (sind) und sie auch nicht mehr registriert
  sein wird (werden), wenn das Programm endet. Durch diesen Befehl werden keine systemweiten
  Änderungen vorgenommen.
@LineBreak
@LineBreak  
  Sie können keine registrierte Schriftart mit der @LibraryLink "VectorDrawing" "VectorDrawing"-Bibliothek verwenden.

@Example
@Code
  ; Nun lasst uns einen neuen Zeichensatz nutzen, der aus dem Internet in das temporäre Verzeichnis geladen wurde...
  ; Der Zeichensatz-Name lautet "ascii" und dessen Datei ist die "ascii.ttf"
  If RegisterFontFile(GetTemporaryDirectory() + "ascii.ttf") ; Wir müssen sie registrieren, bevor wir sie nutzen können
    LoadFont(0, "ascii", 12) ; Jetzt können wir den Zeichensatz laden, das Betriebssystem kennt ihn
    SetGadgetFont(0, FontID(0))
  ...
@EndCode

@ExampleFile All FontRegister.pb


@SeeAlso
  @@LoadFont

@SupportedOS

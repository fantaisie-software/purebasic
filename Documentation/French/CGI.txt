;
;     CGI library documentation
;
;      (c) - Fantaisie Software
;

@Library CGI

@Overview
  CGI signifie "Common Gateway Interface" 
  (littéralement "Interface de passerelle 
  commune") et généralement abrégée en "CGI". 
  Elle permet de créer des applications côté serveur.
  Cette bibliothèque fournit toutes les commandes 
  nécessaires pour recevoir les requêtes ou les 
  fichiers, répondre et faire diverses autres 
  opérations. CGI et le mode FastCGI sont pris en 
  charge tous les deux.
  @LineBreak
  @LineBreak
  L'article Wikipedia sur @InternetLink "https://en.wikipedia.org/wiki/Common_Gateway_Interface" "CGI" 
  fournit un bon point de départ pour les débutants à CGI (en anglais).  @LineBreak
  L'article Wikipedia sur @InternetLink "https://fr.wikipedia.org/wiki/Common_Gateway_Interface" "CGI" 
  en français.
    
@CommandList

@ExampleFile All CGI.pb

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat$ = CGICookieName(Index)

@Description
  Renvoie le nom du cookie spécifié.
  
@Parameter "Index"
  L'indice du cookie. @LineBreak
  La première valeur de l'indice commence à 0.

@ReturnValue
  Renvoie le nom du cookie spécifié.
  
@Remarks
  Pour obtenir le nombre de cookies disponibles, 
  utiliser @@CountCGICookies.
  
@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html") ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  WriteCGIHeader(#PB_CGI_HeaderSetCookie  , "mycookie=hello", #PB_CGI_LastHeader) ; Ecrit un cookie nommé 'mycookie'
  
  WriteCGIString("<html><title>PureBasic - cookies</title><body>" +
                 "NbCookies: " + CountCGICookies() + "<br><br>")

  ; Liste tous les cookies et affiche leur nom et leur valeur
  ;
  For k = 0 To CountCGICookies()-1 
    WriteCGIString(CGICookieName(k)+": " + CGICookieValue(CGICookieName(k)) + "<br>")
  Next
    
  WriteCGIString("</body></html>")
@EndCode

@SeeAlso
  @@CountCGICookies, @@CGICookieValue

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat$ = CGICookieValue(Nom$)

@Description
  Renvoie la valeur du cookie spécifié.
  
@Parameter "Nom$"
  Le nom du cookie. @LineBreak
  Le nom du cookie est sensible à la casse.

@ReturnValue
  Renvoie la valeur du cookie spécifié.
  
@Remarks
  La fonction @@CGICookieName peut être utilisée 
  pour obtenir le nom d'un cookie spécifié.
  @LineBreak
  @LineBreak
  Pour obtenir le nombre de cookies disponibles, 
  utiliser @@CountCGICookies.
  
@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html") ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  WriteCGIHeader(#PB_CGI_HeaderSetCookie  , "mycookie=hello", #PB_CGI_LastHeader) ; Ecrit un cookie nommé 'mycookie'
  
  WriteCGIString("<html><title>PureBasic - cookies</title><body>" +
                 "NbCookies: " + CountCGICookies() + "<br><br>")

  ; Liste tous les cookies et affiche leur nom et leur valeur
  ;
  For k = 0 To CountCGICookies()-1 
    WriteCGIString(CGICookieName(k)+": " + CGICookieValue(CGICookieName(k)) + "<br>")
  Next

  WriteCGIString("</body></html>")
@EndCode

@SeeAlso
  @@CountCGICookies, @@CGICookieName

@SupportedOS


;--------------------------------------------------------------------------------------------------------

@Function Resultat = CountCGICookies()

@Description
  Renvoie le nombre de cookies disponibles. 
  
@NoParameters

@ReturnValue
  Renvoie le nombre de cookies disponibles. 
  
@Remarks
  Les cookies sont des petits fichiers 
  persistants stockés par le navigateur 
  Web pour permettre de se rappeler un 
  contexte et faciliter la navigation 
  future lors du chargement de la même 
  page plus tard.
  @LineBreak
  @LineBreak
  S'il vous plaît noter que la législation 
  européenne impose désormais d'informer 
  les utilisateurs que les cookies ne sont 
  pas utilisés pour recueillir des informations 
  inutilement.
  @LineBreak
  @LineBreak
  Le nom et la valeur des cookies peuvent 
  être obtenus avec @@CGICookieName et 
  @@CGICookieValue.
  
@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html") ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  WriteCGIHeader(#PB_CGI_HeaderSetCookie  , "mycookie=hello", #PB_CGI_LastHeader) ; Ecrit un cookie nommé 'mycookie'
  
  WriteCGIString("<html><title>PureBasic - cookies</title><body>" +
                 "NbCookies: " + CountCGICookies() + "<br><br>")

  WriteCGIString("</body></html>")
@EndCode

@SeeAlso
  @@CGICookieName, @@CGICookieValue

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = CountCGIParameters()

@Description
  Renvoie le nombre de paramètres 
  disponibles après une requête 
  GET ou POST.
    
@NoParameters

@ReturnValue
  Renvoie le nombre de paramètres 
  disponibles après une requête 
  GET ou POST.
  
@Remarks
 Des paramètres peuvent être obtenus 
 avec @@CGIParameterName, 
 @@CGIParameterValue et @@CGIParameterType.

@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader) ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  
  WriteCGIString("<html><title>PureBasic - parameters</title><body>" +
                 "NbParameters: " + CountCGIParameters() + "<br><br>")

  WriteCGIString("</body></html>")
@EndCode

@SeeAlso
  @@CGIParameterName, @@CGIParameterValue, 
  @@CGIParameterType, @@CGIParameterData

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = CGIParameterName(Index)

@Description
  Renvoie le nom du paramètre spécifié.
  
@Parameter "Index"
  L'indice du paramètre. @LineBreak
  La première valeur de l'indice commence à 0.

@ReturnValue
  Renvoie le nom du paramètre spécifié.
  
@Remarks
  Pour obtenir le nombre de paramètres 
  disponibles, utiliser @@CountCGIParameters.
  
@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader) ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  
  WriteCGIString("<html><title>PureBasic - parametres</title><body>" +
                 "NbParametres: " + CountCGIParameters() + "<br><br>")
  
  ; La liste de tous les paramètres et affiche leur nom
  ;
  For k = 0 To CountCGIParameters()-1 
    WriteCGIString(CGIParameterName(k)+"<br>")
  Next
  
  WriteCGIString("</body></html>")
@EndCode

@SeeAlso
  @@CountCGIParameters, @@CGIParameterValue, 
  @@CGIParameterType

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = CGIParameterValue(Nom$ [, Index])

@Description
  Renvoie la valeur du paramètre spécifié.
  
@Parameter "Nom$"
  Le nom du paramètre.
  @LineBreak 
  @LineBreak  
  Le nom du paramètre est sensible à la 
  casse.  @LineBreak
  Ce paramètre sera ignoré si un 
  "Index" est spécifié.

@OptionalParameter "Index"
  L'index du paramètre à chercher.
  @LineBreak  
  @LineBreak    
  La première valeur de l'indice commence 
  à 0.
  @LineBreak
  Si spécifié, la valeur du paramètre 'Nom$' 
  est ignorée (sauf si @#PB_Ignore est utilisé).
  
@ReturnValue
  Renvoie la valeur du paramètre spécifié.
  
@Remarks
  @@CGIParameterName peut être utilisé pour 
  obtenir le nom d'un paramètre spécifié.
  @LineBreak
  Pour obtenir le nombre de paramètres 
  disponibles, utiliser @@CountCGIParameters.
  @LineBreak  
  
  
@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader) ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  
  WriteCGIString("<html><title>PureBasic - parametres</title><body>" +
                 "NbParametres: " + CountCGIParameters() + "<br><br>")
  
  ; La liste des tous les paramètres et affiche leur nom et leur valeur
  ;
  For k = 0 To CountCGIParameters()-1 
    WriteCGIString(CGIParameterName(k) + ": " + CGIParameterValue("", k) + "<br>")
  Next
  
  WriteCGIString("</body></html>")
@EndCode

@SeeAlso
  @@CountCGIParameters, @@CGIParameterName, 
  @@CGIParameterType

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = CGIParameterType(Nom$ [, Index])

@Description
  Renvoie le type du paramètre spécifié.
  
@Parameter "Nom$"
  Le nom du paramètre.@LineBreak 
  Le nom du paramètre est sensible à la 
  casse.

@OptionalParameter "Index"
  La première valeur de l'indice commence à 0.
  @LineBreak
  Si spécifié, la valeur du paramètre 'Nom$' 
  est ignorée (sauf si @#PB_Ignore est utilisé).

@ReturnValue
  Renvoie le type du paramètre spécifié.
  @LineBreak
  Peut être l'une des valeurs suivantes:
@FixedFont
  @#PB_CGI_Text: le paramètre est une chaîne
  @#PB_CGI_File: le paramètre est un fichier binaire. 
                @@CGIParameterValue renverra le nom du fichier original et
                @@CGIParameterData récupèrera les données binaires.
@EndFixedFont
   
@Remarks
  @@CGIParameterName peut être utilisé 
  pour obtenir le nom d'un paramètre 
  spécifié.@LineBreak
  Pour obtenir le nombre de paramètres 
  disponibles, utiliser @@CountCGIParameters.
 
@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader) ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  
  WriteCGIString("<html><title>PureBasic - parametres</title><body>" +
                 "NbParametres: " + CountCGIParameters() + "<br><br>")
  
  ; La liste des tous les paramètres et affiche leur nom
  ;
  For k = 0 To CountCGIParameters()-1
    If CGIParameterType("", k) = #PB_CGI_File
      WriteCGIString("[Fichier] "+CGIParameterName(k)+" (nom: "+CGIParameterValue("", k)+")<br>")
    Else
      WriteCGIString("[Chaine] "+CGIParameterName(k)+" (valeur: "+CGIParameterValue("", k)+")<br>")
    EndIf
  Next
  
  WriteCGIString("</body></html>")
@EndCode

@SeeAlso
  @@CGIParameterName, @@CGIParameterValue, 
  @@CGIParameterData, @@CGIParameterDataSize

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function *Resultat = CGIParameterData(Nom$ [, Index])

@Description
  Renvoie l'adresse de la mémoire tampon 
  du paramètre spécifié.
  
@Parameter "Nom$"
  Le nom du paramètre.@LineBreak 
  Le nom du paramètre est sensible à la 
  casse.

@OptionalParameter "Index"
  La première valeur de l'indice commence à 0.
  @LineBreak
  Si spécifié, la valeur du paramètre 'Nom$' 
  est ignorée (sauf si @#PB_Ignore est utilisé).

@ReturnValue
  Renvoie l'adresse de la mémoire tampon 
  du paramètre spécifié. @LineBreak 
  Le type de paramètre doit être @#PB_CGI_File.
    
@Remarks
  @@CGIParameterName peut être utilisé 
  pour obtenir le nom d'un paramètre 
  spécifié.@LineBreak
  Pour obtenir le nombre de paramètres 
  disponibles, utiliser @@CountCGIParameters.
  @LineBreak
  @@CGIParameterDataSize peut être utilisé 
  pour obtenir la taille de la mémoire tampon.
 
  
@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader) ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  
  WriteCGIString("<html><title>PureBasic - parametres</title><body>" +
                 "NbParametres: " + CountCGIParameters() + "<br><br>")
  
  ; La liste des tous les paramètres et affiche leur nom
  ;
  For k = 0 To CountCGIParameters()-1
    If CGIParameterType("", k) = #PB_CGI_File
      WriteCGIString("[Fichier] "+CGIParameterName(k)+" (nom: '"+CGIParameterValue("", k) +
                                                   "' - taille: " + CGIParameterDataSize("", k) + 
                                                   " octets - *buffer: " + CGIParameterData("", k) + ")<br>")
    EndIf
  Next
  
  WriteCGIString("</body></html>")
@EndCode

@SeeAlso
  @@CGIParameterName, @@CGIParameterValue, 
  @@CGIParameterType, @@CGIParameterDataSize

@SupportedOS


;--------------------------------------------------------------------------------------------------------

@Function Resultat = CGIParameterDataSize(Nom$ [, Index])

@Description
  Renvoie la taille des données du paramètre 
  spécifié.
  
@Parameter "Nom$"
  Le nom du paramètre.@LineBreak 
  Le nom du paramètre est sensible à la 
  casse.

@OptionalParameter "Index"
  La première valeur de l'indice commence à 0.
  @LineBreak
  Si spécifié, la valeur du paramètre 'Nom$' 
  est ignorée (sauf si @#PB_Ignore est utilisé).

@ReturnValue
  Renvoie la taille des données (en octets) 
  du paramètre spécifié. @LineBreak 
  Le type de paramètre doit être @#PB_CGI_File.
    
@Remarks
  @@CGIParameterName peut être utilisé 
  pour obtenir le nom d'un paramètre 
  spécifié.@LineBreak
  Pour obtenir le nombre de paramètres 
  disponibles, utiliser @@CountCGIParameters.
  @LineBreak
  @@CGIParameterDataSize peut être utilisé 
  pour obtenir la taille de la mémoire tampon.
  
@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader) ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  
  WriteCGIString("<html><title>PureBasic - parametres</title><body>" +
                 "NbParametres: " + CountCGIParameters() + "<br><br>")
  
  ; La liste des tous les paramètres et affiche leur nom
  ;
  For k = 0 To CountCGIParameters()-1
    If CGIParameterType("", k) = #PB_CGI_File
      WriteCGIString("[Fichier] "+CGIParameterName(k)+" (nom: '"+CGIParameterValue("", k) +
                                                   "' - taille: " + CGIParameterDataSize("", k) + 
                                                   " octets - *buffer: " + CGIParameterData("", k) + ")<br>")
    EndIf
  Next
  
  WriteCGIString("</body></html>")
@EndCode

@SeeAlso
  @@CGIParameterName, @@CGIParameterValue, 
  @@CGIParameterType, @@CGIParameterData

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function *Resultat = CGIBuffer()

@Description
  Pour les utilisateurs avancés. Renvoie 
  l'adresse de la mémoire tampon de 
  l'entrée brute CGI (utile seulement 
  pour une requête de type POST). 
  
@NoParameters

@ReturnValue
  Renvoie l'adresse de la mémoire tampon 
  de l'entrée CGI brute, ou zéro si une 
  erreur est survenue.
  
@Remarks
  Il peut être utile de faire une analyse 
  (parse) supplémentaire non prise en charge 
  par cette bibliothèque tout en utilisant 
  d'autres commandes. La taille de la mémoire 
  tampon est la valeur renvoyée par @@ReadCGI.
  
@Example
@Code
  If Not InitCGI()
    End
  EndIf
  
  BufferSize = ReadCGI()
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader) ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  
  WriteCGIString("<html><title>PureBasic - tampon brut(raw)</title><body>")  
  If CGIBuffer()
    WriteCGIString("le tampon brut contient: <br><pre>" + PeekS(CGIBuffer(), BufferSize, #PB_Ascii) + "</pre>")
  EndIf
  
  WriteCGIString("</body></html>")
@EndCode

@SeeAlso
  @@ReadCGI

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat$ = CGIVariable(Nom$)

@Description
  Renvoie le contenu de la variable 
  d'environnement CGI spécifiée. 

@Parameter "Nom$"
  Le nom de la variable à obtenir.@LineBreak
  Peut être une valeur personnalisée ou 
  l'une des constantes prédéfinies suivantes:
@FixedFont
  @#PB_CGI_AuthType          : le procédé d'authentification utilisé par le navigateur Web 
                              si un quelconque procédé d'authentification a été utilisé.
                              Il n'est pas défini, sauf si le script est protégé.
                     
  @#PB_CGI_ContentLength     : utilisé pour les scripts qui reçoivent des données de 
                              formulaire utilisant la méthode POST. Cette variable 
                              indique la longueur en octets du flux de données d'entrée 
                              de CGI. Cela est nécessaire pour lire les données à partir 
                              de l'entrée standard avec la méthode POST.
                         
  @#PB_CGI_HeaderContentType : indique le type de support de données en cours de réception 
                              de l'utilisateur.
                              il est utilisé pour les scripts appelés en utilisant la méthode POST.
  @#PB_CGI_DocumentRoot      : le chemin de la racine de la page d'accueil HTML pour le serveur.
  @#PB_CGI_GatewayInterface  : la version de CGI utilisé pour échanger les données entre le client et le serveur. 
                              Généralement c'est CGI/1.1 pour le niveau de révision actuel.
  @#PB_CGI_PathInfo          : informations de chemin supplémentaire ajouté à la fin de l'URL qui a accédé au programme de script côté serveur.
  @#PB_CGI_PathTranslated    : une version traduite de la variable PATH_INFO par le serveur Web du virtuel vers le chemin physique.
  @#PB_CGI_QueryString       : cette chaîne contient des informations à la fin du chemin de script côté serveur 
                              qui a suivi un point d'interrogation. 
                              Utilisé pour renvoyer les données si la méthode GET a été utilisé par un formulaire. 
                              Il y a des restrictions de longueur à la QUERY_STRING. 
  @#PB_CGI_RemoteAddr        : l'adresse IP de l'ordinateur client.
  @#PB_CGI_RemoteHost        : le nom de domaine complet de la machine du client faisant la requête HTTP. 
                              Il peut ne pas être possible de déterminer ce nom puisque les noms de nombreux ordinateurs clients 
                              ne sont pas enregistrées dans le système DNS.
  @#PB_CGI_RemoteIdent       : la possibilité d'utiliser cette variable est limitée aux serveurs qui prennent 
                              en charge la RFC 931. Cette variable peut contenir le nom d'utilisateur de la machine 
                              cliente, mais il est destiné à être utilisé à des fins d'exploitation du fichier log, 
                              quand il est disponible.
  @#PB_CGI_RemotePort        : le port utilisé par les clients. 
  @#PB_CGI_RemoteUser        : si le script CGI a été protégé et l'utilisateur a été connecté pour accéder au script, 
                              cette valeur contient le journal de l'utilisateur.
  @#PB_CGI_RequestURI        : le chemin vers le fichier demandé par le client.
  @#PB_CGI_RequestMethod     : décrit la méthode de requête utilisée par le navigateur qui est habituellement GET, POST, ou HEAD.
  @#PB_CGI_ScriptName        : le chemin virtuel du script CGI en cours d'exécution.
  @#PB_CGI_ScriptFilename    : le nom de fichier local du script en cours d'exécution.
  @#PB_CGI_ServerAdmin       : l'adresse e-mail de l'administrateur du serveur. 
  @#PB_CGI_ServerName        : le nom du serveur, l'adresse IP ou le nom alias DNS présentée comme une URL d'auto-référencement. 
                              Cela ne comprend pas l'identificateur de protocole tel que "HTTP", le nom de la machine, ou le numéro de port.
  @#PB_CGI_ServerPort        : le numéro de port sur lequel les requêtes et les réponses HTTP sont envoyées.
  @#PB_CGI_ServerProtocol    : cette valeur est généralement HTTP qui décrit le protocole utilisé entre les ordinateurs client et serveur.
  @#PB_CGI_ServerSignature   : information sur le serveur en spécifiant le nom et la version du serveur Web et le port.
  @#PB_CGI_ServerSoftware    : le nom et la version du serveur web.
  @#PB_CGI_HttpAccept        : les types de supports de données que le navigateur client peut accepter. 
                              Ces types de données sont séparées par des virgules.
  @#PB_CGI_HttpAcceptEncoding: le type d'encodage que le navigateur client accepte.
  @#PB_CGI_HttpAcceptLanguage: la langue que le navigateur client accepte.
  @#PB_CGI_HttpCookie        : utilisé comme une variable d'environnement qui contient les cookies associés au domaine du serveur depuis le navigateur.
  @#PB_CGI_HttpForwarded     : l'URL de la page transmise juste avant.
  @#PB_CGI_HttpHost          : nom de l'hôte d'où viennent les requêtes HTTP.
  @#PB_CGI_HttpPragma        : pragmas HTTP 
  @#PB_CGI_HttpReferer       : l'adresse de la page d'où la requête HTTP est originaire. 
  @#PB_CGI_HttpUserAgent     : le nom du navigateur Web du client qui a envoyé la requête.
@EndFixedFont


@ReturnValue
  Renvoie la valeur de la variable 
  d'environnement CGI spécifiée.
  
@Remarks
  Lorsque le CGI est chargé, de nombreuses 
  informations sont envoyées du serveur Web 
  vers l'application CGI à travers les variables 
  d'environnement.
  
@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader) ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  
  WriteCGIString("<html><title>PureBasic - variables</title><body>")  
  
  Procedure WriteCGIConstant(Constant$)
    WriteCGIString(Constant$ + ": " + CGIVariable(Constant$)+"<br>")
  EndProcedure
  
  WriteCGIConstant(#PB_CGI_AuthType)
  WriteCGIConstant(#PB_CGI_ContentLength)
  WriteCGIConstant(#PB_CGI_HeaderContentType)
  WriteCGIConstant(#PB_CGI_DocumentRoot)
  WriteCGIConstant(#PB_CGI_GatewayInterface)
  WriteCGIConstant(#PB_CGI_PathInfo)
  WriteCGIConstant(#PB_CGI_PathTranslated)
  WriteCGIConstant(#PB_CGI_QueryString)
  WriteCGIConstant(#PB_CGI_RemoteAddr)
  WriteCGIConstant(#PB_CGI_RemoteHost)
  WriteCGIConstant(#PB_CGI_RemoteIdent)
  WriteCGIConstant(#PB_CGI_RemotePort)
  WriteCGIConstant(#PB_CGI_RemoteUser)
  WriteCGIConstant(#PB_CGI_RequestURI)
  WriteCGIConstant(#PB_CGI_RequestMethod)
  WriteCGIConstant(#PB_CGI_ScriptName)
  WriteCGIConstant(#PB_CGI_ScriptFilename)
  WriteCGIConstant(#PB_CGI_ServerAdmin)
  WriteCGIConstant(#PB_CGI_ServerName)
  WriteCGIConstant(#PB_CGI_ServerPort)
  WriteCGIConstant(#PB_CGI_ServerProtocol)
  WriteCGIConstant(#PB_CGI_ServerSignature)
  WriteCGIConstant(#PB_CGI_ServerSoftware)
  WriteCGIConstant(#PB_CGI_HttpAccept)
  WriteCGIConstant(#PB_CGI_HttpAcceptEncoding)
  WriteCGIConstant(#PB_CGI_HttpAcceptLanguage)
  WriteCGIConstant(#PB_CGI_HttpCookie)
  WriteCGIConstant(#PB_CGI_HttpForwarded)
  WriteCGIConstant(#PB_CGI_HttpHost)
  WriteCGIConstant(#PB_CGI_HttpPragma)
  WriteCGIConstant(#PB_CGI_HttpReferer)
  WriteCGIConstant(#PB_CGI_HttpUserAgent)
  
  WriteCGIString("</body></html>")
@EndCode

@SeeAlso
  @@ReadCGI

@SupportedOS

  
;--------------------------------------------------------------------------------------------------------

@Function FinishFastCGIRequest()

@Description
  Termine la requête FastCGI en cours 
  et libère toutes les ressources 
  associées. 
  
@NoParameters

@ReturnValue
  Renvoie une valeur non nulle si une 
  nouvelle requête a été traitée.
  
@Remarks
  Il n'est pas obligatoire d'utiliser cette 
  commande, car la demande sera automatiquement 
  terminée lorsque @@WaitFastCGIRequest() 
  est appelée de nouveau, ou quand le thread 
  se termine. @LineBreak
  Cela peut être utile dans certains cas 
  particuliers où les ressources sont 
  faibles avant de faire un autre 
  traitement.   

@Example
@Code
  If Not InitCGI()
    End
  EndIf
  
  If Not InitFastCGI(5600) ; Crée le programme FastCGI sur le port 5600
    End
  EndIf
  
  While WaitFastCGIRequest()
  
    If ReadCGI()
      WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader) ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  
      WriteCGIString("<html><title>PureBasic - FastCGI</title><body>" +
                     "Hello depuis PureBasic FastCGI !<br>" +
                     "Heure actuelle: <b>"+FormatDate("%hh:%ii", Date()) + "</b>" +
                     "</body></html>")
                     
      FinishFastCGIRequest()
      
      ; Traiter des choses ici...
      ;
      Delay(1000) ; Simuler un grand traitement
      
    EndIf
  Wend
@EndCode

@SeeAlso
  @@InitCGI, @@InitFastCGI, 
  @@WaitFastCGIRequest

@SupportedOS
  
 
;--------------------------------------------------------------------------------------------------------

@Function Resultat = InitCGI([TailleRequeteMax])

@Description
  Initialise l'environnement CGI.
  
@OptionalParameter "TailleRequeteMax"
  La taille maximale de la requête, 
  en octets (la valeur par défaut est 
  de 50 Mo).
  @LineBreak
  @LineBreak
  Lors de l'envoi de grande quantité 
  de données (comme les fichiers binaires), 
  il pourrait être utile de spécifier une 
  valeur plus grande.

@ReturnValue
  Renvoie une valeur non nulle si 
  l'environnement CGI a été 
  correctement initialisé.
  
@Remarks
  Cette fonction doit être appelée 
  avec succès avant d'utiliser 
  d'autres commandes de cette 
  bibliothèque.
  
@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader) ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  
  WriteCGIString("<html><title>PureBasic - variables</title><body>" +
                 "Hello depuis PureBasic CGI !" +
                 "</body></html>")
@EndCode

@SeeAlso
  @@ReadCGI

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = InitFastCGI(PortLocal [, LiaisonIP$])

@Description
  Initialise le support de FastCGI. 
  Une fois appelées, toutes les commandes de 
  CGI commutent automatiquement vers FastCGI.
  Cette bibliothèque supporte la gestion des 
  threads FastCGI, à condition d'activer le 
  mode "Activer la gestion des Threads" 
  de PureBasic.
  FastCGI n'est prise en charge uniquement 
  qu'à travers un socket local. 
  @@InitCGI doit être appelée avant d'utiliser 
  cette commande.
  @LineBreak
  @LineBreak
  Contrairement à un programme CGI standard 
  qui est lancé à chaque requête, le 
  programme FastCGI reste en mémoire une fois 
  lancé et peut gérer un certain nombre de 
  demandes. Ce peut être très utile si 
  l'initialisation de CGI prend du temps 
  (comme la connexion à une base de données 
  par exemple).  
  
@Parameter "PortLocal"
  Le port local à utiliser.@LineBreak
  Le serveur web doit être configuré pour 
  utiliser ce port.
  
@OptionalParameter "LiaisonIP$"
  L'adresse IP à lier à l'application FastCGI. @LineBreak
  Pour l'instant, seuls "localhost" ou "127.0.0.1" sont acceptés.

@ReturnValue
  Renvoie une valeur non nulle si 
  l'environnement FastCGI a été 
  correctement initialisé.

@Remarks
  FastCGI peut être beaucoup plus facile 
  à utiliser que CGI pour le développement, 
  car le programme peut rester en mémoire 
  et être déboggué comme une simple application 
  PureBasic.
  @LineBreak
  @LineBreak
  Pour configurer le support FastCGI sur Apache, 
  vous devez activer les modules 'mod_proxy' et 
  'mod_proxy_fcgi', puis ajouter une déclaration 
  'ProxyPass' dans la configuration:
@FixedFont  
  ProxyPass /myfastcgiapp/ fcgi://localhost:5600/
@EndFixedFont  
  Ici, l'url '/myfastcgiapp' va rediriger 
  vers le programme FastCGI qui attend 
  sur le port 5600. @LineBreak
  Il est également possible d'exécuter le 
  programme de FastCGI sur le serveur distant.
  
@Example
@Code
  If Not InitCGI()
    End
  EndIf
  
  If Not InitFastCGI(5600) ; Crée le programme FastCGI sur le port 5600
    End
  EndIf
  
  While WaitFastCGIRequest()
  
    If ReadCGI()
      WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader) ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  
      WriteCGIString("<html><title>PureBasic - FastCGI</title><body>" +
                     "Hello depuis PureBasic FastCGI !<br>" +
                     "Temps actuel: <b>"+FormatDate("%hh:%ii", Date()) + "</b>" +
                     "</body></html>")
    EndIf
    
  Wend
@EndCode

@SeeAlso
  @@InitCGI, @@WaitFastCGIRequest

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ReadCGI()

@Description
  Lit la requête CGI.
  
@NoParameters
  
@ReturnValue
  Renvoie une valeur non nulle si 
  la requête CGI a été lue avec succès.
  @LineBreak
  Si la requête était trop importante ou 
  si une autre erreur survient alors zéro 
  est renvoyé et le programme CGI doit 
  être terminé.
  
@Remarks  
  @@InitCGI doit être appelé avec 
  succès avant d'essayer le lire 
  la requête CGI.

@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader) ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  
  WriteCGIString("<html><title>PureBasic - variables</title><body>" +
                 "Hello depuis PureBasic CGI !" +
                 "</body></html>")
@EndCode

@SeeAlso
  @@InitCGI

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = WriteCGIFile(Fichier$)

@Description
  Écrit un fichier entier sur la sortie CGI.
 
@Parameter "Fichier$"
  Le fichier à écrire sur la sortie CGI.
  
@ReturnValue
  Renvoie une valeur non nulle si le 
  fichier a été écrit avec succès sur 
  la sortie CGI.

@Remarks  
  Lors de l'envoi des données binaires, 
  l'en-tête "Content-Type" doit être 
  défini en "application/octet-stream '. 

@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "application/octet-stream")
  WriteCGIHeader(#PB_CGI_HeaderContentDisposition, "attachment; filename=test.bmp", #PB_CGI_LastHeader)
  
  WriteCGIFile(#PB_Compiler_Home + "examples/sources/data/PureBasic.bmp")
@EndCode

@SeeAlso
  @@InitCGI, @@WriteCGIHeader

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = WriteCGIData(*Memoire, Taille)

@Description
  Écrit les données binaires sur la sortie CGI.
  
@Parameter "*Memoire"
  Le tampon en mémoire à écrire.
  
@Parameter "Taille"
  La taille (en octets) à écrire.

@ReturnValue
  Renvoie une valeur non nulle si les 
  données ont été écrites avec succès 
  sur la sortie CGI.

@Remarks  
  Lors de l'envoi des données binaires, 
  l'en-tête "Content-Type" doit être 
  défini en "application/octet-stream '. 

@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "application/octet-stream")
  WriteCGIHeader(#PB_CGI_HeaderContentDisposition, "attachment; filename=image.png", #PB_CGI_LastHeader)
  
  If ReadFile(0, #PB_Compiler_Home + "examples/sources/data/world.png")
    Taille = Lof(0)
    *Memoire = AllocateMemory(Taille)
    ReadData(0, *Memoire, Taille) ; Lire l'intégralité du dossier dans le nouveau tampon mémoire
    
    WriteCGIData(*Memoire, Taille) ; Écrivez le tampon entier sur la sortie CGI
    
    CloseFile(0)
  EndIf
@EndCode

@SeeAlso
  @@InitCGI, @@WriteCGIHeader, 
  @@WriteCGIFile

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = WriteCGIHeader(EnTete$, Valeur$ [, Options])

@Description
  Ecrit un en-tête sur la sortie 
  de CGI.@LineBreak
  Les en-têtes doivent être écrits 
  avant toutes autres données.
  
@Parameter "EnTete$"
  L'en-tête à écrire.@LineBreak
  Peut être une valeur personnelle 
  ou l'une des valeurs suivantes:
@FixedFont
  @#PB_CGI_HeaderContentLength : la longueur (en octets) du flux de sortie (implique des données binaires).
  @#PB_CGI_HeaderContentType   : le type MIME du contenu du flux de sortie.
  @#PB_CGI_HeaderExpires       : date et heure lorsque le document n'est plus valide et doit être rechargé par le navigateur.
  @#PB_CGI_HeaderLocation      : redirection du serveur (ne peut pas être envoyé dans le cadre d'un en-tête complet).
  @#PB_CGI_HeaderPragma        : mise en cache des documents ON/OFF.
  @#PB_CGI_HeaderStatus        : état de la requête (ne peut pas être envoyé dans le cadre d'un en-tête complet).
  @#PB_CGI_HeaderContentDisposition: permet de spécifier un nom de fichier par défaut lors de l'envoi d'un fichier.
  @#PB_CGI_HeaderRefresh       : le client recharge le document spécifié.
  @#PB_CGI_HeaderSetCookie     : le client stocke les données spécifiées, utile pour garder la trace des données entre les requêtes.
@EndFixedFont
  
@Parameter "Valeur$"
  La valeur d'en-tête à écrire.

@OptionalParameter "Options"
  Le codage de chaîne à utiliser.@LineBreak
  Peut être l'une des valeurs suivantes:
@FixedFont
  @#PB_Ascii (par défaut)
  @#PB_UTF8 
@EndFixedFont
  En combinaison avec l'une des valeurs suivantes:
@FixedFont
  @#PB_CGI_LastHeader : Ceci est le dernier en-tête écrit, ce qui signifie pas d'autres en-têtes 
                       peuvent être envoyés. Cette option est obligatoire pour le dernier en-tête écrit.
@EndFixedFont
  
@ReturnValue
  Renvoie une valeur non nulle si 
  l'en-tête a été écrit avec succès 
  sur la sortie CGI.
  
@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader)
  
  WriteCGIString("<html><title>PureBasic - test</title><body>" +
                 "Hello depuis PureBasic CGI<br>" +
                 "</body></html>")
@EndCode

@SeeAlso
  @@InitCGI, @@WriteCGIFile, 
  @@WriteCGIStringN

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = WriteCGIString(Chaine$ [, Options])

@Description
  Ecrit une chaîne de caractères 
  sur la sortie CGI.
  
@Parameter "Chaine$"
  La chaîne de caractères à écrire.
  
@OptionalParameter "Options"
  L'encodage du texte.@LineBreak
  Peut être l'une des valeurs suivantes:
@FixedFont
  @#PB_UTF8 (par défaut)
  @#PB_Ascii
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle si 
  la chaîne a été écrite avec succès 
  sur la sortie CGI.
  
@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader)
  
  WriteCGIString("<html><title>PureBasic - test</title><body>" +
                 "Hello depuis PureBasic CGI<br>" +
                 "Temps actuel: <b>"+FormatDate("%hh:%ii", Date()) + "</b>" +
                 "</body></html>")
@EndCode

@SeeAlso
  @@InitCGI, @@WriteCGIHeader, 
  @@WriteCGIStringN

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = WriteCGIStringN(Chaine$ [, Options])

@Description
  Ecrit une chaîne de caractères 
  sur la sortie CGI incluant un 
  retour charriot à la fin.
  
@Parameter "Chaine$"
  La chaîne de caractères à écrire.
  
@OptionalParameter "Options"
  L'encodage du texte.@LineBreak
  Peut être l'une des valeurs suivantes:
@FixedFont
  @#PB_UTF8 (par défaut)
  @#PB_Ascii
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle si 
  la chaîne a été écrite avec succès 
  sur la sortie CGI.
  
@Example
@Code
  If Not InitCGI() Or Not ReadCGI()
    End
  EndIf
  
  WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader)
  
  ; L'utilisation du retour chariot permet une meilleure lisibilité de la page lorsque "Affiche la source de la page" est utilisé dans le navigateur.
  ;
  WriteCGIStringN("<html><title>PureBasic - test</title><body>")
  WriteCGIStringN("Hello depuis PureBasic CGI<br>")
  WriteCGIStringN("Temps actuel: <b>"+FormatDate("%hh:%ii", Date()) + "</b>")
  WriteCGIStringN("</body></html>")
@EndCode

@SeeAlso
  @@InitCGI, @@WriteCGIHeader, 
  @@WriteCGIString
 
@SupportedOS
 
;--------------------------------------------------------------------------------------------------------

@Function Resultat = WaitFastCGIRequest()

@Description
  Attend une nouvelle requête entrante.@LineBreak
  Cette commande va arrêter l'exécution 
  du programme jusqu'à ce qu'une nouvelle 
  demande soit disponible.
     
@NoParameters

@ReturnValue
  Renvoie une valeur non nulle si une nouvelle 
  requête a été traitée.
  
@Remarks
  @@InitFastCGI doit être appelé avec succès 
  avant d'utiliser cette commande.  

@Example
@Code
  If Not InitCGI()
    End
  EndIf
  
  If Not InitFastCGI(5600) ; Crée le programme FastCGI sur le port 5600
    End
  EndIf
  
  While WaitFastCGIRequest()
  
    If ReadCGI()
      WriteCGIHeader(#PB_CGI_HeaderContentType, "text/html", #PB_CGI_LastHeader) ; Ecrit les en-têtes pour informer le navigateur du format du contenu
  
      WriteCGIString("<html><title>PureBasic - FastCGI</title><body>" +
                     "Hello depuis PureBasic FastCGI !<br>" +
                     "Temps actuel: <b>"+FormatDate("%hh:%ii", Date()) + "</b>" +
                     "</body></html>")
    EndIf
  Wend
@EndCode

@SeeAlso
  @@InitCGI, @@InitFastCGI, 
  @@FinishFastCGIRequest
 
@SupportedOS

;--------------------------------------------------------------------------------------------------------




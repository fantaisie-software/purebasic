;
; SysTray library documentation
;
; (c) Fantaisie Software
;

@Library SysTray

@Overview

  SysTray est une zone de notification située 
  à droite de la barre des tâches qui contient 
  des icônes (programmes résidents, antivirus...) 
  et l'horloge. PureBasic gère l'accès à cette
  zone et vous permet d'ajouter un nombre 
  quelconque d'icônes.
  @LineBreak
  @LineBreak
  Sur certaines distributions Linux (comme 
  Ubuntu), les icônes de la zone de 
  notification peuvent être masquées par 
  défaut. 
  Pour plus d'informations, consulter ce 
  @InternetLink "http://ubuntugenius.wordpress.com/2011/06/25/ubuntu-11-04-fix-show-all-iconsindicators-in-unity-panels-notification-area/" "lien".


@CommandList

@ExampleFile All SysTray.pb

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = AddSysTrayIcon(#SysTrayIcone, FenetreID, ImageID)

@Description
  Ajoute une icône dans la zone de 
  notification. 
  
@Parameter "#SysTrayIcone"
  Le numéro de la nouvelle icône.
@LineBreak
@LineBreak 
  @ReferenceLink "purebasic_objects" "PB_Any #" 
  peut être utilisé pour générer 
  automatiquement ce numéro. 
  
@Parameter "FenetreID"
  L'identifiant système de la fenêtre.
@LineBreak
@LineBreak    
  Peut être obtenu avec la fonction 
  @@WindowID. 
  
@Parameter "ImageID"  
  Numéro de l'image préalablement chargée 
  par la fonction @@LoadImage. 
@LineBreak
@LineBreak  
  Le format PNG a l'avantage d'utiliser la transparence.
@LineBreak
@LineBreak  
  Un ImageID valide peut être obtenu 
  simplement avec la fonction @@ImageID.

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 

@Remarks
  Quand un évènement intervient sur une icône 
  de la zone SysTray, l'évènement 
  @#PB_Event_SysTray est renvoyé. 
  @@EventGadget peut alors être utilisé pour 
  connaître l'icône cliquée.@LineBreak
  La fonction @@EventType est également mise 
  à jour par cette fonction.
@LineBreak
@LineBreak
  Toutes vos icônes SysTray sont 
  automatiquement supprimées à la 
  fermeture du programme.

@Example
@Code
  If OpenWindow(0, 0, 0, 300, 100, "", #PB_Window_Invisible)
    ; Créer un menu contextuel et une icône Systray (symbole CD) :
    If CreatePopupImageMenu(0)
      MenuItem(0, "Quitter")
    EndIf
    AddSysTrayIcon(0, WindowID(0), LoadImage(0, #PB_Compiler_Home + "Examples\Sources\Data\CdPlayer.ico"))
    
    Repeat
      Select WaitWindowEvent()
        Case #PB_Event_SysTray
          Select EventType()
            Case #PB_EventType_RightClick, #PB_EventType_LeftClick
              DisplayPopupMenu(0, WindowID(0)) ; Afficher le menu contextuel après un clic sur l'icône Systray
          EndSelect
        Case #PB_Event_Menu
          Select EventMenu()
            Case 0 ; Quitter
              RemoveSysTrayIcon(0)
              FreeMenu(0)
              CloseWindow(0)
              End
          EndSelect
      EndSelect
    ForEver
  EndIf
@EndCode 

@SeeAlso
  @@RemoveSysTrayIcon, @@ChangeSysTrayIcon
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function ChangeSysTrayIcon(#SysTrayIcone, ImageID)

@Description
  Change une icône de la zone de notification.
  
@Parameter "#SysTrayIcone"
  Le numéro de l'icône à changer.

@Parameter "ImageID"  
  Numéro de la nouvelle image préalablement 
  chargée par la fonction @@LoadImage. 
@LineBreak
@LineBreak  
  Le format PNG a l'avantage d'utiliser la transparence.
@LineBreak
@LineBreak  
  Un ImageID valide peut être obtenu 
  simplement avec la fonction @@ImageID.

@NoReturnValue

@Example
@Code
  If OpenWindow(0, 0, 0, 300, 100, "", #PB_Window_Invisible)
    ; Créer une image avec une case jaune comme icône Systray :
    If CreateImage(0, 16, 16) And StartDrawing(ImageOutput(0))
      Box(0, 0, 16 , 16, $00DDDD)
      StopDrawing()
    EndIf
    AddSysTrayIcon(0, WindowID(0), ImageID(0))
    ; Créer un menu contextuel à utiliser avec l'icône Systray :
    If CreatePopupImageMenu(0)
      MenuItem(0, "Quitter")
    EndIf
    
    AddWindowTimer(0, 0, 1000) ; Ajouter un minuteur de fenêtre qui entraînera un changement de l'icône Systray toutes les 1 000 ms.
    
    Repeat
      Select WaitWindowEvent()
        Case #PB_Event_Timer
          ; Mettre à jour l'image de l'icône Systray avec un cercle rouge de taille aléatoire sur fond jaune
          If StartDrawing(ImageOutput(0))
            Box(0, 0, 16 , 16, $00DDDD)
            Radius = Random(6, 2)
            Circle(8, 8, Radius, $0000DD)
            StopDrawing()
            ChangeSysTrayIcon(0, ImageID(0))
          EndIf
        Case #PB_Event_SysTray
          Select EventType()
            Case #PB_EventType_RightClick, #PB_EventType_LeftClick
              DisplayPopupMenu(0, WindowID(0)) ; Afficher le menu contextuel après un clic sur l'icône Systray
          EndSelect
        Case #PB_Event_Menu
          Select EventMenu()
            Case 0 ; Quittez après avoir cliqué sur l'élément de menu 'Quitter' associé à l'icône Systray
              RemoveSysTrayIcon(0)
              FreeMenu(0)
              CloseWindow(0)
              End
          EndSelect
      EndSelect
    ForEver
  EndIf
@EndCode

  
@SeeAlso
  @@AddSysTrayIcon, @@RemoveSysTrayIcon
  
@SupportedOS


;--------------------------------------------------------------------------------------------------------

@Function Resultat = IsSysTrayIcon(#SysTrayIcone)

@Description
  Teste si une icône de la zone de 
  notification est correctement initialisée. 
  
@Parameter "#SysTrayIcone"
  Le numéro de l'icône.

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
  
@Remarks 
  Cette fonction a été créée pour pouvoir 
  passer n'importe quelle valeur en paramètre 
  sans qu'il ne puisse y avoir de plantage. 
@LineBreak
@LineBreak
   C'est la fonction idéale pour vérifier 
   qu'un objet est correctement initialisé.
  
@SeeAlso
  @@AddSysTrayIcon
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SysTrayIconToolTip(#SysTrayIcone, Texte$)

@Description
  Associe un texte flottant (bulle d'aide) 
  à une icône de la zone de notification. 
  
@Parameter "#SysTrayIcone"
    Le numéro de l'icône à utiliser.

@Parameter "Texte$" 
  'Tooltip' ou texte flottant qui apparaît 
  au bout d'un certain temps lorsque le 
  curseur de la souris est immobile au 
  dessus de l'icône.
  
@NoReturnValue

@Example 
@Code
  If OpenWindow(0, 100, 150, 300, 100, "Zone de notification", #PB_Window_SystemMenu)
  
  UsePNGImageDecoder()
  
  Icone$ = #PB_Compiler_Home + "examples/sources/Data/world.png"
  
  ; Ajout d'une icône dans la zone de notification
  AddSysTrayIcon(0, WindowID(0), LoadImage(0, Icone$))

  ; Ajout d'un texte flottant 
  SysTrayIconToolTip(EventGadget(), "Hello le Monde")
  MessageRequester("Info", "Survolez l'icône pour voir le texte apparaître.")
    
  Repeat
    Event = WaitWindowEvent()
  Until Event = #PB_Event_CloseWindow
  
EndIf
@EndCode  
  
@SeeAlso
  @@AddSysTrayIcon
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function RemoveSysTrayIcon(#SysTrayIcone)

@Description
  Supprime une icône de la zone de 
  notification.
 
@Parameter "#SysTrayIcone"
  Le numéro de l'icône à supprimer.
@LineBreak
@LineBreak
  Si @#PB_All est spécifié, toutes les 
  icônes SysTray restantes sont libérées.

@NoReturnValue
  
@Remarks  
  Toutes les icônes restantes sont 
  automatiquement supprimées à la 
  fermeture du programme.
 
@Example 
@Code
  If OpenWindow(0, 100, 150, 300, 100, "Zone de notification", #PB_Window_SystemMenu)
  
  UsePNGImageDecoder()
  
  Icone$ = #PB_Compiler_Home + "examples/sources/Data/world.png"
  
  ; Ajout d'une icône dans la zone de notification
  AddSysTrayIcon(0, WindowID(0), LoadImage(0, Icone$))

  MessageRequester("Info", "Suppression de l'icône.")
  ; Suppression de l'icône 
  RemoveSysTrayIcon (0)
  MessageRequester("Info", "Icône supprimée.")
    
  Repeat
    Event = WaitWindowEvent()
  Until Event = #PB_Event_CloseWindow
  
EndIf
@EndCode  
   
@SeeAlso
  @@AddSysTrayIcon
  
@SupportedOS

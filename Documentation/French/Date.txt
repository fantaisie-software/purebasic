;
; Date library documentation
;
; (c) Fantaisie Software
;

@Library Date

@Overview

 La bibliothèque Date permet de gérer le temps et les dates depuis l'année 1601 
 jusqu'à l'année 9999, en utilisant le modèle Unix (nombre de secondes écoulées 
 depuis le 1er janvier 1970). Les dates antérieures à 1970 sont représentées par 
 des valeurs négatives.
@LineBreak
@LineBreak
  Remarque : Afin d'utiliser toute la plage de dates disponible, les valeurs renvoyées 
  par cette bibliothèque doivent être stockées dans des variables de type Quad (.q).
  L'utilisation d'un type de données 32 bits (Long ou Integer sur les systèmes 32 bits) 
  entraîne des valeurs non valides à partir de l'année 2038.

@CommandList

@ExampleFile All Date.pb

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat.q = AddDate(Date.q, Plage, Valeur)

@Description
  Ajouter une quantité de temps à une date. 
  
@Parameter "Date.q"  
  La date à utiliser.
  
@Parameter "Plage"  
@FixedFont
  @#PB_Date_Year   : Ajoute 'Valeur' années à la date
  @#PB_Date_Month  : Ajoute 'Valeur' mois à la date
  @#PB_Date_Week   : Ajoute 'Valeur' semaines à la date
  @#PB_Date_Day    : Ajoute 'Valeur' jours à la date
  @#PB_Date_Hour   : Ajoute 'Valeur' heures à la date
  @#PB_Date_Minute : Ajoute 'valeur' minutes à la date
  @#PB_Date_Second : Ajoute 'valeur' secondes à la date
@EndFixedFont

@Indent
  Note: l'utilisation de @#PB_Date_Month peut entrainer un arrondi automatique 
  du jour si nécessaire: Par exemple, ajouter un mois au '31 mars 2008' 
  renverra '30 avril 2008', car il n'y a pas 31 jours en avril.
@EndIndent

@Parameter "Valeur
  La quantité à ajouter à la date.
  @LineBreak 
  Une valeur négative est autorisée et permet de soustraire deux dates.

@ReturnValue
  Renvoie la nouvelle date. 
  @LineBreak
  Si les paramètres donnés ne sont pas valides ou en dehors de la plage de dates supportée, 
  -1 sera renvoyé.
  
@Example
@Code

  Debug FormatDate("%dd/%mm/%yyyy", AddDate(Date(), #PB_Date_Year, 2))  ; Renvoie la date courante augmentée de 2 ans
  Debug FormatDate("%dd/%mm/%yyyy", AddDate(Date(), #PB_Date_Year, -2)) ; Renvoie la date courante diminuée de 2 ans

@EndCode

@SeeAlso
  @@Date, @@FormatDate
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat.q = ConvertDate(Date.q, Format)

@Description
  Convertit une date entre l'heure locale et l'heure UTC (Temps universel coordonné).

@Parameter "Date.q"
  La date à convertir.

@Parameter "Format"
 Le format de date. Il peut s'agir de l'une des constantes suivantes :
@FixedFont
  @#PB_Date_LocalTime: Convertit une date UTC en date d’heure locale.
  @#PB_Date_UTC      : Convertit une date d’heure locale en date UTC.
@EndFixedFont

@ReturnValue
  Renvoie la date convertie, ou -1 si la conversion a échoué.

@Example
@Code
  Debug FormatDate("Temps Local : %hh:%ii:%ss", ConvertDate(DateUTC(), #PB_Date_LocalTime))
  Debug FormatDate("Temps UTC   : %hh:%ii:%ss", ConvertDate(Date(), #PB_Date_UTC))
@EndCode

@SeeAlso
  @@FormatDate, @@Date, @@DateUTC

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat.q = Date([Annee, Mois, Jour, Heure, Minute, Seconde])

@Description
  Renvoie la valeur de date créée à partir des paramètres donnés, ou la date du système local 
  si aucun paramètre n'est spécifié.

@OptionalParameter "Annee, Mois, Jour, Heure, Minute, Seconde"
  Les composants utilisés pour créer la date. 
@LineBreak
@LineBreak   
  Si ces paramètres ne sont pas spécifiés, la date système locale est renvoyée.@LineBreak  
  La plage autorisée pour la valeur "Annee" est comprise entre 1 601 et 9 999. 

@ReturnValue  
  Renvoie la date demandée (nombre de secondes écoulées depuis le 1er janvier 1970, les dates 
  antérieures à 1970 sont représentées par des valeurs négatives.)
  @LineBreak
  Si les paramètres donnés ne sont pas valides ou en dehors de la plage de dates supportée, 
  -1 sera renvoyé.
  
@Example
@Code
  Debug Date() / (3600*24*365)  ; Affiche le nombre d'années depuis 01/01/1970 et maintenant
  Debug Date(1999, 12, 31, 23, 59, 59)  ; Affiche '946684799' (nombre de secondes entre 01/01/1970 0:00:00 et 12/31/1999 23:59:59)
@EndCode

@SeeAlso
  @@FormatDate, @@DateUTC, @@Year, @@Month, @@Day, @@Hour, @@Minute, @@Second
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat.q = DateUTC()

@Description
  Renvoie la date du système sous forme d'heure UTC.

@ReturnValue
  Renvoie la date du système sous forme d'heure UTC.

@Example
@Code
  Debug FormatDate("Temps UTC : %hh:%ii:%ss", DateUTC())
@EndCode

@SeeAlso
  @@FormatDate, @@Date

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = Day(Date.q)

@Description
  Renvoie le jour. 

@Parameter "Date.q"  
  La date à utiliser.
  
@ReturnValue
  Renvoie le jour de la date spécifiée ou -1 en cas d'erreur.
  @LineBreak
  Le résultat est compris entre 1 et 31.
  

@Example
@Code
  Debug Day(Date(2022, 10, 3, 0, 0, 0))  ; Le résultat est '3'.
@EndCode

@SeeAlso 
  @@Date,
  @@Year, @@Month, @@Hour, @@Minute, 
  @@Second
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = DayOfWeek(Date.q)

@Description
  Renvoie le rang du jour de la semaine. 

@Parameter "Date.q"  
  La date à utiliser.
  
@ReturnValue
  Renvoie le rang du jour de la semaine ou -1 en cas d'erreur. 
  @LineBreak
  Le résultat est compris entre 0 et 6. 
@FixedFont
  0 : Dimanche
  1 : Lundi
  2 : Mardi
  3 : Mercredi
  4 : Jeudi
  5 : Vendredi
  6 : Samedi
@EndFixedFont

@Example
@Code
  Debug DayOfWeek(Date(2026, 10, 30, 0, 0, 0))  ; Renvoie '1' pour Lundi.
@EndCode

@SeeAlso
  @@FormatDate, 
  @@Year, @@Month, @@Day, @@Hour, 
  @@Minute, @@Second

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = DayOfYear(Date.q)

@Description
  Renvoie le nombre de jours écoulés 
  depuis le début de l'année. 

@Parameter "Date.q"  
  La date à utiliser.
  
@ReturnValue
  Renvoie le nombre de jours écoulés 
  depuis le début de l'année d'une date 
  spécifiée ou -1 en cas d'erreur.
  @LineBreak
  Le résultat est compris entre 1 et 366.
  
@Example
@Code
  Debug DayOfYear(Date(2022, 2, 1, 0, 0, 0))  ; Le résultat est '32'. (31 jours pour janvier + 1)
@EndCode

@SeeAlso
  @@FormatDate, 
  @@Year, @@Month, @@Day, @@Hour, 
  @@Minute, @@Second

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = Month(Date.q)

@Description
  Renvoie le mois. 

@Parameter "Date.q"  
  La date à utiliser.
  
@ReturnValue
  Renvoie le mois de la date spécifiée ou -1 en cas d'erreur. 
  @LineBreak
  Le résultat est compris entre 1 et 12.

@Example
@Code
  Debug Month(Date(2022, 10, 3, 0, 0, 0))  ; Le résultat est '10'.
@EndCode

@SeeAlso
  @@FormatDate, 
  @@Year, @@Day, @@Hour, @@Minute, 
  @@Second
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = Year(Date.q)

@Description
  Renvoie l'année. 

@Parameter "Date.q"  
  La date à utiliser.
  
@ReturnValue
  Renvoie l'année de la date spécifiée ou -1 en cas d'erreur. 
  @LineBreak
  Le résultat est compris entre 1970 et 2034.

@Example
@Code
  Debug Year(Date(2022, 10, 3, 0, 0, 0))  ; Le résultat est '2022'.
@EndCode

@SeeAlso
  @@FormatDate, 
  @@Month, @@Day, @@Hour, @@Minute, 
  @@Second
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = Hour(Date.q)

@Description
  Renvoie l'heure. 

@Parameter "Date.q"  
  La date à utiliser.
  
@ReturnValue
  Renvoie l'heure de la date spécifiée ou -1 en cas d'erreur. 
  @LineBreak
  Le résultat est compris entre 0 et 23.

@Example
@Code
  Debug Hour(Date(1970, 1, 1, 11, 3, 45))  ; Le résultat est '11'.
@EndCode
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = Minute(Date.q)

@Description
  Renvoie les minutes.

@Parameter "Date.q"  
  La date à utiliser.
  
@ReturnValue
  Renvoie les minutes de la date spécifiée ou -1 en cas d'erreur. 
  @LineBreak
  Le résultat est compris entre 0 et 59.

@Example
@Code
  Debug Minute(Date(1970, 1, 1, 11, 3, 45))  ; Le résultat est '3'.
@EndCode
 
@SeeAlso
  @@FormatDate, 
  @@Year, @@Month, @@Day, @@Hour, 
  @@Second
 
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = Second(Date.q)

@Description
  Renvoie les secondes. 

@Parameter "Date.q"  
  La date à utiliser.
  
@ReturnValue
  Renvoie les secondes de la date spécifiée ou -1 en cas d'erreur. 
  @LineBreak
  Le résultat est compris entre 0 et 59.

@Example
@Code
  Debug Second(Date(1970, 1, 1, 11, 3, 45))  ; Le résultat est '45'.
@EndCode

@SeeAlso
  @@FormatDate, 
  @@Year, @@Month, @@Day, @@Hour, 
  @@Minute
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat$ = FormatDate(Masque$, Date.q)

@Description
  Renvoie une date formatée par l'utilisateur.

@Parameter "Masque$"
  Une chaîne de caractères  indiquant 
  comment formater et afficher la date.
@FixedFont
  %yyyy: L'année sera affichée avec 4 chiffres.
    %yy: L'année sera affichée avec 2 chiffres.
    %mm: Le mois sera affiché avec 2 chiffres.
    %dd: Le jour sera affiché avec 2 chiffres.
    %hh: L'heure sera affichée avec 2 chiffres.
    %ii: Les minutes seront affichées avec 2 chiffres.
    %ss: Les secondes seront affichées avec 2 chiffres.
@EndFixedFont

@Parameter "Date.q"  
  La date à utiliser.
  
@ReturnValue
  Renvoie la date sous forme de chaîne   de caractères correspondant au masque 
  spécifié si la date est valide, une chaîne vide sinon. 

@Example
@Code
  Debug FormatDate("A=%yyyy, M= %mm, J=%dd", Date()) ; Affiche la date sous la forme 
                                                     ; "A=2012, M=12, J=21"

  Debug FormatDate("%dd/%mm/%yyyy", Date())          ; Affiche la date sous la forme 
                                                     ;  "21/12/2012"
    
  Debug FormatDate("%hh:%ii:%ss", Date())  ; affiche le temps selon un format 00:00:00
@EndCode

  Note: Le temps et les dates supportées 
  vont de '1970-01-01, 00:00:00' pour le 
  minimum à '2038-01-19, 03:14:07' pour 
  le maximum.

@SeeAlso
  @@Date, @@ParseDate
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat.q = ParseDate(Masque$, Date$)

@Description
  Transforme une date donnée sous la 
  forme d'une chaîne de caractères en 
  valeur numérique. 
  
@Parameter "Masque$"
  Une chaîne de caractères indiquant 
  comment formater la date. 
@FixedFont
  %yyyy: L'année sera affichée avec 4 chiffres.
    %yy: L'année sera affichée avec 2 chiffres.
    %mm: Le mois sera affiché avec 2 chiffres.
    %dd: Le jour sera affiché avec 2 chiffres.
    %hh: L'heure sera affichée avec 2 chiffres.
    %ii: Les minutes seront affichées avec 2 chiffres.
    %ss: Les secondes seront affichées avec 2 chiffres.
@EndFixedFont
  
@Parameter "Date$" 
  La date à tester. 
  
@ReturnValue  
  Renvoie la date représentant la chaîne 
  à analyser.
@LineBreak
@LineBreak   
  Si la date est incorrecte, la valeur 
  renvoyée est -1. 
@LineBreak
@LineBreak   
  Cette fonction est particulièrement 
  utile pour retrouver et traiter des 
  dates stockées, dans un fichier de 
  type journal d'évènements par exemple.
 
@Example
@Code
  Debug ParseDate("%yy/%mm/%dd", "20/12/01") ; Renvoie la date numérique correspondant à "01/12/20"
  Debug ParseDate("%dd/%mm/%yyyy", "01/07/2020") ; Renvoie la date numérique correspondant à "01/07/2020"

@EndCode

@SeeAlso
  @@Date, @@FormatDate
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

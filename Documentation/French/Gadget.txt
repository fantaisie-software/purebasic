;
; Gadget library documentation
;
; (c) Fantaisie Software
;

@Library Gadget

@Overview

  En PureBasic, un Gadget est un nom générique 
  donné pour tous les composants de 
  l'interface graphique d'un programme : 
  boutons, listes d'éléments, cases à cocher,
  boîtes à onglets, etc...
  (Dans d'autres langages, ils sont appelés 
  "controls" ou "widgets")  
@LineBreak
  Cette bibliothèque est indépendante du 
@LineBreak
  système d'exploitation utilisé (OS). Elle 
  utilise les composants de l'Interface 
  Graphique Utilisateur (GUI) de chaque 
  système.
@LineBreak
@LineBreak
  Avant d'utiliser les gadgets, normalement 
  vous aurez au préalable ouvert une 
  @Link "Window/OpenWindow" "fenêtre",
  d'autre part pour la création d'une 
  interface utilisateurs vous pouvez aussi 
  utiliser un @LibraryLink "Menu" "menu", 
  une @LibraryLink "ToolBar" "barre d'outils" 
  et une @LibraryLink "StatusBar" "barre d'états".
@linebreak
@linebreak
  Les fonctions qui créent les nouveaux gadgets 
  renvoient le numéro du nouveau gadget 
  (appelé #Gadget dans cette bibliothèque) dans 
  le cas où la constante @#PB_Any a été utilisée 
  pour le créer. Par contre, si c'est une 
  constante choisie par le programmeur pour 
  identifier le gadget (au lieu de @#PB_Any) 
  alors les fonctions renvoient l'identifiant 
  du système d'exploitation.
  
@OS Windows
@linebreak
@linebreak
  Les identifiants (aussi appelés handles) 
  peuvent être utilisés pour les autres 
  commandes de PureBasic, aussi bien que pour 
  les commandes de l'API Windows comme 
  SendMessage_() etc. @linebreak
  Pour plus d'informations référez vous au 
  chapitre @ReferenceLink "handles" "Numéros et identifiants". 
@EndOS

@OS Linux
@linebreak
@linebreak
   GTK a été choisi pour gérer les composants 
   GUI de PureBasic sous Linux. Ce choix
  a été motivé par le fait que GTK est 
  complètement gratuit (pas de licence 
  restrictive pour vos applications) et 
  puissant.
@EndOS

@linebreak
@linebreak
  Si vous voulez créer des boîtes de dialogue 
  ou même des fenêtres 'GUI' avec le support 
  de mise en page automatique (layout en 
  anglais), jeter un oeil à la bibliothèque 
  @LibraryLink "dialog" "Dialog".
@linebreak
@linebreak

@FormatIf HTML
  <p>
  <center> 
  <table WIDTH="96%" BORDER=0>
  <caption> <b>Tous les Gadgets en un clin d'oeil:</b> </caption>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_buttongadget.png"> <a href="../gadget/buttongadget.html"><u>ButtonGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_buttonimagegadget.png"> <a href="../gadget/buttonimagegadget.html"><u>ButtonImageGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_calendargadget.png"> <a href="../gadget/calendargadget.html"><u>CalendarGadget</u></a></td>
  </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_canvasgadget.png"> <a href="../gadget/canvasgadget.html"><u>CanvasGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_checkboxgadget.png"> <a href="../gadget/checkboxgadget.html"><u>CheckBoxGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_comboboxgadget.png"> <a href="../gadget/comboboxgadget.html"><u>ComboBoxGadget</u></a></td>
  </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_containergadget.png"> <a href="../gadget/containergadget.html"><u>ContainerGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_dategadget.png"> <a href="../gadget/dategadget.html"><u>DateGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_editorgadget.png"> <a href="../gadget/editorgadget.html"><u>EditorGadget</u></a></td>
  </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_explorercombogadget.png"> <a href="../gadget/explorercombogadget.html"><u>ExplorerComboGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_explorerlistgadget.png"> <a href="../gadget/explorerlistgadget.html"><u>ExplorerListGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_explorertreegadget.png"> <a href="../gadget/explorertreegadget.html"><u>ExplorerTreeGadget</u></a></td>
  </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_framegadget.png"> <a href="../gadget/framegadget.html"><u>FrameGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_hyperlinkgadget.png"> <a href="../gadget/hyperlinkgadget.html"><u>HyperLinkGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_ipaddressgadget.png"> <a href="../gadget/ipaddressgadget.html"><u>IPAddressGadget</u></a></td>
  </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_imagegadget.png"> <a href="../gadget/imagegadget.html"><u>ImageGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_listicongadget.png"> <a href="../gadget/listicongadget.html"><u>ListIconGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_listviewgadget.png"> <a href="../gadget/listviewgadget.html"><u>ListViewGadget</u></a></td>
  </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_mdigadget.png"> <a href="../gadget/mdigadget.html"><u>MDIGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_openglgadget.png"> <a href="../gadget/openglgadget.html"><u>OpenGLGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_optiongadget.png"> <a href="../gadget/optiongadget.html"><u>OptionGadget</u></a></td>
      </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_panelgadget.png"> <a href="../gadget/panelgadget.html"><u>PanelGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_progressbargadget.png"> <a href="../gadget/progressbargadget.html"><u>ProgressBarGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_scrollareagadget.png"> <a href="../gadget/scrollareagadget.html"><u>ScrollAreaGadget</u></a></td>   
      </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_scrollbargadget.png"> <a href="../gadget/scrollbargadget.html"><u>ScrollBarGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_shortcutgadget.png"> <a href="../gadget/shortcutgadget.html"><u>ShortcutGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_spingadget.png"> <a href="../gadget/spingadget.html"><u>SpinGadget</u></a></td>
      </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_splittergadget.png"> <a href="../gadget/splittergadget.html"><u>SplitterGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_stringgadget.png"> <a href="../gadget/stringgadget.html"><u>StringGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_textgadget.png"> <a href="../gadget/textgadget.html"><u>TextGadget</u></a></td>
     </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_trackbargadget.png"> <a href="../gadget/trackbargadget.html"><u>TrackBarGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_treegadget.png"> <a href="../gadget/treegadget.html"><u>TreeGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_webgadget.png"> <a href="../gadget/webgadget.html"><u>WebGadget</u></a></td>
  </tr>
  </table>
  </center>
@FormatEndIf

@CommandList

@ExampleFile All Gadget.pb
@ExampleFile All GadgetAdvanced.pb
@ExampleFile All BindEvent.pb
@ExampleFile All BindGadgetEvent.pb
@ExampleFile All CanvasGadget.pb
@ExampleFile All GadgetSplitter.pb
@ExampleFile All GadgetSplitterAdvanced.pb
@ExampleFile All Image.pb
@ExampleFile All MDI_ImageViewer.pb
@ExampleFile All Menu.pb
@ExampleFile All OpenGLGadget.pb
@ExampleFile All PopupMenu.pb
@ExampleFile All StatusBar.pb
@ExampleFile All SysTray.pb
@ExampleFile All ToolBar.pb
@ExampleFile All WebBrowser.pb

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function AddGadgetColumn(#Gadget, Position, Titre$, Largeur)

@Description
  Ajoute une colonne à un gadget. 
  
@Parameter "#Gadget"
  Le gadget à utiliser.
  
@Parameter "Position"  
  Le numéro de colonne où sera insérée la 
  nouvelle colonne.
@linebreak
@linebreak
  La première colonne commence à la position 
  0 (la colonne la plus à gauche), puis on 
  augmente de 1 pour chaque colonne à droite. 
@linebreak
@linebreak
  Lorsque vous insérez une colonne, toutes les 
  anciennes colonnes qui se trouvent  à droite 
  de la nouvelle auront une position augmentée 
  de 1 (mise à jour automatique de leur 
  position).
  
@Parameter "Titre$"  
  Texte de l'en-tête de la colonne.
  
@Parameter "Largeur"  
  La largeur initiale de la colonne. 
  
@NoReturnValue

@Remarks  
  Les gadgets supportant cette commande sont:
@LineBreak
  - @@ListIconGadget @LineBreak
  - @@ExplorerListGadget
@LineBreak
@LineBreak
  Cette commande permet de paramétrer 
  complètement l'affichage d'un 
  @@ExplorerListGadget, soit en retirant les 
  colonnes standards à l'aide de 
  @@RemoveGadgetColumn et en ajoutant celles 
  de votre choix.@LineBreak 
  A noter que la colonne 'Nom des fichiers' 
  (@#PB_Explorer_Name) n'a pas à être 
  obligatoirement en première position.
@LineBreak
@LineBreak
  @Bold"Note 1"@LineBreak
  Pour rafraîchir l'affichage du gadget 
  après avoir ajouté une colonne, il convient 
  d'utiliser @@SetGadgetText.
@LineBreak
@LineBreak 
  @Bold"Note 2"@LineBreak 
  Pour remplir une colonne personnalisée 
  (qui n'est pas parmi les colonnes supportées 
  nativement par le gadget, voir ci-dessous),
  utiliser @@SetGadgetItemText pour chaque 
  élément, dès qu'un évènement du type 
  @#PB_EventType_Change est détecté par le 
  gadget.
@LineBreak
@LineBreak
  @Bold"Note 3"@LineBreak 
  Les constantes suivantes sont disponibles à 
  la place du Titre$ pour créer une colonne 
  prédéfinie (automatiquement rafraîchie 
   par le gadget):
@FixedFont
  @#PB_Explorer_Name      : Affiche le nom du fichier (ou répertoire)
  @#PB_Explorer_Size      : Affiche la taille du fichier (en Ko)
  @#PB_Explorer_Type      : Affiche le type du fichier
  @#PB_Explorer_Attributes: Affiche les attributs du fichier (ou répertoire)
  @#PB_Explorer_Created   : Affiche la date de création du fichier (ou répertoire)
  @#PB_Explorer_Modified  : Affiche la date de dernière modification du fichier (ou répertoire)
  @#PB_Explorer_Accessed  : Affiche la date du dernier accès au fichier (ou répertoire)
@EndFixedFont

@Example
@Code
  ;Liste avec icônes - Ajoute des colonnes
  If OpenWindow(0, 0, 0, 400, 150, "AddGadgetColumn", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    ListIconGadget(0, 10, 10, 380, 100, "Colonne standard", 150, #PB_ListIcon_GridLines)
    ButtonGadget(1, 10, 120, 150, 20, "Ajouter une nouvelle colonne")
    index = 1     ; La "colonne standard" a déjà l'index 0
    Repeat
      Evenement = WaitWindowEvent()
      If Evenement = #PB_Event_Gadget
        If EventGadget() = 1
          AddGadgetColumn(0, index, "Colonne "+Str(index), 80)
          index + 1
        EndIf
      EndIf
    Until Evenement = #PB_Event_CloseWindow
  EndIf
@EndCode

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = AddGadgetItem(#Gadget, Position, Texte$ [, ImageID [, Options]])

@Description
  Ajoute un élément à un gadget. 
  
@Parameter "#Gadget"
  Le gadget à utiliser.
  
@Parameter "Position"  
  La position ou l'index du nouvel élément. 
@LineBreak
@LineBreak
  Pour ajouter un élément au début, utilisez 
  la valeur 0. @LineBreak
  Pour ajouter un élément à la fin de la 
  liste des éléments en cours, utilisez la 
  valeur -1. 
@Indent
  N'oubliez pas que lorsque vous insérez un 
  nouvel élément entre deux éléments existants, 
  la position de chaque élément de droite est 
  augmentée de 1.
@LineBreak
@LineBreak 
  Pour le @@MDIGadget ce paramètre spécifie 
  le numéro de la nouvelle fenêtre fille.
  @ReferenceLink "purebasic_objects" "PB_Any #" 
  peut être utilisé, dans ce cas, la valeur de 
  retour sera le nouveau numéro attribué par PB.
@EndIndent

@Parameter "Texte$" 
  Le texte du nouvel élément.
@Indent
  Lorsque vous ajoutez un élément à un 
  @@ListIconGadget, ce paramètre peut contenir 
  le texte de plusieurs colonnes séparées par 
  un caractère @Link "String/Chr" "Chr (10)".
@EndIndent
  
@OptionalParameter "ImageID"  
  Le numéro d'une image (icône) à afficher à 
  côté de l'élément inséré. @LineBreak
  La taille de l'image doit être standard, 
  c'est à dire de 16x16 pixels. 
@LineBreak
@LineBreak
  'ImageID' peut être récupéré facilement 
  grâce à la commande @@ImageID. 

@OptionalParameter "Options"
  Ce paramètre n'est utilisable qu'avec les 
  gadgets suivants:
@LineBreak
@LineBreak
  @@TreeGadget
@Indent
  Ce paramètre spécifie le sous-niveau du 
  nouvel item.@LineBreak 
  Si le sous-niveau est supérieur à celui de 
  l'item précédent, le nouvel item devient 
  l'enfant de celui-ci. @LineBreak
  S'il est inférieur, il sera ajouté après le 
  parent de l'élément précédent.
@EndIndent

  @@MDIGadget
@Indent
  Ce paramètre peut être utilisé pour spécifier 
  les options de la nouvelle fenêtre (voir 
  @@OpenWindow). @LineBreak
  Les options @#PB_Window_Borderless, 
  @#PB_Window_Screencentered et 
  @#PB_Window_WindowCentered 
  ne sont pas prises en charge pour les 
  fenêtres MDI. 
@EndIndent

@ReturnValue
   La valeur de retour est uniquement valable 
   qu'avec le @@MDIGadget. Si @#PB_Any a été 
   utilisé à la place de 'Position' lors de 
   l'ajout d'un élément à la @@MDIGadget, la 
   valeur de retour est le numéro 
   d'identification de la nouvelle fenêtre MDI.

@Remarks
  Les gadgets supportant cette commande sont:
@LineBreak
@FixedFont
  - @@ComboBoxGadget: Support de l'ImageID si l'option @#PB_ComboBox_Image est spécifiée.
  - @@EditorGadget
  - @@ListViewGadget
  - @@ListIconGadget: Support de l'ImageID.
  - @@MDIGadget     : ImageID ajoute une icône dans la barre de titre de la fenêtre fille et 'Options', les paramètres de la fenêtre.
  - @@PanelGadget   : Support de l'ImageID.
  - @@TreeGadget    : Support de l'ImageID. Le paramètre 'Options' spécifie le nouveau sous-niveau. 
@EndFixedFont

@SeeAlso
  @@RemoveGadgetItem, @@ClearGadgetItems, 
  @@CountGadgetItems, @@ComboBoxGadget, 
  @@ListIconGadget, @@ListViewGadget, 
  @@MDIGadget, @@PanelGadget, @@TreeGadget
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ButtonImageGadget(#Gadget, X, Y, Largeur, Hauteur, ImageID [, Options])

@Description
  Crée un bouton avec image dans la 
  GadgetList en cours.

@Parameter "#Gadget"
  Le numéro du nouveau gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "PB_Any #" 
  peut être utilisé pour générer automatiquement 
  ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
   La position et les dimensions du nouveau 
   gadget.

@Parameter "ImageID"
  Le numéro d'identification de l'image du 
  gadget. 
@LineBreak
@LineBreak  
  Utiliser la fonction @@ImageID pour obtenir 
  ce numéro.
@LineBreak
@LineBreak
  Ce paramètre peut être égal à zéro pour 
  créer un bouton sans image. 
@LineBreak
@LineBreak
  La fonction @@SetGadgetAttribute peut être 
  utilisée pour modifier l'image plus tard.

@OptionalParameter "Options"
  @#PB_Button_Toggle crée un bouton à bascule 
  (garde son état ON/OFF) qui alterne l'état 
  'appuyé' et 'normal'.
  
@ReturnValue  
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé à la place de 
  #Gadget alors la valeur de retour est le 
  numéro du gadget, généré automatiquement.
  
@Remarks
@Fixedfont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 
 
  Les fonctions suivantes peuvent être utilisées pour contrôler le gadget:
  - @@GetGadgetAttribute avec une des valeurs suivantes:
    @#PB_Button_Image       : Renvoie l'identifiant de l'image du bouton, ex. ImageID(#ImageRelachee).
    @#PB_Button_PressedImage: Renvoie l'identifiant de l'image du bouton lorsqu'il est enfoncé, ex. ImageID(#ImageEnfoncee).

  - @@SetGadgetAttribute avec une des valeurs suivantes:
    @#PB_Button_Image       : Change l'image du bouton.
    @#PB_Button_PressedImage: Change l'image du bouton lorsqu'il est enfoncé.

Bouton à bascule: Option @#PB_Button_Toggle
  - @@SetGadgetState:  Change d'état (1 = pressé, 0 = normal).
  - @@GetGadgetState:  Renvoie l'état (1 = pressé, 0 = normal).
@EndFixedFont 

@Example
@Code
  If OpenWindow(0, 0, 0, 200, 60, "ButtonImageGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    If LoadImage(0,  #PB_Compiler_Home + "/examples/sources/Data/PureBasic.bmp")    ; changez le 2ème paramètre en indiquant le chemin/fichier contenant votre image
      ButtonImageGadget(0, 10, 10, 180, 40, ImageID(0))
    EndIf
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image buttonimagegadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, 
  @@GetGadgetAttribute, @@SetGadgetAttribute, 
  @@ButtonGadget, @@ImageID, @@EventGadget
 
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ButtonGadget(#Gadget, X, Y, Largeur, Hauteur, Texte$ [, Options])

@Description
  Crée un bouton dans la GadgetList en cours.
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.
  
@Parameter "X, Y, Largeur, Hauteur"
  Les coordonnées et la position du bouton 
  dans la fenêtre. 
@Indent
  @Bold "Note": Sur OS X, utiliser une hauteur 
  de 25 activera un bouton avec une hauteur 
  fixe, ce qui est couramment utilisé dans les 
  applications OS X. Il activera également 
  l'option @#PB_Button_Default.
@EndIndent

@Parameter "Texte$"
   Le texte qui sera affiché dans le bouton.
   
@OptionalParameter "Options"   
  Peut être une combinaison des constantes 
  suivantes:
@FixedFont
  @#PB_Button_Right    : Aligne le texte du bouton à droite (non supporté sous OS X).
  @#PB_Button_Left     : Aligne le texte du bouton à gauche (non supporté sous OS X).
  @#PB_Button_Default  : Définit le bouton comme bouton par défaut (sur OS X, la hauteur du bouton doit être 25).
  @#PB_Button_MultiLine: Affiche le texte sur plusieurs lignes s'il est trop long (non supporté sous OS X).
  @#PB_Button_Toggle   : Crée un bouton de type 'Toggle' (bascule). Ce bouton alterne l'état 'appuyé' et 'normal'.
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

  Les commandes suivantes peuvent être utilisées pour agir sur le gadget:
  - @@SetGadgetText: Change le texte affiché par le bouton.
  - @@GetGadgetText: Renvoie le texte affiché par le bouton.
  
  Utile avec les boutons de type bascule (@#PB_Button_Toggle)
  - @@SetGadgetState:  Changer d'état (1 = pressé, 0 = normal).
  - @@GetGadgetState:  Renvoie l'état (1 = pressé, 0 = normal).
@EndFixedFont

@OS Windows
  @Underline "Pour Windows uniquement":
@Indent
  Vous pouvez utiliser le caractère '&' 
  pour souligner une lettre particulière dans 
  le 'Texte$' du bouton : "&Bouton" affichera 
  : @Underline "B"outon
  @LineBreak
  (Note: Sous Windows, le support 
  des thèmes d'affichage peut empêcher le 
  caractère souligné de s'afficher.)
  @LineBreak
  @LineBreak
  Vous pouvez associer un raccourci clavier 
  au bouton avec la commande 
  @@AddKeyboardShortcut.
@EndIndent
@EndOS

@Example
@Code
  ; Démonstration des options possibles pour le gadget bouton
  ;
  If OpenWindow(0, 0, 0, 222, 200, "ButtonGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    ButtonGadget(0, 10,  10, 200, 20, "Bouton standard")
    ButtonGadget(1, 10,  40, 200, 20, "Texte aligné à gauche", #PB_Button_Left)
    ButtonGadget(2, 10,  70, 200, 20, "Texte aligné à droite", #PB_Button_Right)
    ButtonGadget(3, 10, 100, 200, 60, "Texte sur plusieurs lignes (les textes longs retournent automatiquement à la ligne)", #PB_Button_MultiLine)
    ButtonGadget(4, 10, 170, 200, 20, "Bouton à bascule", #PB_Button_Toggle)
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image buttongadget.png

@SeeAlso
  @@SetGadgetText, @@GetGadgetText, 
  @@SetGadgetState, @@GetGadgetState, 
  @@ButtonImageGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = CalendarGadget(#Gadget, X, Y, Largeur, Hauteur [, Date [, Option]])

@Description
  Crée un gadget de type calendrier dans 
  la GadgetList en cours. 
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.
  
@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.  
  
@OptionalParameter "Date"  
  La date initiale à définir. 
@LineBreak
  La valeur par défaut est la date du jour.
  
@OptionalParameter "Option"  
  @#PB_Calendar_Borderless : Créer un gadget 
  sans bordure (pas supporté par Linux).
  
@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks  
  La date utilisée par ce gadget est identique 
  à celle utilisée dans la bibliothèque Date.
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

  Les commandes suivantes peuvent être utilisées pour agir sur le gadget :
  - @@SetGadgetState: Change la date actuellement affichée.
  - @@GetGadgetState: Renvoie la date actuellement affichée.

  - @@SetGadgetItemState: Fait apparaître une date donnée en gras (Windows seulement).
  - @@GetGadgetItemState: Détermine si une date donnée est en gras (Windows seulement).

  - @@SetGadgetAttribute avec les attributs suivants:
    @#PB_Calendar_Minimum: Change la date minimale que l'utilisateur peut choisir
    @#PB_Calendar_Maximum: Change la date maximale que l'utilisateur peut choisir avec ce gadget
                          (Remarque: la date sélectionnable n'est pas prise en charge sous Linux.)
                          
  - @@GetGadgetAttribute avec les attributs suivants:
    @#PB_Calendar_Minimum: Renvoie la date minimale que l'utilisateur peut choisir
    @#PB_Calendar_Maximum: Renvoie la date maximale que l'utilisateur peut choisir avec ce gadget
                          (Remarque: la date sélectionnable n'est pas prise en charge sous Linux.)
                          
  - @@SetGadgetColor et @@GetGadgetColor avec les constantes suivantes comme 'TypeCouleur':
    @#PB_Gadget_BackColor      : Couleur de fond
    @#PB_Gadget_FrontColor     : Couleur du texte pour les jours affichés (non pris en charge sous Windows)
    @#PB_Gadget_TitleBackColor : Couleur du fond du titre du mois (non pris en charge sous Windows)
    @#PB_Gadget_TitleFrontColor: Couleur du texte du titre du mois (non pris en charge sous Windows)
    @#PB_Gadget_GrayTextColor  : Couleur du texte pour les jours n'appartenant pas au mois courant (non pris en charge sous Windows)
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 250, 200, "CalendarGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    CalendarGadget(0, 10, 10, 230, 180)
    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image calendargadget.png

@SeeAlso
  @@SetGadgetState, @@GetGadgetState, 
  @@SetGadgetItemState, @@GetGadgetItemState, 
  @@SetGadgetAttribute, @@GetGadgetAttribute, 
  @@SetGadgetColor, @@GetGadgetColor,
  @@DateGadget, @@Date, @@FormatDate

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = CanvasGadget(#Gadget, X, Y, Largeur, Hauteur [, Options])

@Description
  Crée un canvas dans la GadgetList en cours. 
@LineBreak
@LineBreak
  Ce gadget offre une surface de dessin sans canal alpha et 
  d'évènements pour la souris et le clavier 
  dans le but de créer facilement des 
  affichages personnalisées. 

@Parameter "#Gadget"
  Numéro d'identification du canvas. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  Position et dimensions du canvas en pixels.
  @LineBreak
  Les valeurs maximales pour la largeur et la 
  hauteur sont de 16 000 pixels.

@OptionalParameter "Options"
  Combinaison des constantes suivantes:
@FixedFont
  @#PB_Canvas_Border   : Trace une bordure autour du gadget.
  
  @#PB_Canvas_ClipMouse: Capture automatiquement la souris dans la zone 
                        du gadget tant qu'un bouton de la souris est appuyé.
                        (Non supporté par OS X et Linux gtk3).
  
  @#PB_Canvas_Keyboard : Reçoit le focus du clavier ainsi que les évènements clavier.
                        Avec cette option, utilisez les évènements @#PB_EventType_Focus 
                        et @#PB_EventType_LostFocus pour identifier le gadget qui a le focus. 
                        Une autre façon de savoir si le canvas a le focus, est l'utilisation de @#PB_Canvas_DrawFocus 
                        qui dessine un rectangle de focus chaque fois qu'il a le focus.

  @#PB_Canvas_DrawFocus: Dessine un rectangle de focus sur le gadget s'il a le focus clavier.
  
  @#PB_Canvas_Container: Permet le support du mode conteneur afin d'y ajouter des gadgets. @@CloseGadgetList 
                        doit être appelé pour revenir à la liste de gadgets précédente comme tout autre conteneur.
                        Sous Windows, la transparence des gadgets n'est pas prise en compte ainsi le texte des gadgets 
                        suivants sera affiché sur un fond opaque: CheckBoxGadget, FrameGadget, HyperlinkGadget, 
                        OptionGadget, TextGadget et TrackBarGadget.

@EndFixedFont
  
@LineBreak
@LineBreak

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès ou une valeur nulle en cas d'échec. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé
  alors la valeur retournée est son numéro 
  d'dentification en cas de succès.
@LineBreak
@LineBreak

@Remarks
  -  Le @@CanvasGadget n'ayant pas de canal alpha (transparence), 
  les modes #PB_2DDrawing_AlphaChannel de la fonction @@DrawingMode n'aura 
  aucun effet et le mode #PB_2DDrawing_AllChannels sera équivalent à #PB_2DDrawing_Default 
@LineBreak
@LineBreak  
  - Le gadget apparaît comme un simple fond 
  blanc. 
@LineBreak
@LineBreak
  - Utiliser la commande @@CanvasOutput ou 
  la commande @@CanvasVectorOutput pour 
  dessiner sur le canvas. 
@LineBreak
@LineBreak
  - Le contenu reste persistant jusqu'à ce 
  qu'il soit effacé par une opération de 
  dessin. 
@LineBreak
@LineBreak
  - Il n'est pas nécessaire de redessiner le 
  contenu à chaque fois qu'un évènement 
  @#PB_Event_Repaint est reçu.
@LineBreak
@LineBreak
@LineBreak
@LineBreak
@Section .:Evènements:. 
@FixedFont
Le canvas renvoie les types d'évènements @@EventType suivant: 
Connaitre l'état du canvas: @@GetGadgetAttribute avec les options suivantes:
@Indent
  @#PB_EventType_MouseEnter      : Le curseur de la souris est entré dans le gadget 
  @#PB_EventType_MouseLeave      : Le curseur de la souris est sorti du gadget
  @#PB_EventType_MouseMove       : Le curseur de la souris a bougé
  @#PB_EventType_MouseWheel(*)   : La molette de la souris a bougé
  
  @#PB_EventType_LeftButtonDown  : Le bouton gauche de la souris a été pressé
  @#PB_EventType_LeftButtonUp    : Le bouton gauche de la souris a été relâché
  @#PB_EventType_LeftClick       : Un clic avec le bouton gauche de la souris
  @#PB_EventType_LeftDoubleClick : Un double-clic avec le bouton gauche de la souris
  @#PB_EventType_RightButtonDown : Le bouton droit de la souris a été pressé
  @#PB_EventType_RightButtonUp   : Le bouton droit de la souris a été relâché
  @#PB_EventType_RightClick      : Un clic avec le bouton droit de la souris
  @#PB_EventType_RightDoubleClick: Un double-clic avec le bouton droit de la souris
  @#PB_EventType_MiddleButtonDown: Le bouton central de la souris a été pressé
  @#PB_EventType_MiddleButtonUp  : Le bouton central de la souris a été relâché
  
  @#PB_EventType_Focus           : Le gadget a obtenu le focus clavier
  @#PB_EventType_LostFocus       : Le gadget a perdu le focus clavier
  @#PB_EventType_KeyDown(*)      : Une touche clavier a été pressée 
  @#PB_EventType_KeyUp(*)        : Une touche clavier a été relâchée 
  @#PB_EventType_Input(*)        : Du texte a été entré dans le gadget 
 
   @#PB_EventType_Resize         : Le gadget a été redimensionné
   
  (*)    Les évènements @#PB_EventType_KeyDown, @#PB_EventType_KeyUp 
         et @#PB_EventType_Input sont renvoyés seulement si le gadget 
         a le focus clavier (Voir l'option @#PB_Canvas_Keyboard). @LineBreak
         Avec Windows, l'évènement @#PB_EventType_MouseWheel est renvoyé seulement 
         si le gadget a le focus clavier. Avec les autres OS, cet évènement est renvoyé au gadget 
         sous le curseur, qu'il ait le focus clavier ou non. 
@EndIndent
@EndFixedFont
@LineBreak

@Section .:Attributs:. Les connaître.
@FixedFont
  - @@GetGadgetAttribute permet de connaître les attributs du canvas avec les options suivantes:
@EndFixedFont
  @Bold "Souris:"
@FixedFont
  @ConstantColor "- #PB_Canvas_MouseX"    : Renvoie les coordonnées de la souris dans la zone de dessin du canvas 
  @ConstantColor "- #PB_Canvas_MouseY"    : au moment où l'évènement a été généré.
                           Note: Le résultat peut être différent des coordonnées envoyées par @@WindowMouseX et par 
                                 @@WindowMouseY qui elles, renvoient l'emplacement actuel de la souris indépendamment des 
                                 évènements.

  @ConstantColor "- #PB_Canvas_Buttons"   : Renvoie l'état des boutons de la souris.
                           Peut être une combinaison de: 
                             @#PB_Canvas_LeftButton  : Le bouton de gauche est actuellement enfoncé.  
                             @#PB_Canvas_RightButton : Le bouton de droite est actuellement enfoncé.  
                             @#PB_Canvas_MiddleButton: Le bouton du milieu est actuellement enfoncé.

  @ConstantColor "- #PB_Canvas_WheelDelta": Renvoie le mouvement de la molette de la souris par multiple de 1 ou -1.
                           Une valeur positive indique que la roue a été tournée vers le haut (en l'éloignant de 
                           l'utilisateur) et une valeur négative indique que la roue a été déplacée vers le bas 
                           (vers l'utilisateur). 
                           Cet attribut est à 0 si l'évènement en cours n'est pas un évènement @#PB_EventType_MouseWheel.
  
  @ConstantColor "- #PB_Canvas_Clip"      : Renvoie une valeur non nulle si la souris est confinée dans le canvas, zéro sinon.
  
  @ConstantColor "- #PB_Canvas_Cursor"    : Renvoie le curseur qui est actuellement utilisé dans le gadget.
                           Voir ci-dessous pour obtenir une liste des valeurs possibles. 
                           Si le gadget utilise un handle de curseur personnalisé, la valeur retournée est -1.
  
  @ConstantColor "- #PB_Canvas_CustomCursor": Renvoie le handle personnalisé du curseur qui a été défini à l'aide de @@SetGadgetAttribute. 
                             Si le gadget utilise un curseur standard, la valeur retournée est zéro. 
@EndFixedFont
  @Bold "Clavier:"
@FixedFont
   @ConstantColor "- #PB_Canvas_Modifiers": Renvoie l'état des touches de contrôle du clavier. 
                           Peut être une combinaison de:
                             @#PB_Canvas_Shift  : La touche 'Shift' est actuellement pressée. 
                             @#PB_Canvas_Alt    : La touche 'Alt' est actuellement pressée. 
                             @#PB_Canvas_Control: La touche 'Control' est actuellement pressée. 
                             @#PB_Canvas_Command: La touche 'Command' (ou 'Pomme') est actuellement pressée. (OS X seulement)

  @ConstantColor "- #PB_Canvas_Key"  : Renvoie la touche du clavier qui a été enfoncée ou relâchée après un évènement @#PB_EventType_KeyDown ou un évènement @#PB_EventType_KeyUp et 
                      la valeur retournée est l'une des constantes @#PB_Shortcut_ ... qui sont utilisées par la fonction @@AddKeyboardShortcut. 
                      Note: Cet attribut renvoie la première touche pressée. 
                      Note: Pour obtenir un texte saisi au clavier dans le Canvasgadget, il est préférable d'utiliser l'évènement @#PB_EventType_Input 
                            avec l'attribut @#PB_Canvas_Input, car il permet la saisie de texte à partir d'une combinaison de plusieurs touches telles 
                            que la touche 'Shift' et autres touches muettes.

  @ConstantColor "- #PB_Canvas_Input": Renvoie le caractère qui a été généré par une ou plusieurs touches. Cet attribut n'est présent qu'après un évènement @#PB_EventType_Input. 
                      La valeur du caractère retourné peut être convertie en une chaîne de caractères en utilisant la fonction @@Chr.   
@EndFixedFont
  @Bold "Image:"
@FixedFont
  @ConstantColor "- #PB_Canvas_Image": Renvoie un ImageID, valeur qui représente le numéro d'une image avec le contenu actuel du CanvasGadget. 
                      Cette valeur peut être utilisée pour dessiner le contenu du gadget vers une autre surface de dessin en utilisant la fonction @@DrawImage. 
                      Note: La valeur retournée est valable uniquement jusqu'à l'apparition d'une modification apportée au gadget comme le 
                            redimensionnement ou un changement dans le dessin, donc elle ne devrait être utilisée directement que dans une commande de 
                            type @@DrawImage et ne pas être stockée pour une utilisation future.
@EndFixedFont

  @Underline "Attention:" Ces informations ne sont disponibles que si l'évènement courant reçu par @@WaitWindowEvent 
  ou @@WindowEvent provient d'un canvas.
@LineBreak
@LineBreak
@LineBreak
@LineBreak
@LineBreak
@LineBreak
@LineBreak
@Section .:Attributs:.   Les modifier.
@FixedFont
  - @@SetGadgetAttribute permet de changer les attributs du canvas avec les options suivantes:
@EndFixedFont
  @Bold "Souris:"
@FixedFont
  @ConstantColor "- #PB_Canvas_Clip": Une valeur non nulle et le mouvement du curseur de la souris sera confiné à la zone du canvas gadget. 
                     Avec une valeur nulle, cela supprime le confinement. 
                     Note: Le confinement de la souris doit être uniquement le résultat direct de l'action de l'utilisateur sur le canvas, comme un clic de souris par exemple, 
                           et il faut prendre soin de bien enlever le confinement à nouveau, sinon l'utilisateur sera emprisonné à l'intérieur du gadget. 
                     L'option @#PB_Canvas_ClipMouse peut être utilisée pour automatiquement capturer/relâcher la souris lorsque l'utilisateur appuie ou relâche le bouton 
                     de la souris dans le canvas. 

  @ConstantColor "- #PB_Canvas_Cursor": Change le curseur lorsque la souris survole le gadget. 
                       Les valeurs suivantes sont possibles: 
                         @#PB_Cursor_Default   : Flèche du curseur par défaut 
                         @#PB_Cursor_Cross     : Curseur en forme de croix 
                         @#PB_Cursor_IBeam     : Barre d'insertion 'I' utilisée pour la sélection de texte  
                         @#PB_Cursor_Hand      : Curseur main 
                         @#PB_Cursor_Busy      : Curseur sablier ou une montre 
                         @#PB_Cursor_Denied    : Curseur cercle barré ou curseur X 
                         @#PB_Cursor_Arrows    : Flèches dans toutes les directions (non disponible sur OS X) 
                         @#PB_Cursor_LeftRight : Flèches gauche et droite 
                         @#PB_Cursor_UpDown    : Flèches haut et bas 
                         @#PB_Cursor_LeftUpRightDown: Flèches diagonales (Windows uniquement) 
                         @#PB_Cursor_LeftDownRightUp: Flèches diagonales (Windows uniquement)  
                         @#PB_Cursor_Invisible      : Cache le curseur 

  @ConstantColor "- #PB_Canvas_CustomCursor": Change le curseur lorsque la souris survole le gadget en un curseur personnalisé créé en utilisant l'API de l'OS correspondant.

                             Le type attendu est: 
                               Avec Windows: Un handle HCURSOR 
                               Avec Linux  : Un pointeur GtkCursor 
                               Avec OS X: Un pointeur vers une structure Curseur 

@EndFixedFont

  @bold "Image:"
@FixedFont 
  @ConstantColor "- #PB_Canvas_Image": Applique l'ImageID au CanvasGadget. 
                      Le gadget fait une copie de l'image d'entrée afin qu'elle puisse être libérée ou réutilisée après cet appel. 
                      Utiliser cet attribut revient à utiliser @@StartDrawing, @@CanvasOutput et @@DrawImage pour dessiner l'image sur le CanvasGadget.  
@EndFixedFont
@FixedFont 
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 220, 220, "CanvasGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    CanvasGadget(0, 10, 10, 200, 200)
    
    Repeat
      Event = WaitWindowEvent()
          
      If Event = #PB_Event_Gadget And EventGadget() = 0 
        If EventType() = #PB_EventType_LeftButtonDown Or (EventType() = #PB_EventType_MouseMove And GetGadgetAttribute(0, #PB_Canvas_Buttons) & #PB_Canvas_LeftButton)
          If StartDrawing(CanvasOutput(0))
            x = GetGadgetAttribute(0, #PB_Canvas_MouseX)
            y = GetGadgetAttribute(0, #PB_Canvas_MouseY)
            Circle(X, Y, 10, RGB(Random(255), Random(255), Random(255)))
            StopDrawing()
          EndIf
        EndIf
      EndIf    
      
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@Example Canvas container 
@Code
If OpenWindow(0, 0, 0, 220, 220, "Canvas container", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
  
  CanvasGadget(0, 10, 10, 200, 200, #PB_Canvas_Container)
  ButtonGadget(1, 10, 10, 80, 30, "Effacer")
  CloseGadgetList()
  
  Repeat
    Event = WaitWindowEvent()
    
    If Event = #PB_Event_Gadget
      Select EventGadget() 
        Case 0
          If EventType() = #PB_EventType_LeftButtonDown Or (EventType() = #PB_EventType_MouseMove And GetGadgetAttribute(0, #PB_Canvas_Buttons) & #PB_Canvas_LeftButton)
            If StartDrawing(CanvasOutput(0))
              x = GetGadgetAttribute(0, #PB_Canvas_MouseX)
              y = GetGadgetAttribute(0, #PB_Canvas_MouseY)
              Circle(x, y, 10, RGB(Random(255), Random(255), Random(255)))
              StopDrawing()
            EndIf
          EndIf
          
        Case 1
          If StartDrawing(CanvasOutput(0))
            Box(0, 0, 200, 200, #White)
            StopDrawing()
          EndIf
      EndSelect
    EndIf
    
  Until Event = #PB_Event_CloseWindow
EndIf
@EndCode

@Image canvasgadget.png

@ExampleFile All CanvasGadget.pb

@SeeAlso
  @@CanvasOutput, @@GetGadgetAttribute, 
  @@SetGadgetAttribute, @@EventType, 
  @@StartDrawing

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = CanvasOutput(#Gadget)

@Description
  Renvoie le numéro d'identification OutputID 
  d'un CanvasGadget pour effectuer l'opération 
  de rendu 2D.

@Parameter "#Gadget"
  Le numéro du @@CanvasGadget.

@ReturnValue
  Renvoie l'identifiant ouputID ou zéro si le 
  dessin n'est pas possible. 
@LineBreak
@LineBreak
  Cette valeur doit être transmise directement 
  à la fonction @@StartDrawing  pour lancer 
  l'opération de dessin. 
@LineBreak
@LineBreak
  La valeur de retour n'est valable que pour 
  une seule opération de dessin et ne peut pas 
  être réutilisée.

@Example
@Code
  ...
  StartDrawing(CanvasOutput(#Gadget))
    ; code de dessin ici ...
  StopDrawing()
@EndCode

@Remarks
  Le dessin sur un @@CanvasGadget utilise un 
  double tampon. Cela signifie que les 
  opérations de dessin ne deviennent 
  visibles qu'après la commande @@StopDrawing 
  pour éviter un effet de scintillement 
  pendant le rendu.
@LineBreak
@LineBreak
  Le @@canvasgadget n'ayant pas de canal alpha (transparence), 
  les mode #PB_2DDrawing_AlphaChannel de la fonction @@DrawingMode n'aura 
  aucun effet et le mode #PB_2DDrawing_AllChannels sera équivalent à #PB_2DDrawing_Default 
  
@SeeAlso
  @@StartDrawing, @@CanvasGadget, @@CanvasVectorOutput

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = CanvasVectorOutput(#Gadget [, UniteDeMesure])

@Description
  Renvoie le numéro d'identification OutputID 
  d'un CanvasGadget afin d'effectuer des opérations 
  de dessin vectoriel.

@Parameter "#Gadget"
  Le numéro du @@CanvasGadget.

@OptionalParameter "UniteDeMesure"
  Spécifie l'unité utilisée pour mesurer les distances sur le dessin.@LineBreak
@FixedFont
  @#PB_Unit_Pixel     : Les valeurs sont mesurées en pixels (Par défaut)(ou point (dots) pour les imprimantes)
  @#PB_Unit_Point     : Les valeurs sont mesurées en points (1/72 pouce = 25.4/72 mm = 0,352 778 mm)
  @#PB_Unit_Inch      : Les valeurs sont mesurées en pouces (25,4 millimètres)
  @#PB_Unit_Millimeter: Les valeurs sont mesurées en millimètres (0,039 370 pouce)
@EndFixedFont
  
@ReturnValue
  Renvoie l'identifiant ouputID ou zéro si le 
  dessin n'est pas possible. 
@LineBreak
@LineBreak
  Cette valeur doit être transmise directement 
  à la fonction @@StartVectorDrawing pour lancer 
  l'opération de dessin. 
@LineBreak
@LineBreak
  La valeur de retour n'est valable que pour 
  une seule opération de dessin et ne peut pas 
  être réutilisée.

@Example
@Code
  ...
  StartVectorDrawing(CanvasVectorOutput(#Gadget))
    ; code de dessin ici ...
  StopVectorDrawing()
@EndCode

@Remarks
  Le dessin sur un @@CanvasGadget utilise un 
  double tampon. Cela signifie que les 
  opérations de dessin ne deviennent visibles 
  qu'après la commande @@StopVectorDrawing 
  pour éviter un effet de scintillement 
  pendant le rendu.

@SeeAlso
  @@StartVectorDrawing, @@CanvasGadget, @@CanvasOutput

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = OpenGLGadget(#Gadget, X, Y, Longueur, Hauteur [, Options])

@Description
  Crée une surface d'affichage 3D OpenGL 
  dans la GadgetListe. 

@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.
@LineBreak
@LineBreak
  La largeur et la hauteur maximale est de 
  16 000 pixels.

@OptionalParameter "Options"
  Peut être une combinaison des constantes 
  suivantes:
@FixedFont
  @#PB_OpenGL_Keyboard               : permet de recevoir le focus et les évènements du clavier.
  @#PB_OpenGL_NoFlipSynchronization  : désactive la synchronisation verticale vsync.
  @#PB_OpenGL_FlipSynchronization    : permet la synchronisation verticale vsync (par défaut).
  @#PB_OpenGL_NoDepthBuffer          : désactive le tampon de profondeur.
  @#PB_OpenGL_16BitDepthBuffer       : crée un tampon de profondeur 16 bits (par défaut).
  @#PB_OpenGL_24BitDepthBuffer       : crée un tampon de profondeur 24 bits.
  @#PB_OpenGL_NoStencilBuffer        : désactive le stencil buffer (par défaut).
  @#PB_OpenGL_8BitStencilBuffer      : crée un stencil buffer 8 bits.
  @#PB_OpenGL_NoAccumulationBuffer   : désactive le tampon d'accumulation (par défaut).
  @#PB_OpenGL_32BitAccumulationBuffer: crée un tampon d'accumulation 32 bits.
  @#PB_OpenGL_64BitAccumulationBuffer: crée un tampon d'accumulation 64 bits.
@EndFixedFont
  L'option @#PB_OpenGL_Keyboard est nécessaire 
  pour recevoir des évènements du clavier 
  dans le gadget. Si vous utilisez cette 
  option, vous devriez utiliser les évènements 
  @#PB_EventType_Focus et 
  @#PB_EventType_LostFocus afin de créer une 
  indication visuelle autour ou sur le gadget 
  quand il reçoit le focus. Ainsi il sera 
  clair pour l'utilisateur que le gadget a 
  bien reçu le focus.

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.

@Remarks
  Ce gadget offre une surface d'affichage qui 
  gère les évènements de la souris et du 
  clavier afin de créer facilement des 
  dessins 3D avec OpenGL. La plupart des 
  commandes OpenGL sont directement disponibles 
  dans PureBasic avec la notation de l'API 
  qui utilise le caractère "soulignement" 
  (la commande se termine par un trait de 
  soulignement, par exemple: 'glBegin_()').
@LineBreak
@LineBreak
  Le gadget créé affiche un fond noir et le 
  contexte courant est réglé sur ce nouveau 
  gadget. Pour modifier le contexte courant, 
  utiliser l'attribut @#PB_OpenGL_SetContext. 
  Une fois établi, un cadre peut être affiché 
  à l'aide de l'attribut 
  @#PB_OpenGL_FlipBuffers.
@LineBreak
@LineBreak
  Comme le gadget OpenGL est un gadget de rendu en temps réel, il ne stocke pas son rendu dans un tampon séparé, 
  il doit être rendu à nouveau lorsque la fenêtre est redimensionnée, minimisée, maximisée ou si le gadget lui-même 
  est redimensionné ou déplacé .
@LineBreak
@LineBreak

  .: Evènements:@LineBreak
  La fonction @@EventType indique le type de l'évènement:
@FixedFont
  @#PB_EventType_MouseEnter      : Le curseur de la souris est entré dans le gadget
  @#PB_EventType_MouseLeave      : Le curseur de la souris a quitté le gadget
  @#PB_EventType_MouseMove       : Le curseur de la souris a bougé
  @#PB_EventType_MouseWheel      : La molette de la souris a été utilisée
  @#PB_EventType_LeftButtonDown  : Le bouton gauche de la souris a été pressé
  @#PB_EventType_LeftButtonUp    : Le bouton gauche de la souris a été relâché
  @#PB_EventType_LeftClick       : Un clic avec le bouton gauche de la souris
  @#PB_EventType_LeftDoubleClick : Un double-clic avec le bouton gauche de la souris
  @#PB_EventType_RightButtonDown : Le bouton droit de la souris a été pressé
  @#PB_EventType_RightButtonUp   : Le bouton droit de la souris a été relâché
  @#PB_EventType_RightClick      : Un clic avec le bouton droit de la souris
  @#PB_EventType_RightDoubleClick: Un double-clic avec le bouton droit de la souris
  @#PB_EventType_MiddleButtonDown: Le bouton du milieu de la souris a été pressé
  @#PB_EventType_MiddleButtonUp  : Le bouton du milieu de la souris a été relâché
  @#PB_EventType_Focus           : Le gadget a reçu le focus clavier
  @#PB_EventType_LostFocus       : Le gadget a perdu le focus clavier
  @#PB_EventType_KeyDown         : Une touche a été pressée
  @#PB_EventType_KeyUp           : Une touche a été relâchée
  @#PB_EventType_Input           : La saisie de texte a été générée   
@EndFixedFont
  
  Notez que les évènements 
  @#PB_EventType_KeyDown, 
  @#PB_EventType_KeyUp et 
  @#PB_EventType_Input ne sont signalés que 
  lorsque le gadget a le focus clavier. 
  Cela signifie que l'option 
  @#PB_OpenGL_Keyboard doit être mise lors de 
  la création du gadget pour permettre de 
  recevoir les évènements du clavier. Sous 
  Windows, l'évènement 
  @#PB_EventType_MouseWheel n'est également 
  signalé que si le gadget a le focus clavier. 
  Sur les autres systèmes d'exploitation, cet 
  évènement est signalé au gadget sous le 
  curseur, indépendamment de l'état du focus 
  clavier.

@LineBreak
@LineBreak
  .: @@GetGadgetAttribute 
@LineBreak
@LineBreak 
  Les attributs suivants peuvent être utilisés:
@LineBreak
@LineBreak
  @#PB_OpenGL_MouseX, @#PB_OpenGL_MouseY
@Indent
  Renvoie les coordonnées de la souris par 
  rapport à la zone de dessin du gadget. 
  Cela renvoie la position de la souris au 
  moment où l'évènement a été généré, de 
  sorte que le résultat peut différer des 
  coordonnées envoyées par @@WindowMouseX et
  @@WindowMouseY qui renvoient l'emplacement 
  actuel de la souris indépendamment des 
  évènements traités. 
  Les coordonnées retournées à l'aide de ces 
  attributs doivent être utilisés pour ce 
  gadget pour s'assurer que les coordonnées 
  de la souris sont en phase avec l'évènement 
  en cours.
  @EndIndent

  @#PB_OpenGL_Buttons
@Indent
  Renvoie l'état des boutons de la souris. 
  @LineBreak
  Le résultat est une combinaison (en 
  utilisant au niveau du bit ou) des valeurs 
  suivantes: 
@FixedFont
  @#PB_OpenGL_LeftButton  : Le bouton gauche est actuellement enfoncé.
  @#PB_OpenGL_RightButton : Le bouton droit est actuellement enfoncé.
  @#PB_OpenGL_MiddleButton: Le bouton du milieu est actuellement enfoncé.
@EndFixedFont
@EndIndent

  @#PB_OpenGL_Modifiers
@Indent
  Renvoie l'état des modificateurs de clavier 
  pour l'évènement. @LineBreak
  Le résultat est une combinaison (en 
  utilisant au niveau du bit ou) des valeurs 
  suivantes:
@FixedFont
  @#PB_OpenGL_Shift  : La touche 'majuscule ('shift') est actuellement pressée.
  @#PB_OpenGL_Alt    : La touche 'alt' est actuellement pressée.
  @#PB_OpenGL_Control: La touche 'control' est actuellement pressée.
  @#PB_OpenGL_Command: La touche 'command' (ou 'pomme') est actuellement pressée. (OS X seulement)
@EndFixedFont
@EndIndent

  @#PB_OpenGL_WheelDelta
@Indent
  Renvoie le mouvement de la molette de la 
  souris par multiple de 1 ou -1. @LineBreak
  Une valeur positive indique que la roue a 
  été déplacée vers le haut (loin de 
  l'utilisateur) et une valeur négative 
  indique que la roue a été déplacée vers le 
  bas (vers l'utilisateur). 
  Cet attribut est égal à zéro si l'évènement 
  en cours n'est pas un évènement 
  @#PB_EventType_MouseWheel.
@EndIndent

  @#PB_OpenGL_Key
@Indent
  Renvoie la touche qui a été enfoncée ou 
  relâchée dans un évènement 
  @#PB_EventType_KeyDown ou un évènement 
  @#PB_EventType_KeyUp. @LineBreak
  La valeur retournée est l'une des valeurs 
  @#PB_Shortcut_ ... utilisées par la 
  fonction @@AddKeyboardShortcut. Cet 
  attribut renvoie les touches, une à une. 
  Pour la saisie de texte, il est préférable 
  de voir l'évènement @#PB_EventType_Input 
  et d'utiliser l'attribut @#PB_OpenGL_Input 
  car il permet la saisie de texte même avec 
  des combinaisons de touches (majuscule, 
  accent circonflexe, ...).
@EndIndent

  @#PB_OpenGL_Input
@Indent
  Renvoie la valeur du caractère généré par 
  l'appui d'une ou de plusieurs touches. 
  @LineBreak
  Cet attribut n'est possible qu'après un 
  évènement @#PB_EventType_Input.  
  @LineBreak
  La valeur du caractère retourné peut être 
  convertie en une chaîne de caractère en 
  utilisant la fonction @@Chr.
@EndIndent

  @#PB_OpenGL_Cursor
@Indent
  Renvoie le curseur qui est actuellement 
  utilisé dans le gadget.  @LineBreak
  Voir ci-dessous la liste des valeurs 
  possibles. @LineBreak
  Si le gadget utilise un handle de curseur 
  personnalisé, le valeur de retour est -1.
@EndIndent

  @#PB_OpenGL_CustomCursor
@Indent
  Renvoie le handle du curseur personnalisé 
  qui a été défini avec @@SetGadgetAttribute. 
  @LineBreak 
  Si le gadget utilise un curseur standard, 
  la valeur de retour est 0.
@EndIndent
@LineBreak
@LineBreak
  
@LineBreak
@LineBreak
  .: @@SetGadgetAttribute modifie les attributs 
  suivants:
@LineBreak
@LineBreak

  @#PB_OpenGL_SetContext
@Indent
  Modifie le contexte courant du gadget.
@FixedFont
  @#True  : Utilise le contexte OpenGL du gadget.
  @#False : Retire le contexte courant. Plus de contexte disponible.
@EndFixedFont
@EndIndent

  @#PB_OpenGL_FlipBuffers
@Indent
  Renvoie les tampons arrière-plan et avant 
  plan. 
  Tous les dessins sont effectués dans la 
  mémoire tampon d'arrière plan. 
  Pour être visible, les tampons doivent 
  être échangés, de sorte que le tampon 
  d'arrière plan devienne le tampon d'avant 
  plan (celui qui est affiché).
@FixedFont
  @#True  : Echange les tampons
  @#False : Ne pas échanger les tampons (pour l'instant).
@EndFixedFont
@EndIndent

  @#PB_OpenGL_Cursor
@Indent
  Change le curseur qui est affiché lorsque 
  la souris passe au dessus du gadget. 
  @LineBreak
  Les valeurs suivantes sont possibles:
@FixedFont
  @#PB_Cursor_Default        : Par défaut le curseur flèche
  @#PB_Cursor_Cross          : Croix
  @#PB_Cursor_IBeam          : Point d'insertion "I"
  @#PB_Cursor_Hand           : Main
  @#PB_Cursor_Busy           : Sablier ou montre
  @#PB_Cursor_Denied         : Cercle barré ou grand "X"
  @#PB_Cursor_Arrows         : Flèches dans toutes les directions (non disponible sur OS X)
  @#PB_Cursor_LeftRight      : Flèches gauche et droite
  @#PB_Cursor_UpDown         : Flèches haut et bas
  @#PB_Cursor_LeftUpRightDown: Flèches diagonales (Windows uniquement)
  @#PB_Cursor_LeftDownRightUp: Flèches diagonales (Windows uniquement)
  @#PB_Cursor_Invisible      : Curseur invisible
@EndFixedFont
@EndIndent

  @#PB_OpenGL_CustomCursor
@Indent
  Change le curseur qui est affiché lorsque 
  la souris survole le gadget en un handle 
  de curseur personnalisé créé à l'aide de 
  l'API du système d'exploitation 
  correspondant.@LineBreak
   Cet attribut prévoit le type d'entrée 
   suivants:
@Indent
  Windows: Un handle HCURSOR
@LineBreak
  Linux: Un pointeur GtkCursor 
@LineBreak
  OS X: Un pointeur vers une structure de 
  curseur 
@EndIndent
@EndIndent

  .: Une 'mini aide' peut être ajoutée à ce 
  gadget à l'aide de @@GadgetToolTip. 

@ExampleFile All OpenGLGadget.pb

@SeeAlso
  @@GetGadgetAttribute, 
  @@SetGadgetAttribute, 
  @@EventType

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = CheckBoxGadget(#Gadget, X, Y, Largeur, Hauteur, Texte$ [, Options])

@Description
  Crée un gadget case à cocher dans la 
  GadgetList en cours.

@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du 
  nouveau gadget.

@Parameter "Texte$"
  Le texte à afficher à côté de la case, il 
  est placé à sa droite.

@OptionalParameter "Options"
   Peut être une combinaison de:
@FixedFont
  @#PB_CheckBox_Right     : Aligne le texte de la case à cocher à droite.
  @#PB_CheckBox_Center    : Centre le texte de la case à cocher.
  @#PB_CheckBox_ThreeState: Crée une case à cocher qui peut avoir trois états (dont un état intermédiaire).
@EndFixedFont
@Indent
  L'option @#PB_CheckBox_ThreeState permet à 
  une case à cocher de représenter l'état de 
  plusieurs éléments.
  L'état indéterminé (ni coché, ni décoché) 
  indique alors que certains éléments sont 
  dans un état différent des autres.
  En cliquant sur la case à cocher, 
  l'utilisateur peut alors les remettre tous 
  dans le même état, soit coché, soit
  décoché. L'état indéterminé peut donc 
  uniquement être activé à l'aide de 
  @@SetGadgetState.
@EndIndent

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget.

  - @@GetGadgetState est utilisé pour récupérer l'état du gadget. 
  - @@SetGadgetState est utilisé pour changer l'état du gadget. 
@EndFixedFont
  
@Example
@Code
  If OpenWindow(0, 0, 0, 270, 160, "CheckBoxGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    CheckBoxGadget(0, 10,  10, 250, 20, "Case à cocher standard")
    CheckBoxGadget(1, 10,  40, 250, 20, "Case à cocher (cochée)") : SetGadgetState(1, #PB_Checkbox_Checked)
    CheckBoxGadget(2, 10,  70, 250, 20, "Case à cocher à trois états", #PB_CheckBox_ThreeState) : SetGadgetState(2, #PB_Checkbox_Inbetween)
    CheckBoxGadget(3, 10, 100, 250, 20, "Case à cocher (texte aligné à droite)", #PB_CheckBox_Right)
    CheckBoxGadget(4, 10, 130, 250, 20, "Case à cocher (texte centré)", #PB_CheckBox_Center)
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image checkboxgadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, 
  @@OptionGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function ClearGadgetItems(#Gadget)

@Description
  Supprime tous les éléments d'un gadget. 

@Parameter "#Gadget"
  Le gadget à nettoyer.  
 
@NoReturnValue

@Remarks 
 Le gadget doit être de l'un des types 
 suivants : 
@FixedFont
  - @@ComboBoxGadget
  - @@EditorGadget 
  - @@ListViewGadget 
  - @@ListIconGadget   
  - @@MDIGadget 
  - @@PanelGadget 
  - @@TreeGadget 
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 260, 150, "ClearGadgetItems", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    ListViewGadget(0,10,10,240,100)
    For a = 1 To 10 : AddGadgetItem (0, -1, "Elément "+Str(a)) : Next    ; ajoute 10 éléments
    ButtonGadget(1, 10, 120, 200, 20, "Supprimer le contenu de la boîte de liste")
    Repeat
      Evenement = WaitWindowEvent()
      If Evenement = #PB_Event_Gadget
        If EventGadget() = 1
          ClearGadgetItems(0)
        EndIf
      EndIf
    Until Evenement = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@AddGadgetItem, @@RemoveGadgetItem, 
  @@CountGadgetItems

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function CloseGadgetList() 

@Description
  Ferme la liste de gadgets courante et 
  revient à la précédente.

@NoParameters

@NoReturnValue

@Remarks
@FixedFont
  C'est particulièrement utile pour les gadgets suivants:
    - @@CanvasGadget
    - @@ContainerGadget
    - @@PanelGadget  
    - @@ScrollAreaGadget
@EndFixedFont

@SeeAlso
  @@OpenGadgetList, @@ContainerGadget, 
  @@PanelGadget, @@ScrollAreaGadget
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ComboBoxGadget(#Gadget, X, Y, Largeur, Hauteur [, Options])

@Description
  Crée un gadget Liste déroulante dans la 
  GadgetList en cours.
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.
  
@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_ComboBox_Editable : Rend la liste déroulante éditable
  @#PB_ComboBox_LowerCase: Tous les textes entrés dans la combobox sont convertis en minuscules
  @#PB_ComboBox_UpperCase: Tous les textes entrés dans la combobox sont convertis en majuscules
  @#PB_ComboBox_Image    : Active le support des images dans les éléments (sauf ComboBox éditables sous MacOS X)
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
 
@Remarks
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget.

  - @@AddGadgetItem     : Ajoute un élément
  - @@CountGadgetItems  : Renvoie le nombre d'éléments que contient le ComboBox. 
  - @@ClearGadgetItems  : Supprime tous les éléments 
  - @@RemoveGadgetItem  : Supprime un élément 
  
  - @@SetGadgetItemText : Change le texte de l'élément spécifié 
  - @@GetGadgetItemText : Renvoie le texte de l'élément spécifié 

  - @@SetGadgetItemImage: Change l'image associée au gadget (doit être créé avec l'option @#PB_ComboBox_Image).
  
  - @@SetGadgetState    : Change l'élément sélectionné.
  - @@GetGadgetState    : Renvoie l'index de l'élément sélectionné ou -1 si aucun élément n'a été ajouté ou sélectionné.

  - @@SetGadgetText     : Change le texte affiché. Si le ComboBoxGadget n'est pas éditable, le texte doit être dans la liste déroulante.
  - @@GetGadgetText     : Renvoie le contenu texte de la zone visible de la ComboBox. 

  - @@SetGadgetItemData : Associe une valeur personnalisée à cet élément. 
  - @@GetGadgetItemData : Renvoie la valeur personnalisée associée à cet élément.
@EndFixedFont

  ComboBoxGadget prend en charge les évènements suivants, voir @@EventType:
@FixedFont
  @#PB_EventType_Change   : La sélection du texte dans le champ d'édition a changé.
  @#PB_EventType_Focus    : Le champ d'édition a reçu le focus clavier (ComboBox modifiable uniquement).
  @#PB_EventType_LostFocus: Le champ d'édition a perdu le focus du clavier (ComboBox modifiable uniquement).
@EndFixedFont

@Example
@Code
  UsePNGImageDecoder()
  LoadImage(0, #PB_Compiler_Home + "examples/sources/Data/world.png")
  
  If OpenWindow(0, 0, 0, 270, 180, "ComboBoxGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ComboBoxGadget(0, 10, 10, 250, 21, #PB_ComboBox_Editable)
      AddGadgetItem(0, -1, "Liste déroulante éditable...")

    ComboBoxGadget(1, 10, 40, 250, 21, #PB_ComboBox_Image)
      AddGadgetItem(1, -1, "Liste déroulante avec une image", ImageID(0))

    ComboBoxGadget(2, 10, 70, 250, 21)
      For a = 1 To 5
        AddGadgetItem(2, -1,"Elément de liste déroulante " + Str(a))
      Next

    SetGadgetState(0, 0)
    SetGadgetState(1, 0)
    SetGadgetState(2, 2) ; Sélectionne le troisième élément (la numérotation commence à 0)
    
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image comboboxgadget.png

@SeeAlso
  @@AddGadgetItem, @@RemoveGadgetItem, 
  @@CountGadgetItems, @@ClearGadgetItems, 
  @@GetGadgetState, @@SetGadgetState, 
  @@GetGadgetText, @@SetGadgetText, 
  @@SetGadgetItemImage, 
  @@GetGadgetItemText, @@SetGadgetItemText, 
  @@GetGadgetItemData, @@SetGadgetItemData, 
  @@ExplorerComboGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ContainerGadget(#Gadget, X, Y, Largeur, Hauteur [, Options]) 

@Description
  Crée un nouveau gadget container qui est 
  un simple panneau destiné à contenir 
  d'autres gadgets. 
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_Container_BorderLess: Sans bordure (Defaut)
  @#PB_Container_Flat      : Cadre simple
  @#PB_Container_Raised    : Cadre élevé
  @#PB_Container_Single    : Cadre enfoncé
  @#PB_Container_Double    : Cadre doublement enfoncé
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
 
@Remarks  
  Une fois le gadget créé, les gadgets créés 
  utérieurement feront partie du container.
  @LineBreak
  Pour ne plus ajouter de gadgets au 
  container, utilisez la fonction 
  @@CloseGadgetList pour fermer la 
  'GadgetList' du container et retourner à 
  la 'GadgetList' précédente.@LineBreak 
  @@OpenGadgetList pourra être utilisé 
  pour ajouter des gadgets dynamiquement 
  dans ce #Gadget.

@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

  Les fonctions suivantes peuvent être appelées pour agir sur le container
  - @@SetGadgetColor et @@GetGadgetColor avec la constante
    @#PB_Gadget_BackColor comme 'TypeCouleur' pour changer la couleur de fond du gadget.

 L'évènement suivant est pris en charge par @@EventType:
  @#PB_EventType_Resize: Le gadget a été redimensionné.
@EndFixedFont  

@Example
@Code
  If OpenWindow(0, 0, 0, 322, 150, "ContainerGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)  
    ContainerGadget(0, 8, 8, 306, 133, #PB_Container_Raised) 
      ButtonGadget(1, 10, 15, 80, 24, "Bouton 1") 
      ButtonGadget(2, 95, 15, 80, 24, "Bouton 2") 
    CloseGadgetList() 
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow 
  EndIf  
@EndCode
@LineBreak
@Image containergadget.png

@SeeAlso
  @@OpenGadgetList, @@CloseGadgetList, 
  @@SetGadgetColor, @@GetGadgetColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = CountGadgetItems(#Gadget)

@Description
  Renvoie le nombre d'éléments que contient 
  un gadget. 
  
@Parameter "#Gadget"
  Le gadget à utiliser.

@ReturnValue
  Renvoie le nombre d'éléments du gadget.

@Remarks  
 C'est une fonction universelle qui 
 fonctionne avec tous les gadgets qui 
 gèrent plusieurs éléments:
@FixedFont
  - @@ComboBoxGadget
  - @@EditorGadget
  - @@ExplorerListGadget
  - @@ListIconGadget
  - @@ListViewGadget
  - @@MDIGadget
  - @@PanelGadget
  - @@TreeGadget
@EndFixedFont

@SeeAlso
  @@AddGadgetItem, @@RemoveGadgetItem, 
  @@ClearGadgetItems

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = DateGadget(#Gadget, X, Y, Largeur, Hauteur [, Masque$ [, Date [, Options]]])

@Description
  Crée un champ de saisie (identique à un 
  @@StringGadget) dans la GadgetList en 
  cours, dans lequel il sera possible 
  d'entrer une date et/ou une heure.
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.  
  
@OptionalParameter "Masque$"
  Le format de la date. Voir @@FormatDate 
  pour le format de ce masque.
@Indent  
  Note importante: Le gadget ne supporte pas 
  l'affichage des secondes, donc si vous 
  spécifiez "%ss" dans le paramètre 'Masque$, 
  il sera tout simplement ignoré ! 
  Si vous ne spécifiez pas de masque ou si 
  vous spécifiez une chaîne vide, un masque 
  par défaut sera utilisé. Le masque peut 
  être modifié avec la fonction 
  @@SetGadgetText.
@EndIndent
  
@OptionalParameter "Date"  
  La date initialement prévue pour le gadget. 
  @LineBreak 
  Ne pas spécifier ce paramètre ou utiliser 
  une valeur 0 permet d'afficher la date et 
  l'heure du jour.
  
@OptionalParameter "Options"
  Peut être une combinaison de:
@LineBreak
@LineBreak
  @#PB_Date_UpDown@LineBreak
  Par défaut le gadget a un bouton pour 
  afficher un calendrier à partir duquel 
  l'utilisateur peut choisir une date 
  facilement (voir l'image ci-dessous).
  Avec cette option, deux boutons  (un pour 
  monter, un pour descendre) seront présents 
  pour permettre de modifier la date 
  directement, sans passer par un calendrier. 
  @LineBreak
  Cette option est seulement disponible 
  sous Windows.
@LineBreak
@LineBreak
  @#PB_Date_CheckBox, le gadget aura une 
  case à cocher à partir de laquelle 
  l'utilisateur pourra mettre le gadget 
  sur 'Aucune date' (si la case à cocher 
  est décochée).@LineBreak
  Tant que la case à cocher est décochée, 
  @@GetGadgetState renverra 0.@LineBreak
  Pour changer l'état de la case à cocher, 
  utiliser @@SetGadgetState avec soit 0 
  (aucune date), soit avec une date valide.

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks  
  Ce gadget utilise le même format de date 
  que celui utilisé par les fonctions de la 
  bibliothèque @LibraryLink "Date" "Date". 
  Ainsi, vous pouvez, par exemple, utiliser 
  @@FormatDate pour afficher le résultat 
  renvoyé par @@GetGadgetState, avec un 
  format personnalisé.
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

  Les commandes suivantes peuvent être utilisées pour agir sur ce gadget :
  - @@SetGadgetState: Change la date du gadget.
  - @@GetGadgetState: Renvoie la valeur numérique de la date actuellement affichée.
  
  - @@SetGadgetText : Change le masque du gadget.
  - @@GetGadgetText : Renvoie la date actuellement affichée sous forme de texte (exactement comme elle est affichée).

  - @@GetGadgetAttribute avec les attributs suivants:
    @#PB_Date_Minimum: Renvoie la date minimale que l'utilisateur peut choisir
    @#PB_Date_Maximum: Renvoie la date maximale que l'utilisateur peut choisir avec ce gadget
                      (Remarque: la date sélectionnable n'est pas prise en charge sous Linux.)
                      
  - @@SetGadgetAttribute: avec les attributs suivants: 
    @#PB_Date_Minimum: Change la date minimale que l'utilisateur peut choisir
    @#PB_Date_Maximum: Change la date maximale que l'utilisateur peut choisir avec ce gadget
                      (Remarque: la date sélectionnable n'est pas prise en charge sous Linux.)
                      
  - @@SetGadgetColor et @@GetGadgetColor avec les constantes suivantes comme 'TypeCouleur':
    @#PB_Gadget_BackColor      : Couleur de fond
    @#PB_Gadget_FrontColor     : Couleur du texte pour les jours affichés
    @#PB_Gadget_TitleBackColor : Couleur du fond du titre du mois
    @#PB_Gadget_TitleFrontColor: Couleur du texte du titre du mois
    @#PB_Gadget_GrayTextColor  : Couleur du texte pour les jours n'appartenant pas au mois courant.
@EndFixedFont

  L'évènement suivant est pris en charge 
  par @@EventType:
@FixedFont
  @#PB_EventType_Change: La date a été modifiée par l'utilisateur.
@EndFixedFont


@Example
@Code
  If OpenWindow(0, 0, 0, 250, 250,"DateGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    DateGadget(0, 10, 10, 190, 25, "Date : %dd/%mm/%yyyy Heure : %hh:%ii")
    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image dategadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, 
  @@GetGadgetText, @@SetGadgetText, 
  @@GetGadgetAttribute, @@SetGadgetAttribute,
  @@GetGadgetColor, @@SetGadgetColor, 
  @@CalendarGadget, @@Date, @@FormatDate
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function DisableGadget(#Gadget, Etat)

@Description
  Active ou désactive un gadget. 
  
@Parameter "#Gadget"  
  Le gadget à activer ou à désactiver.
  
@Parameter "Etat"  
@FixedFont
  @#False: Le gadget est activé. 
  @#True : Le gadget est désactivé.
@EndFixedFont

@NoReturnValue

@Example
@Code
  If OpenWindow(0, 0, 0, 250, 105, "Activer/Désactiver un Gadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ButtonGadget(0, 10, 15, 230, 30, "Bouton désactivé") : DisableGadget(0, #True)
    ButtonGadget(1, 10, 60, 230, 30, "Bouton activé") : DisableGadget(1, #False)
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image disablegadget.png

@SeeAlso
  @@HideGadget
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = EditorGadget(#Gadget, X, Y, Largeur, Hauteur [, Options])

@Description
  Crée un gadget de type 'éditeur' 
  permettant de saisir une grande quantité 
  de texte dans la GadgetList courante.
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_Editor_ReadOnly: Gadget en lecture seule.
  @#PB_Editor_WordWrap: Retour à la ligne automatique.
  
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks 
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 
 
  - Les évènements suivants sont pris en charge par @@EventType:
    @#PB_EventType_Change   : Le texte a été modifié par l'utilisateur.
    @#PB_EventType_Focus    : L'éditeur a obtenu le focus.
    @#PB_EventType_LostFocus: l'éditeur a perdu le focus.
 
 
  Les commandes suivantes peuvent être utilisées pour agir sur le contenu du gadget:
  - @@AddGadgetItem    : Ajoute une ligne de texte
  - @@CountGadgetItems : Renvoie le nombre de lignes contenues dans le gadget.
  - @@GetGadgetItemText: Renvoie la ligne de texte spécifié
  - @@GetGadgetText    : Renvoie tout le texte contenu dans le gadget. 
                         Notez que le retour à la ligne se fait avec "Chr (13) + Chr (10)" 
                         sous Windows et avec "Chr (10)" sous Linux et OS X.
  - @@RemoveGadgetItem : Efface la ligne spécifiée
  - @@ClearGadgetItems : Efface tout le texte
  - @@SetGadgetItemText: Change le contenu de la ligne spécifiée
  - @@SetGadgetText    : Remplace tout le texte contenu par le gadget par un autre
  
  - @@SetGadgetAttribute avec l'attribut suivant:
    @#PB_Editor_ReadOnly: Change l'état 'lecture seule' du gadget (0 = éditable, 1 = non éditable).
    @#PB_Editor_WordWrap: Retour à la ligne automatique.

  - @@GetGadgetAttribute avec l'attribut suivant:
    @#PB_Editor_ReadOnly: Renvoie l'état 'lecture seule' du gadget (0 = éditable, 1 = non éditable).
    @#PB_Editor_WordWrap: Renvoie l'état du retour à la ligne automatique.

  - @@SetGadgetColor et @@GetGadgetColor avec les valeurs 'TypeCouleur' suivantes:
    @#PB_Gadget_BackColor : Couleur de fond
    @#PB_Gadget_FrontColor: Couleur du texte
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 322, 150, "EditorGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)  
    EditorGadget(0, 8, 8, 306, 133) 
    For a = 0 To 5 
      AddGadgetItem(0, a, "Ligne "+Str(a)) 
    Next 
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow 
  EndIf 
@EndCode
@LineBreak
@Image editorgadget.png

@SeeAlso
  @@AddGadgetItem, @@RemoveGadgetItem, 
  @@CountGadgetItems, @@ClearGadgetItems, 
  @@GetGadgetText, @@SetGadgetText,
  @@GetGadgetItemText, @@SetGadgetItemText, 
  @@GetGadgetAttribute, @@SetGadgetAttribute, 
  @@GetGadgetColor, @@SetGadgetColor, 
  @@StringGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ExplorerComboGadget(#Gadget, X, Y, Largeur, Hauteur, Repertoire$, [, Options])

@Description
  Crée une combobox qui affiche un 
  répertoire ainsi que tous ses répertoires 
  parents permettant à l'utilisateur d'en 
  choisir un.
@LineBreak
@LineBreak
  Utilisée dans @@OpenFileRequester par 
  exemple. 

@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.
  
@Parameter "Repertoire$"
  Le répertoire initial affiché (doit être 
  défini comme un chemin d'accès complet), 
  une chaîne vide spécifie le dossier racine.
@LineBreak
@LineBreak
  Si l'option @#PB_Explorer_DrivesOnly est 
  posée alors Repertoire$ ne peut être 
  qu'une lettre de lecteur ("A:", "C:" etc.). 
  Tout caractère qui suit  la lettre du 
  lecteur sera ignoré. 
 
@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_Explorer_DrivesOnly   : Le Gadget n'affichera que les disques pour en sélectionner un.
  @#PB_Explorer_Editable     : Le Gadget sera éditable, avec un mode d'auto-complétion automatique.
  @#PB_Explorer_NoMyDocuments: Le répertoire 'MesDocuments' ne sera pas affiché séparément.
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle en cas de succès, zéro sinon. Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le numéro d'identification du gadget, généré automatiquement.
  
@Remarks
  Les commandes suivantes peuvent être utilisées pour agir sur le gadget:
@FixedFont
  - @@GetGadgetText: Renvoie le répertoire actuellement affiché.
  - @@SetGadgetText: Change le répertoire actuellement affiché.
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 400, 45, "ExplorerComboGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ExplorerComboGadget(0, 10, 10, 380, 25, GetHomeDirectory(), #PB_Explorer_Editable)
    Repeat 
      Event = WaitWindowEvent()
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode 

@Image explorercombogadget.png 

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, 
  @@ExplorerListGadget, 
  @@ExplorerTreeGadget, 
  @@ComboBoxGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ExplorerListGadget(#Gadget, X, Y, Largeur, Hauteur, Repertoire$, [, Options])

@Description
  Créé un gadget qui affiche une liste des 
  dossiers.@LineBreak
  Il permet à l'utilisateur de choisir un 
  fichier ou un dossier situé à n'importe
  quel endroit des disques.

@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@Parameter "Repertoire$"
  Le répertoire initial affiché. 
@Indent
  'Repertoire$' est l'emplacement de départ 
  lorsque le gadget est créé. 
  Il peut être composé de motifs ('patterns'), 
  tels que: "C:\*.pb;*.pbi". Si aucun 
  'pattern' n'est spécifié, le répertoire 
  doit se terminer par un '\'. Si 
  'Repertoire$' est nul (chaîne vide) alors 
  la liste des disques disponibles sera 
  affichée.
@EndIndent
  
@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_Explorer_BorderLess         : Crée un #Gadget sans bordure.
  @#PB_Explorer_AlwaysShowSelection: Affiche la sélection même quand le gadget n'est plus actif.
  @#PB_Explorer_MultiSelect        : Active le mode 'sélection multiple'.
  @#PB_Explorer_GridLines          : Affiche des lignes de séparation.
  @#PB_Explorer_HeaderDragDrop     : L'ordre des colonnes peut être changé avec un glisser/déposer (drag'n'drop).
  @#PB_Explorer_FullRowSelect      : La sélection s'étend à toute la ligne au lieu de la première colonne.

  @#PB_Explorer_NoFiles            : Aucun fichier ne sera affiché.
  @#PB_Explorer_NoFolders          : Aucun répertoire ne sera affiché.
  @#PB_Explorer_NoParentFolder     : Le 'pseudo' répertoire père [..] ne sera pas affiché.
  @#PB_Explorer_NoDirectoryChange  : Le répertoire ne pourra pas être changé par l'utilisateur.
  @#PB_Explorer_NoDriveRequester   : Aucun message du type 'Insérer un disque dans le lecteur A:' ne sera affiché.
  @#PB_Explorer_NoSort             : L'utilisateur ne pourra pas trier les colonnes en cliquant sur les titres des colonnes.
  @#PB_Explorer_NoMyDocuments      : Le répertoire spécial 'Mes documents' ne sera pas affiché séparément.
  @#PB_Explorer_AutoSort           : Le contenu sera automatiquement trié par nom.
  @#PB_Explorer_HiddenFiles        : Affiche les fichiers cachés (seulement avec Linux et OS X).

@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks 
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

  Les commandes suivantes sont disponibles pour contrôler le gadget:
  - @@AddGadgetColumn   : Ajoute une colonne (prédéfinie ou additionnelle). Voir @@AddGadgetColumn pour plus d'informations.
  - @@RemoveGadgetColumn: Supprime une colonne (ainsi que ses données).
  - @@GetGadgetText     : Renvoie le répertoire affiché.
  - @@SetGadgetText     : Change le répertoire affiché, ou les 'patterns' actuellement utilisés.
  - @@GetGadgetState    : Renvoie l'index du premier élément selectionné (-1: aucune selection).
  - @@GetGadgetItemText : Renvoie le texte de l'élément, ou du titre de la colonne si 'Position' = -1.
  - @@SetGadgetItemText : Modifie le texte de l'élément, ou du titre de la colonne si 'Position' = -1.
  - @@GetGadgetItemState: Vérifie si un élément est un répertoire ou un fichier et si il est sélectionné.
  - @@SetGadgetItemState: Modifier l'état sélectionné de l'élément spécifié.
  - @@CountGadgetItems  : Compte le nombre d'éléments dans le répertoire.

  - @@GetGadgetAttribute / @@SetGadgetAttribute: avec l'attribut suivant(seulement sous Windows):
    @#PB_Explorer_DisplayMode : Change le mode d'affichage du gadget. Le mode peut être l'une des constantes suivantes:
    @#PB_Explorer_LargeIcon   : Mode grandes icônes
    @#PB_Explorer_SmallIcon   : Mode petites icônes
    @#PB_Explorer_List        : Mode Liste
    @#PB_Explorer_Report      : Mode Détails (colonnes, mode par défaut)

  - @@GetGadgetItemAttribute / @@SetGadgetItemAttribute: Avec l'attribut suivant:

    @#PB_Explorer_ColumnWidth : Renvoie / Change la largeur de la 'Colonne' spécifiée. Le paramètre 'Element' est ignoré.

  - @@SetGadgetColor et @@GetGadgetColor avec les valeurs suivantes comme 'TypeCouleur':
    @#PB_Gadget_FrontColor: Couleur du texte 
    @#PB_Gadget_BackColor : Couleur du fond
    @#PB_Gadget_LineColor : Couleur de la grille si l'option @#PB_Explorer_GridLines est utilisée.

  Note: @@SetGadgetColor n'est pas pris en charge sur la plate-forme MacOS X.
@EndFixedFont
  
  Les évènements suivants sont disponibles par l'intermédiaire d' @@EventType:
@FixedFont
  @#PB_EventType_Change          : La sélection de l'élément courant vient de changer.
  @#PB_EventType_LeftClick       : L'utilisateur a cliqué sur un élément avec le bouton gauche de la souris.
  @#PB_EventType_RightClick      : L'utilisateur a cliqué sur un élément avec le bouton droit de la souris.
  @#PB_EventType_LeftDoubleClick : L'utilisateur a double-cliqué sur un élément avec le bouton gauche de la souris.
  @#PB_EventType_RightDoubleClick: L'utilisateur a double-cliqué sur un élément avec le bouton droit de la souris.
  @#PB_EventType_DragStart       : L'utilisateur a essayé de lancer une opération 'Glisser & Déposer'. 
                                  @ExamineDraggedItems peut être utilisé pour obtenir les informations sur les éléments déplacés.
  @#PB_EventType_Refresh         : Le contenu du gadget a été actualisé en raison d'un changement de système de fichiers dans le répertoire affiché (Windows uniquement).
@EndFixedFont
  Après un évènement @#PB_EventType_DragStart, la bibliothèque @LibraryLink "dragdrop" "Drag & Drop" 
  peut être utilisée pour commencer une opération de 'Glisser & Déposer'. Sous MacOS X, l'événement 
  @#PB_EventType_DragStart doit être géré à l'aide de @@BindEvent ou de @@BindGadgetEvent.

@Example
@Code
  If OpenWindow(0, 0, 0, 400, 200, "ExplorerListGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    ExplorerListGadget(0, 10, 10, 380, 180, "*.*", #PB_Explorer_MultiSelect)
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode 

@Image explorerlistgadget.png 

@SeeAlso
  @@AddGadgetColumn, @@RemoveGadgetColumn, 
  @@GetGadgetText, @@SetGadgetText, 
  @@GetGadgetState, @@GetGadgetItemState, 
  @@SetGadgetItemState,
  @@GetGadgetItemText, @@SetGadgetItemText, 
  @@CountGadgetItems, @@GetGadgetAttribute, 
  @@SetGadgetAttribute,
  @@GetGadgetItemAttribute, 
  @@SetGadgetItemAttribute,@@SetGadgetColor, 
  @@GetGadgetColor, @@ExplorerComboGadget, 
  @@ExplorerTreeGadget, @@ListIconGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ExplorerTreeGadget(#Gadget, X, Y, Largeur, Hauteur, Repertoire$, [, Options])

@Description
  Créé un gadget qui affiche une liste des 
  dossiers.@LineBreak
  Il permet à l'utilisateur de choisir un 
  fichier ou un dossier situé à n'importe
  quel endroit des disques.

@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau gadget.

@Parameter "Repertoire$"
  Le répertoire initial affiché. 
@Indent
  'Repertoire$' est l'emplacement de départ 
  lorsque le gadget sera créé. 
  Il peut être composé de motifs ('patterns'), 
  tels que: "C:\*.pb;*.pbi". Si aucun 'pattern'
  n'est spécifié, le répertoire doit se 
  terminer par un '\'. Si 'Repertoire$'
  est nul (chaîne vide), alors la liste des 
  disques disponibles sera affichée.
@EndIndent
@LineBreak
@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_Explorer_BorderLess         : Crée un #Gadget sans bordure.
  @#PB_Explorer_AlwaysShowSelection: Affiche la sélection même quand le gadget n'est plus actif.
  @#PB_Explorer_NoLines            : Cache les lignes de liaisons entre les noeuds '+'.
  @#PB_Explorer_NoButtons          : Cache les noeuds '+'.

  @#PB_Explorer_NoFiles            : Aucun fichier ne sera affiché.
  @#PB_Explorer_NoDriveRequester   : Aucun message du type 'Insérer un disque dans le lecteur A:' ne sera affiché.
  @#PB_Explorer_NoMyDocuments      : Le répertoire spécial 'Mes documents' ne sera pas affiché séparément.
  @#PB_Explorer_AutoSort           : Le contenu sera automatiquement trié par nom.
@EndFixedFont
  
@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. @LineBreak
  Si @#PB_Any a été utilisé pour le 
  paramètre #Gadget, alors la valeur de 
  retour est le numéro d'identification du 
  gadget, généré automatiquement.
 
@Remarks 
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

 Les commandes suivantes sont disponibles pour contrôler le gadget:
  - @@GetGadgetText : Renvoie le chemin complet du répertoire ou fichier sélectionné.
  - @@SetGadgetText : Change l'élément actuellement sélectionné.
  - @@GetGadgetState: Permet de savoir si l'élément sélectionné est un répertoire ou un fichier.
  - @@GetGadgetItemText : Renvoie le chemin complet de l'élément spécifié.
  
  - @@SetGadgetColor et @@GetGadgetColor avec les valeurs suivantes comme 'TypeCouleur':
    @#PB_Gadget_FrontColor: Couleur du texte 
    @#PB_Gadget_BackColor : Couleur du fond
    @#PB_Gadget_LineColor : Couleur de la grille et des marqueurs si l'option @#PB_Explorer_GridLines est utilisée.

  Note: @@SetGadgetColor n'est pas pris en charge sur la plate-forme MacOS X.
@EndFixedFont
  
  ExplorerTreeGadget() génère les évènements suivants, renvoyés par @@EventType:
@FixedFont
  @#PB_EventType_Change          : La sélection de l'élément courant vient de changer.
  @#PB_EventType_LeftClick       : L'utilisateur a cliqué sur un élément avec le bouton gauche de la souris.
  @#PB_EventType_RightClick      : L'utilisateur a cliqué sur un élément avec le bouton droit de la souris.
  @#PB_EventType_LeftDoubleClick : L'utilisateur a double-cliqué sur un élément avec le bouton gauche de la souris.
  @#PB_EventType_RightDoubleClick: L'utilisateur a double-cliqué sur un élément avec le bouton droit de la souris.
  @#PB_EventType_DragStart       : L'utilisateur a essayé de lancer une opération 'Glisser & Déposer'. 
                                  @ExamineDraggedItems peut être utilisé pour obtenir les informations sur les éléments déplacés.
@EndFixedFont
  Après un évènement @#PB_EventType_DragStart, la bibliothèque @LibraryLink "dragdrop" "Drag & Drop" 
  peut être utilisée pour commencer une opération de 'Glisser & Déposer'. Sous MacOS X, l'événement 
  @#PB_EventType_DragStart doit être géré à l'aide de @@BindEvent ou de @@BindGadgetEvent.

@Example
@Code
  If OpenWindow(0, 0, 0, 300, 300, "ExplorerTreeGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    ExplorerTreeGadget(0, 10, 10, 280, 280, "*.pb;*.pbi")
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf 
@EndCode 

@Image explorertreegadget.png 

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, 
  @@GetGadgetState, @@GetGadgetColor, 
  @@SetGadgetColor,
  @@ExplorerComboGadget, 
  @@ExplorerListGadget, @@TreeGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = FrameGadget(#Gadget, X, Y, Largeur, Hauteur, Texte$ [, Options])

@Description
  Crée dans la GadgetList un cadre en 
  relief qui permet de regrouper un 
  ensemble de gadgets. 
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget.
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro. 

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@Parameter "Texte$"
  Titre qui s'affiche près du bord supérieur 
  gauche du cadre (ce texte est ignoré si le 
  gadget a l'option @#PB_Frame_Single, 
  @#PB_Frame_Double ou @#PB_Frame_Flat).

@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_Frame_Single: Cadre enfoncé (Windows seulement)
  @#PB_Frame_Double: Cadre doublement enfoncé (Windows seulement)
  @#PB_Frame_Flat  : Cadre simple (Windows seulement)
@EndFixedFont
  
@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.

@Remarks  
  Comme ce gadget est seulement décoratif, 
  @@GadgetToolTip ne peut pas être utilisé 
  (ce gadget ne reçoit aucun évènement).

@Example
@Code
  If OpenWindow(0, 0, 0, 320, 250, "FrameGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    FrameGadget(0, 10,  10, 300, 50, "Cadre en relief standard")
    FrameGadget(1, 10,  70, 300, 50, "", #PB_Frame_Single)
    FrameGadget(2, 10, 130, 300, 50, "", #PB_Frame_Double)
    FrameGadget(3, 10, 190, 300, 50, "", #PB_Frame_Flat)
    
    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image framegadget.png

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, 
  @@ContainerGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function FreeGadget(#Gadget)

@Description
  Supprime un gadget de la fenêtre à 
  laquelle il appartient et le détruit.
  @LineBreak  
  Pour un gadget container, sa 'gadgetlist' 
  est détruite aussi.
  
@Parameter "#Gadget"
  Le gadget à détruire.
@LineBreak  
@LineBreak  
  Si @#PB_All est spécifié, tous les 
  gadgets restants sont libérés.
  
@NoReturnValue

@Remarks
  Un gadget est libéré automatiquement si 
  l'un des évènements suivants se produit:  
@LineBreak  
@LineBreak
   - La fenêtre qui contient le gadget est 
   @Link "Window/CloseWindow" "fermée".
@LineBreak
   - Le gadget parent (@@ContainerGadget, 
   @@PanelGadget, etc) est libéré.
@LineBreak
   - Le programme se termine.
@LineBreak
@LineBreak
    Les événements liés avec @@BindEvent sont automatiquement libérés lors de la libération du gadget.


@SeeAlso
  @@IsGadget, @@CloseWindow
   
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GadgetID(#Gadget)

@Description
  Renvoie l'identifiant propre à l'OS d'un 
  gadget. 

@Parameter "#Gadget"
  Le gadget à utiliser.

@ReturnValue
  Renvoie le numéro d'identification du 
  gadget.
@LineBreak
@LineBreak
  Ce résultat est parfois aussi appelé 
  'Handle'. @LineBreak
  Voir le chapitre 
  @ReferenceLink "handles" "Numéros et Identifiants (Handles)" 
  pour plus d'informations.
  
@Remarks
  Utile pour utiliser les commandes de l'OS 
  (API) directement avec le gadget.
 
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GadgetItemID(#Gadget, Element) 

@Description
  Renvoie l'identifiant propre à l'OS de l'élément d'un gadget. 

@Parameter "#Gadget"
  Le gadget à utiliser.
  
@Parameter "Element"
  L'élément dont le @ReferenceLink "handles" "handle" doit être renvoyé. 
@LineBreak
@LineBreak
  Le premier élément dans le gadget commence à 0.

@ReturnValue
  Renvoie le Handle de l'élément ou 0 en cas d'échec.
  
@Remarks  
  Cette fonction est pour l'instant seulement supportée par le @@TreeGadget et @@PanelGadget 
  sous Windows. @LineBreak
  Elle renvoie 0 dans les autres cas.
@LineBreak
@LineBreak
  C'est utile pour pouvoir utiliser l'API avec les éléments des gadgets PureBasic.

@SeeAlso
  @@TreeGadget
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function GadgetToolTip(#Gadget, Texte$)

@Description
  Associe ou remplace une bulle d'aide à 
  un gadget. 
@LineBreak
@LineBreak
  Un 'Tooltip' est un texte flottant qui 
  apparaît au bout d'un certain temps 
  lorsque le curseur de la souris est 
  immobile au dessus d'un gadget.
  
@Parameter "#Gadget"
  Le gadget à utiliser 
  
@Parameter "Texte$"
  Le texte flottant ou bulle d'aide.  
  
@NoReturnValue

@Remarks  
  Les gadgets suivants sont supportés:
@LineBreak
@LineBreak
  - @@ButtonGadget @LineBreak
  - @@ButtonImageGadget @LineBreak
  - @@CalendarGadget @LineBreak
  - @@CanvasGadget @LineBreak
  - @@CheckBoxGadget @LineBreak
  - @@ComboBoxGadget @LineBreak
  - @@ContainerGadget @LineBreak
  - @@DateGadget@LineBreak
  - @@EditorGadget @LineBreak
  - @@ExplorerListGadget @LineBreak
  - @@ExplorerTreeGadget @LineBreak
  - @@HyperLinkGadget @LineBreak
  - @@ImageGadget@LineBreak
  - @@IPAddressGadget @LineBreak
  - @@ListIconGadget@LineBreak
  - @@ListViewGadget @LineBreak
  - @@MDIGadget @LineBreak
  - @@OpenGLGadget @LineBreak 
  - @@OptionGadget @LineBreak
  - @@PanelGadget @LineBreak
  - @@ProgressBarGadget @LineBreak
  - @@ScrollBarGadget @LineBreak
  - @@ShortcutGadget @LineBreak    
  - @@SpinGadget @LineBreak
  - @@SplitterGadget @LineBreak
  - @@StringGadget @LineBreak
  - @@TrackBarGadget @LineBreak
  - @@TreeGadget @LineBreak
@LineBreak

@Example
@Code
  If OpenWindow(0, 0, 0, 270, 100, "GadgetToolTip", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ButtonGadget(0, 10, 30, 250, 30, "Bouton avec texte flottant")
    GadgetToolTip(0, "Texte flottant pour bouton")
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image gadgettooltip.png

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GadgetX(#Gadget [, Mode])

@Description
  Renvoie la position en X d'un gadget.

@Parameter "#Gadget"
  Le gadget à utiliser  
  
@OptionalParameter "Mode"
@FixedFont
  @#PB_Gadget_ContainerCoordinate: La position en X du gadget (en pixels) dans son conteneur, ou dans une fenêtre (par défaut).
  @#PB_Gadget_WindowCoordinate   : La position absolue en X du gadget (en pixels) dans la fenêtre.
  @#PB_Gadget_ScreenCoordinate   : La position absolue en X du gadget (en pixels) dans l'écran.
                                  Il peut être utile d'afficher quelque chose sur le gadget comme une fenêtre flottante ou un menu contextuel.
@EndFixedFont

@ReturnValue
  Renvoie la position en X par rapport 
  au gadget parent ou à la fenêtre, en 
  pixels.

@SeeAlso
  @@GadgetY, @@GadgetWidth, 
  @@GadgetHeight, @@ResizeGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GadgetY(#Gadget [, Mode])

@Description
  Renvoie la position en Y d'un gadget.

@Parameter "#Gadget"
  Le gadget à utiliser  
  
@OptionalParameter "Mode"
@FixedFont
  @#PB_Gadget_ContainerCoordinate: La position en Y du gadget (en pixels) dans son conteneur, ou dans une fenêtre (par défaut).
  @#PB_Gadget_WindowCoordinate   : La position absolue en Y du gadget (en pixels) dans la fenêtre.
  @#PB_Gadget_ScreenCoordinate   : La position absolue en Y du gadget (en pixels) dans l'écran.
                                  Il peut être utile d'afficher quelque chose sur le gadget comme une fenêtre flottante ou un menu contextuel.
@EndFixedFont

@ReturnValue
  Renvoie la position en Y par rapport 
  au gadget parent ou à la fenêtre, en 
  pixels.

@SeeAlso
  @@GadgetX, @@GadgetWidth, 
  @@GadgetHeight, @@ResizeGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GadgetHeight(#Gadget [, Mode])

@Description
  Renvoie la hauteur d'un gadget.
  
@Parameter "#Gadget"
  Le gadget à utiliser  
  
@OptionalParameter "Mode"
  Peut-être l'une des valeurs suivantes:
@FixedFont
  @#PB_Gadget_ActualSize  : Renvoie la hauteur actuelle du gadget, en pixels (par défaut).
  @#PB_Gadget_RequiredSize: Renvoie la hauteur nécessaire pour bien afficher le gadget, en pixels.
                             Seulement pour les gadgets qui ont l'obligation d'afficher du texte: 
                             ButtonGadget, ButtonImageGadget, CheckBoxGadget, EditorGadget, HyperLinkGadget, 
                             ImageGadget, OptionGadget, TextGadget
@EndFixedFont

@ReturnValue
  Renvoie la hauteur du gadget en pixels.

@SeeAlso
  @@GadgetWidth, @@GadgetX, @@GadgetY, 
  @@ResizeGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GadgetType(#Gadget) 

@Description
  Renvoie le type d'un gadget. 

@Parameter "#Gadget"
  Le gadget à utiliser    
  
@ReturnValue  
  Renvoie une des valeurs suivantes:
 @FixedFont
  @#PB_GadgetType_Button        : @@ButtonGadget
  @#PB_GadgetType_ButtonImage   : @@ButtonImageGadget 
  @#PB_GadgetType_Calendar      : @@CalendarGadget 
  @#PB_GadgetType_Canvas        : @@CanvasGadget
  @#PB_GadgetType_CheckBox      : @@CheckBoxGadget 
  @#PB_GadgetType_ComboBox      : @@ComboBoxGadget 
  @#PB_GadgetType_Container     : @@ContainerGadget 
  @#PB_GadgetType_Date          : @@DateGadget 
  @#PB_GadgetType_Editor        : @@EditorGadget 
  @#PB_GadgetType_ExplorerCombo : @@ExplorerComboGadget 
  @#PB_GadgetType_ExplorerList  : @@ExplorerListGadget 
  @#PB_GadgetType_ExplorerTree  : @@ExplorerTreeGadget 
  @#PB_GadgetType_Frame         : @@FrameGadget 
  @#PB_GadgetType_HyperLink     : @@HyperLinkGadget 
  @#PB_GadgetType_Image         : @@ImageGadget 
  @#PB_GadgetType_IPAddress     : @@IPAddressGadget 
  @#PB_GadgetType_ListIcon      : @@ListIconGadget 
  @#PB_GadgetType_ListView      : @@ListViewGadget 
  @#PB_GadgetType_MDI           : @@MDIGadget 
  @#PB_GadgetType_OpenGL        : @@OpenGLGadget
  @#PB_GadgetType_Option        : @@OptionGadget 
  @#PB_GadgetType_Panel         : @@PanelGadget 
  @#PB_GadgetType_ProgressBar   : @@ProgressBarGadget 
  @#PB_GadgetType_Scintilla     : @@ScintillaGadget
  @#PB_GadgetType_ScrollArea    : @@ScrollAreaGadget 
  @#PB_GadgetType_ScrollBar     : @@ScrollBarGadget 
  @#PB_GadgetType_Shortcut      : @@ShortcutGadget
  @#PB_GadgetType_Spin          : @@SpinGadget 
  @#PB_GadgetType_Splitter      : @@SplitterGadget 
  @#PB_GadgetType_String        : @@StringGadget 
  @#PB_GadgetType_Text          : @@TextGadget 
  @#PB_GadgetType_TrackBar      : @@TrackBarGadget 
  @#PB_GadgetType_Tree          : @@TreeGadget 
  @#PB_GadgetType_Web           : @@WebGadget 
  @#PB_GadgetType_Unknown       : Type inconnu, probablement pas un gadget PureBasic.
@EndFixedFont  
 
@Remarks
  Cette commande peut être utile pour 
  écrire des fonctions génériques qui 
  fonctionnent avec plusieurs types de 
  gadgets.
 
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GadgetWidth(#Gadget [, Mode])

@Description
  Renvoie la largeur d'un gadget.

@Parameter "#Gadget"
  Le gadget à utiliser  
    
@OptionalParameter "Mode"
  Peut-être l'une des valeurs suivantes:
@FixedFont
  @#PB_Gadget_ActualSize  : Renvoie la largeur actuelle du gadget, en pixels (par défaut).
  @#PB_Gadget_RequiredSize: Renvoie la largeur nécessaire pour bien afficher le gadget, en pixels.
                           Seulement pour les gadgets qui ont l'obligation d'afficher du texte: 
                           ButtonGadget, ButtonImageGadget, CheckBoxGadget, EditorGadget, HyperLinkGadget, 
                           ImageGadget, OptionGadget, TextGadget
  @EndFixedFont

@ReturnValue
  Renvoie la largeur du gadget en pixels.

@SeeAlso
  @@GadgetHeight, @@GadgetX, @@GadgetY, 
  @@ResizeGadget
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GetActiveGadget()

@Description
  Renvoie le numéro d'un gadget qui a 
  actuellement le 'focus' clavier. 
  
@NoParameters

@ReturnValue
  Renvoie le numéro #Gadget du gadget 
  qui a le focus.@LineBreak
  Si aucun gadget n'a le focus, -1 est 
  renvoyé.
  
@Example
@Code
  If OpenWindow(0, 0, 0, 270, 70, "GetActiveGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    StringGadget  (0, 10, 10, 250, 20, "Appuyez sur la touche [Echap]...")
    StringGadget  (1, 10, 40, 250, 20, "Appuyez sur la touche [Echap]...")
    AddKeyboardShortcut(0, #PB_Shortcut_Escape, 1)
    SetActiveGadget(0)
    Repeat
      Evenement = WaitWindowEvent()
      If Evenement = #PB_Event_Menu And EventMenu() = 1
        MessageRequester("Test", "La touche [Echap] a été appuyée dans le gadget " + Str(GetActiveGadget()))
      EndIf
    Until Evenement = #PB_Event_CloseWindow
  EndIf
@EndCode

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GetGadgetAttribute(#Gadget, Attribut)

@Description
  Renvoie la valeur de l'attribut d'un 
  gadget. 

@Parameter "#Gadget"
  Le gadget à utiliser    
  
@Parameter "Attribut"
  L'attribut à tester.
  
@ReturnValue  
  Renvoie la valeur de l'attribut 
  spécifié ou 0 si le gadget ne supporte 
  pas l'attribut.

@Remarks  
  Cette fonction est disponible avec les 
  gadgets suivants:  
@LineBreak  
@LineBreak
  - @@ButtonImageGadget @LineBreak
  - @@CalendarGadget @LineBreak
  - @@CanvasGadget @LineBreak
  - @@DateGadget @LineBreak
  - @@EditorGadget @LineBreak
  - @@ExplorerListGadget @LineBreak
  - @@ListIconGadget @LineBreak
  - @@OpenGLGadget @LineBreak
  - @@PanelGadget @LineBreak
  - @@ProgressBarGadget @LineBreak
  - @@ScrollAreaGadget @LineBreak
  - @@ScrollBarGadget @LineBreak
  - @@SpinGadget @LineBreak
  - @@SplitterGadget @LineBreak
  - @@StringGadget @LineBreak
  - @@TrackBarGadget @LineBreak
  - @@WebGadget   

@SeeAlso
  @@SetGadgetAttribute, 
  @@GetGadgetItemAttribute, 
  @@SetGadgetItemAttribute

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GetGadgetColor(#Gadget, TypeCouleur)

@Description
  Renvoie la couleur du 'TypeCouleur' 
  d'un gadget. 
  
@Parameter "#Gadget"
  Le gadget à utiliser    
  
@Parameter "TypeCouleur" 
  Peut prendre l'une des valeurs 
  suivantes (tous les gadgets ne 
  supportent pas toutes ces valeurs):
@FixedFont
  @#PB_Gadget_FrontColor     : Texte du gadget
  @#PB_Gadget_BackColor      : Fond du gadget
  @#PB_Gadget_LineColor      : Couleur de la grille
  @#PB_Gadget_TitleFrontColor: Couleur du texte dans le titre (pour @@CalendarGadget)
  @#PB_Gadget_TitleBackColor : Couleur du fond dans le titre  (pour @@CalendarGadget)
  @#PB_Gadget_GrayTextColor  : Couleur du texte inactif       (pour @@CalendarGadget)
@EndFixedFont

@ReturnValue
  Renvoie la couleur courante. 
@LineBreak
@LineBreak
  Cette fonction renvoie la couleur qui 
  a été précédemment définie par 
  @@SetGadgetColor. 
@LineBreak
@LineBreak
  Si aucune couleur personnalisée n'est 
  définie pour le #Gadget et TypeCouleur 
  alors la fonction renvoie @#PB_Default.

@Remarks
  Cette commande est supportée par les gadgets suivants: 
@LineBreak
@LineBreak
  - @@CalendarGadget @LineBreak
  - @@ContainerGadget @LineBreak
  - @@DateGadget @LineBreak
  - @@EditorGadget @LineBreak
  - @@ExplorerListGadget @LineBreak
  - @@ExplorerTreeGadget @LineBreak
  - @@HyperLinkGadget @LineBreak
  - @@ListViewGadget @LineBreak
  - @@ListIconGadget @LineBreak
  - @@MDIGadget @LineBreak
  - @@ProgressBarGadget @LineBreak
  - @@ScrollAreaGadget @LineBreak
  - @@SpinGadget @LineBreak
  - @@StringGadget @LineBreak
  - @@TextGadget @LineBreak
  - @@TreeGadget

@OS Windows
  @Bold "Note:" Avec le support des skins 
  activé sur Windows, les couleurs 
  personnalisées ne seront probablement pas
  prises en compte sur certains gadgets.
@EndOS

@OS Linux
  @LineBreak
  @LineBreak
  @Bold "Note:" Les versions GTK de Linux ne prennent pas en compte cette fonction alors 
  la coloration sous Linux fonctionne, si elle est supportée par la distribution, le 
  gestionnaire de fenêtres et le thème.
@EndOS

@SeeAlso
  @@SetGadgetColor, @@GetGadgetItemColor, @@SetGadgetItemColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GetGadgetData(#Gadget)

@Description
  Renvoie la valeur qui a été stockée 
  dans un gadget.
    
@Parameter "#Gadget"
  Le gadget à utiliser  
  
@ReturnValue  
  Renvoie la valeur courante de la donnée 
  stockée avec la commande @@SetGadgetData.
  @LineBreak 
  Sans donnée définie pour ce gadget, la 
  valeur de retour est 0.
  
@Remarks
  Cela permet d'associer une valeur 
  personnalisée pour chaque gadget. 
@LineBreak
@LineBreak
  Cette commande fonctionne avec tous 
  les types de gadget du PureBasic. 
@LineBreak
@LineBreak
  Pour un exemple d'utilisation, 
  consulter la définition de la 
  commande @@SetGadgetData.

@SeeAlso
  @@SetGadgetData, @@GetGadgetItemData, 
  @@SetGadgetItemData
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GetGadgetFont(#Gadget)

@Description
  Renvoie le numéro d'identification 
  (FontID) de la police associée au 
  #Gadget.
  
@Parameter "#Gadget"
  Le gadget à utiliser. 
@LineBreak
@LineBreak
  Si la constante @#PB_Default est 
  utilisée à la place du numéro de 
  #Gadget, l'identifiant par défaut 
  de la police est renvoyé lors de 
  la création de nouveaux gadgets.
  
  
@ReturnValue  
  Renvoie le numéro d'identification 
  pour le gadget spécifié ou celui 
  utilisé pour les gadgets nouvellement 
  créés.
@LineBreak
@LineBreak  
  Note: Sur OS X, cette fonction 
  renvoie 0 si le gadget ne dispose pas 
  d'une police spécifique qui lui est 
  associée.

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GetGadgetItemAttribute(#Gadget, Element, Attribut [, Colonne])

@Description
  Renvoie la valeur de l'attribut d'un 
  élément d'un gadget. 

@Parameter "#Gadget"  
  Le gadget à utiliser.
  
@Parameter "Element"  
  L'élément spécifié. 
@LineBreak
@LineBreak
  Le premier élément dans le gadget 
  commence à 0.
  
@Parameter "Attribut"  
  L'attribut à tester.
  
@OptionalParameter "Colonne" 
  La colonne spécifiée. 
@LineBreak
@LineBreak
  La première colonne commence à 0. 
@LineBreak
@LineBreak
  La valeur par défaut est 0 colonne.

@ReturnValue
   Renvoie la valeur de l'attribut, zéro 
   si l'élément ou l'attribut n'existe 
   pas.

@Remarks 
  Cette fonction est disponible pour tous 
  les gadgets et éléments suivants:
@FixedFont
  - @@ExplorerListGadget 
    @#PB_Explorer_ColumnWidth: Renvoie la largeur de la 'Colonne' spécifiée. Le paramètre 'Element' est ignoré.

  - @@ListIconGadget 
    @#PB_ListIcon_ColumnWidth: Renvoie la largeur de la 'Colonne' spécifiée. Le paramètre 'Element' est ignoré.

  - @@TreeGadget 
    @#PB_Tree_SubLevel: Renvoie le niveau de l'élément indiqué
    Le niveau des éléments du @@TreeGadget peut être utilisé pour déterminer la relation
    entre deux éléments de l'arbre. Par exemple, le premier élément avec un niveau inférieur à l'élément courant
    (si la liste est examinée en remontant) est l'élément 'parent'.
@EndFixedFont

@SeeAlso
  @@SetGadgetItemAttribute, 
  @@GetGadgetAttribute, 
  @@SetGadgetAttribute
 
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GetGadgetItemColor(#Gadget, Element, TypeCouleur [, Colonne])

@Description
  Renvoie la couleur d'un élément d'un 
  gadget. 

@Parameter "#Gadget"  
  Le gadget à utiliser.
  
@Parameter "Element"  
  L'élément à tester. 
@LineBreak
@LineBreak
  Le premier élément dans le gadget 
  commence à 0.
    
@Parameter "TypeCouleur"  
  Le paramètre 'TypeCouleur' peut prendre l'une des valeurs suivantes:
@FixedFont
  @#PB_Gadget_FrontColor: Texte de l'élément.
  @#PB_Gadget_BackColor : Fond de l'élément.
@EndFixedFont

@OptionalParameter "Colonne"
  La colonne spécifiée. 
@LineBreak
@LineBreak
  La première colonne commence à 0. 
@LineBreak
@LineBreak
  La valeur par défaut est 0 colonne.

@ReturnValue  
  Renvoie la couleur courante. 
@LineBreak
@LineBreak
  Cette fonction renvoie la couleur qui 
  a été précédemment définie par 
  @@SetGadgetItemColor. Si aucune 
  couleur personnalisée n'est définie 
  pour le #Gadget et TypeCouleur 
  alors la fonction renvoie @#PB_Default.
  
@Remarks  
  Cette commande est supportée par les 
  gadgets suivants: 
@LineBreak
@LineBreak
  - @@ListIconGadget @LineBreak
  - @@TreeGadget

@OS Windows
  @Bold "Note:" Avec le support des skins 
  activé sur Windows, les couleurs 
  personnalisées ne seront probablement pas
  prises en compte sur certains gadgets.
@EndOS

@OS Linux
  @LineBreak
  @LineBreak
  @Bold "Note:" Les versions GTK de Linux ne prennent pas en compte cette fonction alors 
  la coloration sous Linux fonctionne, si elle est supportée par la distribution, le 
  gestionnaire de fenêtres et le thème.
@EndOS

@SeeAlso
  @@SetGadgetItemColor, @@GetGadgetColor, 
  @@SetGadgetColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GetGadgetItemData(#Gadget, Element)

@Description
  Renvoie la valeur qui a été stockée 
  dans un élément d'un gadget .
    
@Parameter "#Gadget"
  Le gadget à utiliser   
  
@Parameter "Element"  
  L'élément à partir duquel les données 
  doivent être lues. 
@LineBreak
@LineBreak
  Le premier élément dans le gadget 
  commence à 0.
  
@ReturnValue 
  Renvoie la donnée stockée avec la 
  commande @@SetGadgetItemData. 
@LineBreak
@LineBreak
  Si aucune valeur n'a été stockée avec 
  l'élément alors la valeur de retour 
  est 0. 

@Remarks
  Cela permet d'associer une valeur 
  personnalisée pour chaque élément d'un 
  gadget. 
@LineBreak
@LineBreak
  Cette commande est supportée par les 
  gadgets suivants:
@LineBreak
  - @@ComboBoxGadget @LineBreak
  - @@ListIconGadget @LineBreak
  - @@ListViewGadget @LineBreak
  - @@PanelGadget @LineBreak
  - @@TreeGadget
@LineBreak
@LineBreak
  Pour un exemple d'utilisation, 
  consulter la définition de la commande 
  @@SetGadgetItemData.

@SeeAlso
  @@SetGadgetItemData, @@GetGadgetData, 
  @@SetGadgetData
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GetGadgetState(#Gadget)

@Description
  Renvoie l'état actuel d'un gadget. 

@Parameter "#Gadget"
  Le gadget à utiliser.   
  
@ReturnValue  
  Renvoie l'état du gadget. @LineBreak
  Voir ci-dessous en fonction du type 
  gadget.
  
@Remarks  
  Il s'agit d'une fonction universelle 
  qui fonctionne avec presque tous les 
  gadgets:
@FixedFont
  - @@ButtonGadget     : renvoie l'état d'un bouton à bascule (@#PB_Button_Toggle): 1 = pressé, 0 = normal. 
  - @@ButtonImageGadget: renvoie l'état d'un bouton à bascule (@#PB_Button_Toggle): 1 = pressé, 0 = normal. 
  - @@CalendarGadget   : renvoie la date actuellement sélectionnée.
  - @@CheckBoxGadget   : renvoie une des valeurs suivantes:
    @#PB_CheckBox_Checked  : La case est cochée.
    @#PB_CheckBox_Unchecked: La case est décochée.
    @#PB_CheckBox_Inbetween: L'état de la case à cocher est indéterminé (Seulement pour les cases à cocher de type @#PB_CheckBox_ThreeState).

  - @@ComboBoxGadget    : Renvoie le numéro de l'élément sélectionné ou -1 si pas de sélection. 
  - @@DateGadget        : Renvoie la date ou l'heure actuellement sélectionnée. Si @#PB_Date_CheckBox 
                          est utilisé et que la case à cocher est décochée, 0 sera renvoyé. 
  - @@ExplorerListGadget: Renvoie le numéro de l'élément sélectionné ou -1 si pas de sélection. 
  - @@ExplorerTreeGadget: Renvoie le type de l'élément sélectionné (@#PB_Explorer_File ou @#PB_Explorer_Directory). 
  - @@ImageGadget       : Renvoie l'ImageID de l'image actuellement affichée. 
  - @@IPAddressGadget   : Renvoie l'adresse IP courante. 
  - @@ListIconGadget    : Renvoie le numéro du premier élément sélectionné ou -1 s'il n'y a pas d'élément sélectionné. 
  - @@ListViewGadget    : Renvoie le numéro de l'élément sélectionné ou -1 s'il n'y a pas d'élément sélectionné. 
  - @@MDIGadget         : Renvoie le numéro de la fenêtre fille active, ou -1 si aucune n'est active. 
  - @@OptionGadget      : Renvoie 1 s'il est activé, 0 sinon. 
  - @@PanelGadget       : Renvoie le numéro d'onglet sélectionné ou -1 si pas de sélection. 
  - @@ProgressBarGadget : Renvoie la valeur actuelle de la barre de progression. 
  - @@ScrollBarGadget   : Renvoie la position actuelle de l'ascenseur. 
  - @@ShortcutGadget    : Renvoie le raccourci clavier sélectionné. 
  - @@SpinGadget        : Renvoie la valeur actuelle du SpinGadget. 
  - @@SplitterGadget    : Renvoie la position actuelle de la barre de séparation, en pixels. 
  - @@TrackBarGadget    : Renvoie la position actuelle de la TrackBar (valeur comprise entre la valeur minimale et maximale). 
  - @@TreeGadget        : Renvoie le numéro de l'élément sélectionné ou  -1 si pas de sélection.
@EndFixedFont

@SeeAlso
  @@SetGadgetState, @@GetGadgetItemState, 
  @@SetGadgetItemState

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat$ = GetGadgetItemText(#Gadget, Element [, Colonne])

@Description
  Renvoie le texte d'un élément d'un 
  gadget.
  
@Parameter "#Gadget"
  Le gadget à utiliser   
  
@Parameter "Element"  
  L'élément à tester. 
@LineBreak
@LineBreak
  Le premier élément dans le gadget 
  commence à 0.
  
@OptionalParameter "Colonne"  
  La colonne à utiliser pour les gadgets 
  qui prennent en charge plusieurs 
  colonnes. 
@LineBreak
@LineBreak
  La première colonne commence à 0. 
@LineBreak
@LineBreak
  La valeur par défaut est 0 colonne.
   
@ReturnValue  
  Renvoie le texte de l'élément du gadget 
  ou une chaîne vide en cas d'erreur.
  
@Remarks  
  Il s'agit d'une fonction universelle 
  qui fonctionne avec presque tous les 
  gadgets comportant des éléments:
@FixedFont
  - @@ComboBoxGadget    : Renvoie le texte de l'élément de la liste déroulante ('Colonne' est ignorée).
  - @@EditorGadget      : Renvoie le texte de l'élément (la ligne) de l'editor ('Colonne' est ignorée).
  - @@ExplorerListGadget: Renvoie le nom du l'élément, sans son chemin complet. 
                          Si 'Element' = -1, alors le titre de la colonne est renvoyé.
  - @@ExplorerTreeGadget: Renvoie le chemin complet de l'élément.
  - @@ListIconGadget    : Renvoie le texte de l'élément de la liste. 
                          'Colonne' est l'index de la colonne (commence à partir de 0).
                          Si 'Element' = -1, alors le titre de la colonne est renvoyé.
  - @@ListViewGadget    : Renvoie le texte de l'élément de la liste ('Colonne' est ignorée).
  - @@MDIGadget         : Renvoie le titre de la fenêtre fille (élément) spécifiée ('Colonne' est ignorée).
  - @@PanelGadget       : Renvoie le texte de l'élément spécifié ('Colonne' est ignorée).
  - @@TreeGadget        : Renvoie le texte de l'élément d'arbre ('Colonne' est ignorée).
  - @@WebGadget         : Renvoie le code html, le titre de la page, message statut ou la sélection actuelle.
@EndFixedFont

  Note: La numérotation des éléments 
  commence à partir de 0.

@SeeAlso
  @@SetGadgetItemText, @@GetGadgetText, 
  @@SetGadgetText

@SupportedOS
;--------------------------------------------------------------------------------------------------------

@Function Resultat = GetGadgetItemState(#Gadget, Element)

@Description
  Renvoie l'état de l'élément d'un gadget.
  
@Parameter "#Gadget"
  Le gadget à utiliser   
  
@Parameter "Element"  
  L'élément à tester. 
@LineBreak
@LineBreak
  Le premier élément dans le gadget 
  commence à 0.
  
@ReturnValue  
  Renvoie l'état de l'élément du gadget 
  ou 0  en cas d'erreur.@LineBreak
  Voir ci-dessous pour connaître la 
  signification de cette valeur en 
  fonction du type du gadget.
  
@Remarks  
  Il s'agit d'une fonction universelle 
  qui fonctionne avec presque tous les 
  gadgets comportant des éléments:
@FixedFont
  - @@CalendarGadget    : Renvoie @#PB_Calendar_Bold quand la date spécifiée est affichée en gras, sinon @#PB_Calendar_Normal 
                          est renvoyé. 'Element' doit être une @LibraryLink "Date" "date" au format PureBasic.

  - @@ExplorerListGadget: Renvoie une combinaison des valeurs suivantes:
    @#PB_Explorer_File     : L'élément est un fichier.
    @#PB_Explorer_Directory: L'élément est un répertoire (ou un disque).
    @#PB_Explorer_Selected : L'élément est sélectionné.

  - @@ListViewGadget   : Renvoie 1 si l'élément est sélectionné, 0 sinon.

  - @@ListIconGadget   : Renvoie une combinaison des valeurs suivantes:
    @#PB_ListIcon_Selected : L'élément est sélectionné
    @#PB_ListIcon_Checked  : L'élément a sa case à cocher associée cochée (créé avec l'option @#PB_ListIcon_CheckBoxes)
    @#PB_ListIcon_Inbetween: L'élément a sa case à cocher associée "indéterminée" (Option @#PB_ListIcon_ThreeState).

  - @@TreeGadget       : Renvoie une combinaison des valeurs suivantes:
    @#PB_Tree_Selected : L'élément est sélectionné.
    @#PB_Tree_Expanded : L'élément est déployé (la branche de l'arbre est ouverte).
    @#PB_Tree_Collapsed: L'élément est fermé.
    @#PB_Tree_Checked  : La case à cocher de l'élément est cochée. (Si l'option @#PB_Tree_CheckBoxes est utilisée)
    @#PB_Tree_Inbetween: L'élément a sa case à cocher associée "indéterminée" (Option @#PB_ListIcon_ThreeState)
@EndFixedFont

Pour vérifier si un état est actif, 
utiliser l'opérateur '&':
@Code
  If Resultat & #PB_Tree_Checked
    ; La 'case à cocher' de l'élément est cochée
  Endif
@EndCode

@Example
  L'exemple ci-dessous montre comment 
  tester différentes combinaisons pour 
  le gadget @@ListIconGadget :
  
@Code
  ; ... Ce code est à placer dans une boucle avec WaitWindowEvent() :
  If GetGadgetItemState(#Listicon, n) & #PB_ListIcon_Checked
    ; L'élément 'n' est coché (indépendamment qu'il soit sélectionné ou non)
  EndIf 
  
  If GetGadgetItemState(#Listicon, n) & #PB_ListIcon_Selected
    ; L'élément 'n' est sélectionné (indépendamment qu'il soit coché ou non)
  EndIf 
  
  If GetGadgetItemState(#Listicon, n) = #PB_ListIcon_Checked | #PB_ListIcon_Selected 
    ; L'élément 'n' est coché et sélectionné
  EndIf 
  
  If GetGadgetItemState(#Listicon, n) & (#PB_ListIcon_Checked | #PB_ListIcon_Selected)
    ; L'élément 'n' est coché ou sélectionné ou les deux
  EndIf
@EndCode

@SeeAlso
  @@SetGadgetItemState, @@GetGadgetState, 
  @@SetGadgetState

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat$ = GetGadgetText(#Gadget)

@Description
  Renvoie le texte contenu dans un gadget.
  
@Parameter "#Gadget"
  Le gadget à utiliser 
  
@ReturnValue  
  Renvoie le texte du gadget, ou une 
  chaîne vide si le gadget ne supporte 
  la présence de texte.
  
@Remarks  
  Cette commande est particulièrement 
  utile pour :
@FixedFont 
  - @@ButtonGadget       : Renvoie le texte affiché par le BoutonGadget.  
  - @@ComboBoxGadget     : Renvoie le texte de l'élément sélectionné.  
  - @@EditorGadget       : Renvoie le texte contenu dans l'éditeur. 
                           Notez que le retour à la ligne se fait avec "Chr (13) + Chr (10)" 
                           sous Windows et avec "Chr (10)" sous Linux et OS X.  
  - @@ExplorerComboGadget: Renvoie le répertoire affiché et sélectionné.  
  - @@ExplorerListGadget : Renvoie le répertoire actuellement affiché.  
  - @@ExplorerTreeGadget : Renvoie le chemin complet du fichier ou répertoire sélectionné.   
  - @@FrameGadget        : Renvoie le titre du FrameGadget.
  - @@HyperLinkGadget    : Renvoie le contenu de l'HyperLinkGadget.  
  - @@ListIconGadget     : Renvoie le texte de la première colonne de l'élément sélectionné.  
  - @@ListViewGadget     : Renvoie le texte de l'élément sélectionné.  
  - @@StringGadget       : Renvoie le contenu du StringGadget.  
  - @@TextGadget         : Renvoie le contenu du TextGadget.  
  - @@TreeGadget         : Renvoie le texte de l'élément sélectionné.  
  - @@WebGadget          : Renvoie l'URL du website affiché.
@EndFixedFont
@SeeAlso
  @@SetGadgetText, @@GetGadgetItemText, 
  @@SetGadgetItemText
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function HideGadget(#Gadget, Etat)

@Description
  Cache ou affiche un gadget. 
  
@Parameter "#Gadget"
  Le gadget à utiliser 
  
@Parameter "Etat"  
@FixedFont
  @#True : Le gadget sera caché.
  @#False: Le gadget sera affiché.
@EndFixedFont

@NoReturnValue 
 
@Example
@Code
  If OpenWindow(0,0,0,180,120,"Cacher un Gadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    ButtonGadget(0,10,10,160,50,"Bouton 1") : bouton = #True   ; le bouton est affiché
    ButtonGadget(1,10,80,160,30,"Cacher le bouton 1")
    Repeat
      Evenement = WaitWindowEvent()
      If Evenement = #PB_Event_Gadget
        If EventGadget()=1
          If bouton = #True     ; si le bouton est affiché
            HideGadget(0,1)     ; cache le bouton
            bouton = #False
            SetGadgetText(1,"Afficher le bouton 1")
          Else                  ; si le bouton est caché
            HideGadget(0,0)     ; affiche le bouton
            bouton = #True
            SetGadgetText(1,"Cacher le bouton 1")
          EndIf
        EndIf
      EndIf
    Until Evenement = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@DisableGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = HyperLinkGadget(#Gadget, X, Y, Largeur, Hauteur, Texte$, Couleur [, Options]) 

@Description
  Crée un lien cliquable, similaire à 
  ceux que l'on trouve sur les pages web, 
  dans la GadgetList courante.
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du 
  nouveau gadget.

@Parameter "Texte$"
  Le texte à afficher. 
  
@Parameter "Couleur"  
  La couleur du texte lorsque la souris 
  survole le gadget. 
@LineBreak
@LineBreak
  La couleur du texte pour l'état non 
  survolé peut être modifié avec 
  @@SetGadgetColor.
  
@OptionalParameter "Options"
@FixedFont
  @#PB_Hyperlink_Underline: Affiche une ligne en dessous du texte sans avoir à utiliser une police soulignée.
@EndFixedFont
  
@ReturnValue
  Renvoie une valeur non nulle en cas 
  de succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks  
 
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 
  
  - Le texte peut être manipulé à l'aide des commandes @@SetGadgetText et @@GetGadgetText. 
  - @@SetGadgetColor et @@GetGadgetColor avec la constante @#PB_Gadget_FrontColor 
    et @#PB_Gadget_BackColor pour changer la couleur du texte et du fond (si la couleur de fond 
    de la fenêtre a changé). 

  Note: @@SetGadgetColor n'est pas pris en charge sur la plate-forme MacOS X.
@EndFixedFont

@Example
@Code
  If OpenWindow(0,0,0,270,160,"HyperLinkGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    HyperLinkGadget(0, 10, 10,250,20,"Lien rouge", RGB(255,0,0))
    HyperLinkGadget(1, 10, 30,250,40,"Lien vert souligné (Police Arial)", RGB(0,255,0), #PB_Font_Underline)
    SetGadgetFont(1, LoadFont(0, "Arial", 12))
    Repeat : Until WaitWindowEvent()=#PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image hyperlinkgadget.png

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, 
  @@GetGadgetColor, @@SetGadgetColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ImageGadget(#Gadget, X, Y, Largeur, Hauteur, ImageID [, Options])

@Description
  Crée un gadget Image dans la GadgetList 
  en cours. 
@LineBreak
@LineBreak
  Un gadget Image permet de positionner une 
  image dans une fenêtre. 
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.
@LineBreak
@LineBreak
  Le gadget ajuste sa largeur et sa hauteur 
  pour s'adapter à l'image affichée. 
@LineBreak
@LineBreak
  La largeur et la hauteur spécifiées ne 
  sont utilisés que si aucune image ne 
  s'affiche.
  
@Parameter "ImageID"  
  L'image à afficher. Utiliser la fonction 
  @@ImageID pour obtenir l'ID d'une image. 
@LineBreak
@LineBreak
  Si ce paramètre est 0, aucune image ne 
  sera affichée.

@OptionalParameter "Options"
@FixedFont
  @#PB_Image_Border : Affiche un cadre autour de l'image.
  @#PB_Image_Raised : Affiche une bordure surélevée autour de l'image.
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.

@Remarks 
@FixedFont 
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

  - @@SetGadgetState: Permet de changer dynamiquement l'image contenue dans le gadget. 
    Un ImageID valide peut être obtenu via @@ImageID. Si 'ImageID' est 0, alors l'image est retirée du gadget.

  Les évènements suivants sont supportés par @@EventType:
    @#PB_EventType_Change          : L'élément courant a changé
    @#PB_EventType_LeftClick       : L'utilisateur a cliqué sur un élément avec le bouton gauche de la souris.
    @#PB_EventType_RightClick      : L'utilisateur a cliqué sur un élément avec le bouton droit de la souris.
    @#PB_EventType_LeftDoubleClick : L'utilisateur a double-cliqué sur un élément avec le bouton gauche de la souris.
    @#PB_EventType_RightDoubleClick: L'utilisateur a double-cliqué sur un élément avec le bouton droit de la souris.
    @#PB_EventType_DragStart       : L'utilisateur a essayé de lancer une opération 'Glisser & Déposer'.
                                    @ExamineDraggedItems peut être utilisé pour obtenir les informations sur les éléments déplacés.

  Après un évènement @#PB_EventType_DragStart , la bibliothèque @LibraryLink "dragdrop" "Drag & Drop" peut être 
  utilisée pour commencer une opération 'Glisser & Déposer'. Sous MacOS X, l'événement 
  @#PB_EventType_DragStart doit être géré à l'aide de @@BindEvent ou de @@BindGadgetEvent.

  Si vous avez besoin de plus de types d'évènements ou de l'affichage avec double-tampon pour une mise à jour 
  régulière de l'image alors jetez un oeil au canvas gadget @@CanvasGadget.
@EndFixedFont 

@Example
@Code
  If OpenWindow(0, 0, 0, 245, 105, "ImageGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    If LoadImage(0, "map.bmp")    ; changez le 2ème paramètre en indiquant le chemin/fichier contenant votre image
      ImageGadget(0,  10, 10, 100, 83, ImageID(0))                      ; imagegadget standard
      ImageGadget(1, 130, 10, 100, 83, ImageID(0), #PB_Image_Border)     ; imagegadget avec cadre
    EndIf
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image imagegadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, 
  @@ButtonImageGadget, @@ImageID, 
  @@CanvasGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = IPAddressGadget(#Gadget, X, Y, Largeur, Hauteur)

@Description
  Crée un gadget de saisie d'adresse IP 
  dans la GadgetList courante. 
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.

@Remarks
@FixedFont  
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

  Les commandes suivantes peuvent être utilisées pour contrôler le gadget:
  - @@GetGadgetState: Renvoie l'adresse IP courante (@@IPAddressField est utile pour récupérer la valeur d'un champ).
  - @@SetGadgetState: Change l'adresse IP courante (@@MakeIPAddress pour construire une IP valide).
  - @@GetGadgetText : Renvoie l'adresse IP en format texte: par exemple "127.0.0.1".
  - @@SetGadgetText : Efface complètement le gadget quand une chaîne vide est spécifiée. C'est la seule action valide pour l'instant.
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 210, 50, "IPAddressGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    IPAddressGadget(0, 10, 15, 160, 20)
    SetGadgetState(0, MakeIPAddress(127, 0, 0, 1))   ; affiche une adresse IP valide
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image ipaddressgadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, 
  @@GetGadgetText, @@SetGadgetText, 
  @@IPAddressField, @@IPString, 
  @@MakeIPAddress

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = IsGadget(#Gadget)

@Description
  Teste si un gadget est correctement 
  initialisé. 
  
@Parameter "#Gadget"
  Le gadget à utiliser    
  
@ReturnValue  
  Renvoie une valeur non nulle si l'entrée 
  est un gadget valide, zéro sinon.
  
@Remarks  
  Cette fonction a été créée pour pouvoir 
  passer n'importe quelle valeur en paramètre 
  sans qu'il ne puisse y avoir de plantage. 
@LineBreak
@LineBreak
  C'est une bonne façon de s'assurer qu'un 
  gadget est prêt à l'emploi.

@SeeAlso
  @@FreeGadget
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ListIconGadget(#Gadget, X, Y, Largeur, Hauteur, TitrePremiereColonne$, LargeurTitrePremiereColonne [, Options])

@Description
  Crée un gadget de listes avec icônes dans 
  la GadgetList en cours. 
 
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.
 
@Parameter "TitrePremiereColonne$" 
  Le titre de la première colonne dans le 
  gadget. 
@LineBreak
@LineBreak
  Le gadget est créé avec une colonne 
  initiale.
 
@Parameter "LargeurTitrePremiereColonne" 
  La largeur de la première colonne dans le 
  gadget.
 
@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_ListIcon_CheckBoxes         : Affiche une case à cocher dans la première colonne.
  @#PB_ListIcon_ThreeState         : La case à cocher peut avoir un état 'indéterminé'.
  @#PB_ListIcon_MultiSelect        : Active le mode 'sélection multiple'.
  @#PB_ListIcon_GridLines          : Affiche des lignes de séparation.
  @#PB_ListIcon_FullRowSelect      : La sélection s'étend à toute la ligne au lieu de la première colonne (Windows seulement).
  @#PB_ListIcon_HeaderDragDrop     : L'ordre des colonnes peut être changé avec un glisser/déposer (drag'n'drop).
  @#PB_ListIcon_AlwaysShowSelection: Affiche la selection même quand le gadget n'est plus actif (Windows seulement).
@EndFixedFont
@Indent
  L'option @#PB_ListIcon_ThreeState peut 
  être utilisée en combinaison avec l'option 
  @#PB_ListIcon_CheckBoxes pour obtenir une 
  case à cocher qui peut avoir un état "on", 
  "off" et "indéterminé".
  L'utilisateur ne peut sélectionner que 
  l'état "on" ou "off". L'état "indéterminé" 
  peut être défini en utilisant la fonction 
  @@SetGadgetItemState.
@EndIndent 

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.

@Remarks 
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget.

  Les fonctions suivantes peuvent être utilisées pour agir sur le contenu de cette liste :
  - @@AddGadgetColumn   : Ajoute une colonne au gadget.
  - @@RemoveGadgetColumn: Supprime une colonne (ainsi que ses données).
  - @@AddGadgetItem     : Ajoute un élément et éventuellement une image.
  - @@RemoveGadgetItem  : Supprime un élément.
  - @@ClearGadgetItems  : Supprime tous les éléments.
  - @@CountGadgetItems  : Renvoie le nombre d'éléments actuellement contenus dans le gadget.
  - @@GetGadgetItemColor: Renvoie la couleur du texte ou du fond de l'élément.
  - @@SetGadgetItemColor: Change la couleur du texte ou du fond de l'élément.
                         (Couleur de fond pas pris en charge sur MacOS X)
  - @@GetGadgetItemData : Renvoie la valeur personnalisée associée à cet élément.
  - @@SetGadgetItemData : Associe une valeur personnalisée à cet élément.
  - @@GetGadgetItemState: Renvoie l'état de l'élément spécifié. 
                          Ce peut être une combinaison de @#PB_ListIcon_Selected 
                          et @#PB_ListIcon_Checked si les 'cases à cocher' sont affichées
  - @@SetGadgetItemState: Change l'état de l'élément spécifié. 
                          Ce peut être une combinaison de @#PB_ListIcon_Selected
                          et @#PB_ListIcon_Checked si les 'cases à cocher' sont affichées
  - @@GetGadgetItemText : Renvoie le texte de l'élément spécifié. 
                          Si 'Element' = -1, alors le titre de la colonne est renvoyé.
  - @@SetGadgetItemText : Change le texte de l'élément spécifié. 
                          Si 'Element' = -1, alors le titre de la colonne est modifié.
                          Comme avec @@AddGadgetItem, il est possible de définir le texte de 
                          plusieurs colonnes à la fois, avec le séparateur @Link  "String/Chr" "Chr(10)".
  - @@SetGadgetItemImage: Modifie l'image actuelle de l'élément spécifié.
  - @@GetGadgetState    : Renvoie le premier élément selectionné ou -1 s'il n'y a pas d'élément sélectionné.
  - @@SetGadgetState    : Change l'élément sélectionné (tous les autres éléments sont alors désélectionnés). 
                          Si -1 est utilisé, tous les éléments seront désélectionnés.
  - @@GetGadgetAttribute avec l'attribut suivant :
      @#PB_ListIcon_ColumnCount   : Renvoie le nombre de colonnes 
      @#PB_ListIcon_DisplayMode   : Renvoie le mode d'affichage du gadget (Windows uniquement)
      @#PB_ListIcon_ClickedColumn : Renvoie le dernier index de colonne cliquée. La première colonne a l'index 0.

  - @@SetGadgetAttribute avec l'attribut suivant (seulement sous Windows):
      @#PB_ListIcon_DisplayMode : Change le mode d'affichage du gadget. 
           Le mode peut être l'une des constantes suivantes:
           @#PB_ListIcon_LargeIcon   : Mode grandes icônes
           @#PB_ListIcon_SmallIcon   : Mode petites icônes
           @#PB_ListIcon_List        : Mode Liste
           @#PB_ListIcon_Report      : Mode Détails (colonnes, mode par défaut)

  - @@GetGadgetItemAttribute : Avec l'attribut suivant:
      @#PB_ListIcon_ColumnWidth : Renvoie la largeur de la 'Colonne' spécifiée. Le paramètre 'Element' est ignoré.

  - @@SetGadgetItemAttribute : Avec les attributs suivants:
      @#PB_ListIcon_ColumnWidth    : Modifie la largeur de la colonne. Le paramètre 'Element' est ignoré.
      @#PB_ListIcon_ColumnAlignment: Modifie l'alignement du texte de la colonne. 
           Le paramètre 'Element' peut avoir l'une des valeurs suivantes:
           - @#PB_ListIcon_Left  : Le texte est aligné à gauche (par défaut).
           - @#PB_ListIcon_Right : Le texte est aligné à droite.
           - @#PB_ListIcon_Center: Le texte est centré.

  Si vous voulez ajouter du contenu à un gadget ListIcon contenant plusieurs colonnes en utilisant
  @@AddGadgetItem, utilisez le format "première colonne"+chr(10)+"deuxième colonne" comme paramètre Texte$. 

  - @@SetGadgetColor et @@GetGadgetColor avec les valeurs 'TypeCouleur' suivantes:
    @#PB_Gadget_FrontColor: Couleur du texte
    @#PB_Gadget_BackColor : Couleur du fond
    @#PB_Gadget_LineColor : Couleur de la grille si l'option @#PB_ListIcon_GridLines est utilisée.

  -  @@SetGadgetItemColor et @@GetGadgetItemColor avec les  valeurs 'TypeCouleur' suivantes:
    @#PB_Gadget_FrontColor: Texte de l'élément.
    @#PB_Gadget_BackColor : Fond de l'élément.

  Note: @@SetGadgetColor n'est pas pris en charge sur la plate-forme MacOS X.
@EndFixedFont

  Les évènements suivants sont supportés par @@EventType:
@FixedFont  
  @#PB_EventType_LeftClick        : Clic avec le bouton gauche de la souris, ou une case à cocher a été utilisée.
  @#PB_EventType_LeftDoubleClick  : Double-clic avec le bouton gauche de la souris
  @#PB_EventType_RightClick       : Clic avec le bouton droit de la souris
  @#PB_EventType_RightDoubleClick : Double-clic avec le bouton droit de la souris
  @#PB_EventType_Change           : L'élément sélectionné a été changé
  @#PB_EventType_DragStart        : L'utilisateur a essayé de lancer une opération de 'Glisser & Déposer'.
                                   @ExamineDraggedItems peut être utilisé pour obtenir les informations sur les éléments déplacés.
  @#PB_EventType_ColumnClick      : Un en-tête de colonne a été cliqué. Utilisez GetGadgetAttribute() avec @#PB_ListIcon_ClickedColumn pour savoir sur lequel a été cliqué.
@EndFixedFont
  Après un évènement @#PB_EventType_DragStart, la bibliothèque @LibraryLink "dragdrop" "Drag & Drop" 
  peut être utilisée pour commencer une opération de 'Glisser & Déposer'. Sous MacOS X, l'événement 
  @#PB_EventType_DragStart doit être géré à l'aide de @@BindEvent ou de @@BindGadgetEvent.

@Example 
@Code
 If OpenWindow(0, 100, 100, 300, 100, "ListIconGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
   ListIconGadget(0, 5, 5, 290, 90, "Nom", 100, #PB_ListIcon_FullRowSelect | #PB_ListIcon_AlwaysShowSelection)
   AddGadgetColumn(0, 1, "Adresse", 250)
   AddGadgetItem(0, -1, "Harry Rannit"+Chr(10)+"12 Parliament Way, Battle Street, By the Bay")
   AddGadgetItem(0, -1, "Ginger Brokeit"+Chr(10)+"130 PureBasic Road, BigTown, CodeCity")

   Repeat
     Evenement = WaitWindowEvent()
   Until Evenement = #PB_Event_CloseWindow
 EndIf
@EndCode

@Example 
@Code
  ; Démonstration des options possibles pour le gadget liste avec icônes...
  If OpenWindow(0, 0, 0, 700, 300, "ListIconGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    ; colonne de gauche
    TextGadget    (6,  10,  10, 330, 20, "Liste avec icônes standard", #PB_Text_Center)
    ListIconGadget(0,  10,  25, 330, 70, "Colonne 1", 100)
    TextGadget    (7,  10, 105, 330, 20, "Liste avec icônes + cases à cocher", #PB_Text_Center)
    ListIconGadget(1,  10, 120, 330, 75, "Colonne 1", 100, #PB_ListIcon_CheckBoxes)  ; Liste avec icônes et cases à cocher
    TextGadget    (8,  10, 205, 330, 20, "Liste avec icônes + sélection multiple", #PB_Text_Center)
    ListIconGadget(2,  10, 220, 330, 70, "Colonne 1", 100, #PB_ListIcon_MultiSelect) ; Liste avec icônes et sélection multiple
    ; colonne de droite
    TextGadget    (9, 360,  10, 330, 20, "Liste avec icônes + lignes de séparation",#PB_Text_Center)
    ListIconGadget(3, 360,  25, 330, 70, "Colonne 1", 100, #PB_ListIcon_GridLines)
    TextGadget   (10, 360, 105, 330, 20, "Liste avec icônes + sélection de ligne entière + sélection toujours affichée",#PB_Text_Center)
    ListIconGadget(4, 360, 120, 330, 75, "Colonne 1", 100, #PB_ListIcon_FullRowSelect | #PB_ListIcon_AlwaysShowSelection)
    TextGadget   (11, 360, 205, 330, 20, "Liste avec icônes standard + mode grandes icônes",#PB_Text_Center)
    ListIconGadget(5, 360, 225, 330, 65, "", 200,#PB_ListIcon_GridLines)
    For a = 0 To 4            ; pour chacune des 5 premières listes avec icônes
      For b = 2 To 4          ; ajouter 3 colonnes supplémentaires
        AddGadgetColumn(a, b, "Colonne " + Str(b), 65)
      Next
      For b = 0 To 2          ; ajouter 4 éléments à chaque ligne des listes avec icônes
        AddGadgetItem(a, b, "Elément 1"+Chr(10)+"Elément 2"+Chr(10)+"Elément 3"+Chr(10)+"Elément 4")
      Next
    Next
    ; Ici nous changeons l'affichage de la liste avec icônes en mode grandes icônes et nous affichons une image
    If LoadImage(0, #PB_Compiler_Home+"examples\sources\Data\File.bmp")     ; changez le chemin/fichier contenant votre image 32x32 pixel
      SetGadgetAttribute(5, #PB_ListIcon_DisplayMode, #PB_ListIcon_LargeIcon)
      AddGadgetItem(5, 1, "Image 1", ImageID(0))
      AddGadgetItem(5, 2, "Image 2", ImageID(0))
    EndIf  
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak

@Image listicongadget.png

@SeeAlso
  @@AddGadgetColumn, @@RemoveGadgetColumn, 
  @@AddGadgetItem, @@RemoveGadgetItem, 
  @@ClearGadgetItems, @@CountGadgetItems,
  @@GetGadgetState, @@SetGadgetState, 
  @@GetGadgetAttribute, @@SetGadgetAttribute, 
  @@GetGadgetItemText, @@SetGadgetItemText, 
  @@GetGadgetItemState, @@SetGadgetItemState, 
  @@SetGadgetItemImage, @@GetGadgetItemData, 
  @@SetGadgetItemData, @@GetGadgetItemAttribute, 
  @@SetGadgetItemAttribute, @@GetGadgetColor, 
  @@SetGadgetColor, @@GetGadgetItemColor, 
  @@SetGadgetItemColor, @@ExplorerListGadget, 
  @@ListViewGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ListViewGadget(#Gadget, X, Y, Largeur, Hauteur [, Options]) 

@Description
  Crée une boîte à listes (ListView) dans la 
  GadgetList en cours.  

@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_ListView_Multiselect: Permet la sélection de plusieurs éléments consécutifs.
  @#PB_ListView_ClickSelect: Permet la sélection de plusieurs éléments.
                            Cliquez sur un élément pour le sélectionner ou le désélectionner 
                            (sous OS X, même comportement que @#PB_ListView_Multiselect).
@EndFixedFont 

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks  
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 
 
  Les fonctions suivantes peuvent être utilisées pour agir sur le contenu de cette liste:
  - @@AddGadgetItem     : Ajoute un élément. Limité à 65 536 éléments.
  - @@CountGadgetItems  : Renvoie le nombre de lignes contenues dans le gadget.
  - @@RemoveGadgetItem  : Supprime un élément
  - @@ClearGadgetItems  : Supprime tous les éléments
  - @@GetGadgetItemData : Renvoie la valeur personnalisée associée à cet élément.
  - @@SetGadgetItemData : Associe une valeur personnalisée à cet élément.
  - @@GetGadgetItemText : Renvoie le texte de l'élément spécifié.
  - @@SetGadgetItemText : Change le texte de l'élément spécifié.
  - @@GetGadgetItemState: Renvoie 0 si l'élément n'est pas séléctionné, sinon une valeur non-nulle.
  - @@SetGadgetItemState: Sélectionne ou désélectionne l'élément spécifié.
  - @@GetGadgetState    : Renvoie le numéro de l'élément qui est sélectionné, -1 si il n'y a pas de sélection.
  - @@SetGadgetState    : Change l'état sélectionné/désélectionné de l'élément spécifié et avec -1 tous les éléments sont désélectionnés.
  - @@GetGadgetText     : Renvoie le texte de l'élément sélectionné.
  - @@SetGadgetText     : Sélectionne l'élément correspondant au texte indiqué. Le texte doit exactement correspondre.

  - @@SetGadgetColor et @@GetGadgetColor avec les valeurs 'TypeCouleur' suivantes:
    @#PB_Gadget_BackColor : Couleur de fond
    @#PB_Gadget_FrontColor: Couleur du texte

  Note: @@SetGadgetColor n'est pas pris en charge sur la plate-forme MacOS X.
@EndFixedFont 
  
  Les évènements suivants sont supportés par 
  @@EventType:
@FixedFont  
  @#PB_EventType_LeftClick (Également déclenché lors d'un changement de sélection)
  @#PB_EventType_LeftDoubleClick
  @#PB_EventType_RightClick
@EndFixedFont

@Example
@Code
  If OpenWindow(0,0,0,270,140,"ListViewGadget",#PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    ListViewGadget(0,10,10,250,120)
    For a=1 To 12
      AddGadgetItem (0,-1,"Elément "+Str(a)+" de la boîte à liste")   ; défini le contenu de la boîte de liste
    Next
    SetGadgetState(0,9)    ; sélectionne le dixième élément (la numérotation commmence à 0)
    Repeat : Until WaitWindowEvent()=#PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image listviewgadget.png

@SeeAlso
  @@AddGadgetItem, @@RemoveGadgetItem, 
  @@ClearGadgetItems, @@CountGadgetItems, 
  @@GetGadgetState, @@SetGadgetState,
  @@GetGadgetText, @@SetGadgetText, 
  @@GetGadgetItemState, @@SetGadgetItemState, 
  @@GetGadgetItemText, @@SetGadgetItemText,
  @@GetGadgetItemData, @@SetGadgetItemData, 
  @@GetGadgetColor, @@SetGadgetColor, 
  @@ListIconGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = MDIGadget(#Gadget, X, Y, Largeur, Hauteur, SousMenu, ElementMenu [, Options])

@Description
  Crée un espace dans lequel peut s'afficher 
  une ou plusieurs fenêtres filles. Ces 
  fenêtres peuvent être librement déplacées 
  et redimensionnées à l'intérieur de cet 
  espace. Ce type de gestion de fenêtres 
  s'appelle MDI (Multiple Document Interface).
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
   @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.
  
@Parameter "SousMenu"  
  L'indice du menu pour lequel l'élément de 
  fenêtres MDI doit être ajouté.
@Indent 
  Un MDIGadget() a toujours besoin d'une 
  fenêtre avec menu (voir @@CreateMenu). 
  Il n'est pas possible de créer plusieurs 
  contrôles MDI dans une seule fenêtre, car 
  il n'y a qu'un seul menu disponible par
  fenêtre. Une fois créé, le gadget mettra 
  automatiquement à jour le menu auquel il 
  est rattaché, avec la liste des fenêtres 
  filles ouvertes. Dans le paramètre 
  'SousMenu', il faut préciser l'index du 
  sous-menu (créé avec @@MenuTitle) qui sera 
  le point d'attache aux éléments gérés par 
  le gadget (l'index du premier sous-menu 
  commence à 0). Le gadget ajoutera alors 
  une barre de séparation à la fin de ce 
  sous-menu et ajoutera la liste des fenêtres 
  filles disponibles.
@EndIndent 
  
@Parameter "ElementMenu"  
  Le premier indice de menu à utiliser pour 
  les fenêtres MDI.
@Indent 
  Le gadget a besoin d'un certain nombre 
  d'identifiants pour ses propres éléments 
  du menu (voir le paramètre 'MenuID' de la 
  commande @@MenuItem). Dans le paramètre 
  'ElementMenu', il faudra indiquer le 
  chiffre à partir duquel le gadget pourra 
  identifier ses propres éléments. Il 
  utilisera autant d'identifiants  qu'il y 
  aura de fenêtres filles ouvertes. Il est 
  donc recommandé d'utiliser un nombre plus 
  grand que le plus grand des nombres utilisé 
  par les menus normaux du programme, pour 
  éviter tout risque de collisions.
@EndIndent 

@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_MDI_AutoSize    : Le gadget sera automatiquement redimensionné en fonction de la taille de la fenêtre mère.
                        S'il n'y a pas d'autres gadgets sur la fenêtre mère, cela peut être une option très pratique.
  @#PB_MDI_BorderLess  : Il n'y aura pas de bords autour du gadget.
  @#PB_MDI_NoScrollBars: Quand une fenêtre est déplacée en dehors de l'espace du gadget, il n'y aura pas de barres de défilement.
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.

@Remarks
  A cause de la connexion avec les menus, 
  il ne peut y avoir qu'un seul gadget MDI 
  par fenêtre, cependant vous pouvez utiliser 
  plusieurs fenêtres contenant un gadget MDI 
  chacune. Ce gadget ne peut être créé que 
  dans une fenêtre principale  donc pas dans 
  un @@ContainerGadget, @@SplitterGadget ou 
  @@PanelGadget).
@LineBreak
  Comme l'intérêt premier de ce gadget est 
  de gérer de manière dynamique des fenêtres, 
  il est recommandé d'utiliser @#PB_Any 
  (création dynamique) pour les gadgets qui 
  seront créés dans les fenêtres filles.
@LineBreak
@LineBreak
  Quand la commande @@AddGadgetItem est 
  utilisée avec ce gadget, l'élément créé 
  est en fait une nouvelle 
  @LibraryLink "window" "fenêtre".@LineBreak 
  Ainsi, toutes les commandes de la 
  bibliothèque @LibraryLink "window" "Window" 
  sont disponibles pour gérer cette nouvelle 
  fenêtre (sauf @@StickyWindow).
  Le numéro choisi pour cet élément ne doit 
  pas entrer en conflit avec un numéro de 
  fenêtre déjà existant sinon l'autre fenêtre
  sera fermée. Le gadget MDI ne génère pas 
  d'évènements. Les évènements concernant les 
  fenêtres MDI filles seront reçus comme des 
  @Link "Window/WaitWindowEvent" "évènements fenêtre" 
  normaux (@#PB_Event_SizeWindow, 
  @#PB_Event_CloseWindow, ...).

@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

  En complément des commandes de la bibliothèque @LibraryLink "window" "Window" (sauf @@StickyWindow), 
  les commandes suivantes sont disponibles pour agir sur le gadget: 
  - @@CountGadgetItems  : Renvoie le nombre de fenêtres fille. 
  - @@AddGadgetItem     : Crée une nouvelle fenêtre fille. 
  - @@ClearGadgetItems  : Ferme toutes les fenêtres filles. 
  - @@GetGadgetState    : Renvoie l'identifiant de la fenêtre fille active. 
  - @@SetGadgetState    : Change la fenêtre fille active ou ré-arrange la disposition des fenêtres filles (voir @@GetGadgetState). 
  - @@SetGadgetAttribute: Avec une des constantes suivantes:
    @#PB_MDI_Image    : Applique une image de fond à la fenêtre MDI.
    @#PB_MDI_TileImage: Applique une image de fond à la fenêtre MDI. 
                       L'image est répétée le nombre de fois nécessaire
                       pour remplir complètement la surface de la fenêtre.

  - @@SetGadgetAttribute: Avec une des constantes suivantes:
    @#PB_ScrollArea_InnerWidth : Modifie la largeur (en pixels) de la zone interne du gadget. 
    @#PB_ScrollArea_InnerHeight: Modifie la hauteur (en pixels) de la zone interne du gadget.  

  - @@SetGadgetColor et @@GetGadgetColor avec la constante @#PB_Gadget_BackColor comme 'TypeCouleur' 
    pour changer la couleur de fond de la fenêtre MDI.
@EndFixedFont

@Example
@Code
  #FenetrePrincipale = 0
  #FenetreFille = 1
  If OpenWindow(#FenetrePrincipale, 0, 0, 400, 300, "MDIGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered | #PB_Window_SizeGadget | #PB_Window_MaximizeGadget)
    If CreateMenu(#FenetrePrincipale, WindowID(#FenetrePrincipale))
      MenuTitle("Index de menu 0")
      MenuTitle("Menu des fenêtres filles")
        MenuItem(0, "Elément auto-créé")
        MenuItem(1, "Elément auto-créé")
        
      MDIGadget(0, 0, 0, 0, 0, 1, 2, #PB_MDI_AutoSize)
        AddGadgetItem(0, #FenetreFille, "Fenêtre fille")
          ; ajouter des gadgets ici...
      UseGadgetList(WindowID(#FenetrePrincipale)) ; renvoie à la liste de gadgets de la fenêtre principale
    EndIf
    Repeat : Until WaitWindowEvent()=#PB_Event_CloseWindow
  EndIf
@EndCode
@Image mdigadget.png

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function OpenGadgetList(#Gadget [, Element])

@Description
  Utilise un gadget comme GadgetList 
  permettant d'ajouter des nouveaux gadgets 
  à la volée.
  
@Parameter "#Gadget"  
  Le gadget dans lequel de nouveaux gadgets 
  seront créés.
  
@OptionalParameter "Element"  
  Pour le @@PanelGadget: Indique l'onglet 
  sur lequel les gadgets doivent être ajoutés. 
  Pour ajouter un nouvel onglet dynamiquement, 
  le paramètre 'Element' doit être omis.
  
@NoReturnValue

@Remarks  
  Les gadgets suivants sont pris en charge 
  par OpenGadgetList():
@FixedFont
  - @@ContainerGadget
  - @@PanelGadget
  - @@ScrollAreaGadget
@EndFixedFont

  Une fois tous les changements effectués, 
  @@CloseGadgetList doit être appelée 
  pour fermer la GadgetList.

@SeeAlso
  @@CloseGadgetList, @@ContainerGadget, 
  @@PanelGadget, @@ScrollAreaGadget
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = OptionGadget(#Gadget, X, Y, Largeur, Hauteur, Texte$)

@Description
  Crée un gadget case à options (connu aussi 
  sous le nom de 'boutons radio') dans la 
  GadgetList en cours. 
    
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@OptionalParameter "Texte$"
  Le texte placé à droite.

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks  
  Ce gadget permet de regrouper plusieurs 
  cases à options, sachant qu'une seule 
  d'entre elles peut être sélectionnée à la 
  fois. Au premier appel de cette fonction, 
  un groupe de cases à options est créé, et 
  tous les appels suivants ajouteront une 
  nouvelle case à options au groupe. Pour 
  terminer le groupe, il suffit d'appeler un 
  autre type de gadget.
@LineBreak 
@LineBreak  
  - @@GadgetToolTip permet d'ajouter une 
  'mini aide' à ce gadget. 

@Example
@Code
  If OpenWindow(0, 0, 0, 170, 110, "OptionGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    OptionGadget(0, 30, 20, 60, 20, "Option 1")
    OptionGadget(1, 30, 45, 60, 20, "Option 2")
    OptionGadget(2, 30, 70, 60, 20, "Option 3")
    SetGadgetState(1, 1)   ; sélectionne la deuxième option
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image optiongadget.png

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, 
  @@GetGadgetState, @@SetGadgetState, 
  @@CheckBoxGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = PanelGadget(#Gadget, X, Y, Largeur, Hauteur)

@Description
  Crée un gadget boîte à onglets (Panel) 
  dans la GadgetList.
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks 
@FixedFont 
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

  Les fonctions suivantes peuvent être appelées pour agir sur la liste :
  - @@AddGadgetItem     : Ajoute un élément. 
  - @@RemoveGadgetItem  : Supprime un élément. 
  - @@CountGadgetItems  : Renvoie le nombre d'éléments.
  - @@ClearGadgetItems  : Supprime tous les éléments. 
  - @@GetGadgetItemText : Renvoie le texte de l'élément spécifié. 
  - @@SetGadgetItemText : Change le texte de l'élément spécifié. 
  - @@SetGadgetItemImage: Change l'image de l'élément spécifié (non pris en charge sur OS X).  
  - @@GetGadgetItemData : Renvoie la valeur associée à l'élément spécifié.
  - @@SetGadgetItemData : Associe une valeur à l'élément spécifié.
  - @@GadgetItemID      : Renvoie le handle du système d'exploitation de l'élément spécifié (Windows uniquement, utile pour les fonctions API).
  - @@SetGadgetState    : Change l'onglet affiché. 
  - @@GetGadgetState    : Renvoie le numéro de l'onglet actuellement affiché.

  - @@GetGadgetAttribute avec un des attributs suivants (il doit y avoir au moins un élément dans le PanelGadget()):
    @#PB_Panel_ItemWidth : Renvoie la largeur de la zone utilisable d'un onglet.
    @#PB_Panel_ItemHeight: Renvoie la hauteur de la zone utilisable d'un onglet.
    @#PB_Panel_TabHeight : Renvoie la hauteur d'un bouton de changement d'onglet.

  Les évènements suivants sont pris en charge par @@EventType:
  @#PB_EventType_Change: L'onglet courant a changé.
  @#PB_EventType_Resize: Le gadget a été redimensionné.
@EndFixedFont

  Lorsqu'une boîte à onglets est créée, sa 
  liste d'éléments est vide.
  Avant de pouvoir ajouter des gadgets ou 
  des onglets, il faut qu'il existe au moins 
  un onglet au préalable, il est nécessaire 
  d'appeler la commande @@AddGadgetItem pour 
  cela. Les prochains gadgets créés le seront 
  automatiquement sur le dernier onglet.
  Lorsque tous les gadgets de la boîte à 
  onglets ont été placés, @@CloseGadgetList
  doit être appelé pour revenir à la 
  GadgetList précédente. Il est ainsi 
  parfaitement possible de créer une boîte à 
  onglets dans une autre boîte à onglets... 

@Example
@Code
  ; Exemple d'utilisation de plusieurs onglets...
  If OpenWindow(0, 0, 0, 322, 220, "PanelGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    PanelGadget     (0, 8, 8, 306, 203)
      AddGadgetItem (0, -1, "Onglet 1")
        PanelGadget (1, 5, 5, 290, 166)
          AddGadgetItem(1, -1, "Sous-onglet 1")
          AddGadgetItem(1, -1, "Sous-onglet 2")
          AddGadgetItem(1, -1, "Sous-onglet 3")
        CloseGadgetList()
      AddGadgetItem (0, -1,"Onglet 2")
        ButtonGadget(2, 10, 15, 80, 24,"Bouton 1")
        ButtonGadget(3, 95, 15, 80, 24,"Bouton 2")
    CloseGadgetList()
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image panelgadget.png

@SeeAlso
  @@AddGadgetItem, @@RemoveGadgetItem, 
  @@CountGadgetItems, @@ClearGadgetItems, 
  @@GetGadgetItemText, @@SetGadgetItemText,
  @@GetGadgetState, @@SetGadgetState, 
  @@GetGadgetAttribute, @@CloseGadgetList, 
  @@OpenGadgetList, @@SetGadgetItemImage

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ProgressBarGadget(#Gadget, X, Y, Largeur, Hauteur, Minimum, Maximum [, Options])

@Description
  Crée un gadget Barre de progression dans 
  la GadgetList.
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@Parameter "Minimum, Maximum"
  L'intervalle qui sera utilisé par la barre 
  de progression.
@LineBreak
@LineBreak 
  La valeur doit être comprise entre 0 et 65536 
  pour être compatible avec tous les systèmes 
  d'exploitation.
  
@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_ProgressBar_Smooth  : La progression est précise, au lieu d'utiliser des blocs (Note: sous Windows avec
                            le support des skins activé et sous OS X, cette option n'a aucun effet).
  @#PB_ProgressBar_Vertical: La barre de progression sera verticale.
@EndFixedFont 
  
@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
 
@Remarks 
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

  Les fonctions suivantes peuvent être appelées pour agir sur la barre de progression :
  - @@SetGadgetState: Change la valeur de la barre de progression. 
    @#PB_ProgressBar_Unknown peut être utilisée pour indiquer que la progression est inconnue.

  - @@GetGadgetState: Renvoie la valeur courante de la barre de progression.
  
  - @@SetGadgetAttribute avec les attributs suivants:
    @#PB_ProgressBar_Minimum: Change la valeur minimale.
    @#PB_ProgressBar_Maximum: Change la valeur maximale. 

  - @@GetGadgetAttribute avec les attributs suivants:
    @#PB_ProgressBar_Minimum: Renvoie la valeur minimale.
    @#PB_ProgressBar_Maximum: Renvoie la valeur maximale. 

  -@@SetGadgetColor et @@GetGadgetColor avec les valeurs suivantes comme 'TypeCouleur' 
  (Note: Sous Windows avec le support des skins activé, la couleur n'a aucun effet):
    @#PB_Gadget_FrontColor: Couleur de la barre de progression
    @#PB_Gadget_BackColor : Couleur du fond

  Note: @@SetGadgetColor n'est pas pris en charge sur la plate-forme MacOS X.
@EndFixedFont
  
@Example
@Code
  If OpenWindow(0, 0, 0, 320, 160, "ProgressBarGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    TextGadget       (3,  10, 10, 250,  20, "Barre de progression standard  (50/100)", #PB_Text_Center)
    ProgressBarGadget(0,  10, 30, 250,  30, 0, 100)
    SetGadgetState   (0, 50)   ;  change la valeur de la 1ère barre de progression (ID = 0) à 50 sur 100
    TextGadget       (4,  10, 70, 250,  20, "Barre de progression précise  (50/200)", #PB_Text_Center)
    ProgressBarGadget(1,  10, 90, 250,  30, 0, 200, #PB_ProgressBar_Smooth)
    SetGadgetState   (1, 50)   ;  change la valeur de la 2ème barre de progression (ID = 1) à 50 sur 200
    TextGadget       (5, 100,135, 200,  20, "Barre de progression verticale  (100/300)", #PB_Text_Right)
    ProgressBarGadget(2, 270, 10,  30, 120, 0, 300, #PB_ProgressBar_Vertical)
    SetGadgetState   (2, 100)   ; change la valeur de la 3ème barre de progression (ID = 2) à 100 sur 300
    Repeat : Until WaitWindowEvent()=#PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image progressbargadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, 
  @@GetGadgetAttribute, @@SetGadgetAttribute, 
  @@GetGadgetColor, @@SetGadgetColor, 
  @@SetGadgetItemImage

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function RemoveGadgetColumn(#Gadget, Colonne)

@Description
  Supprime une colonne d'un gadget. 

@Parameter "#Gadget"
  Le gadget à utiliser  

@Parameter "Colonne"
  La colonne à supprimer.@LineBreak
  @#PB_All peut être utilisé pour supprimer toutes les colonnes.  
@LineBreak
@LineBreak
  La première colonne commence à 0

@NoReturnValue

@Remarks
  Peut être l'un des gadgets suivants:
@LineBreak
@LineBreak
  - @@ListIconGadget @LineBreak
  - @@ExplorerListGadget

@Example
@Code
  If OpenWindow(0, 0, 0, 320, 160, "RemoveGadgetColumn", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    
    ListIconGadget(0, 10, 10, 300, 140, "Salut", 100)
      AddGadgetColumn(0, 1, "Colonne 2", 70)
      AddGadgetColumn(0, 2, "Colonne 3", 70)

    RemoveGadgetColumn(0, 1) ; Supprime la 'colonne 2'
    
    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@AddGadgetColumn, @@ListIconGadget, 
  @@ExplorerListGadget
    
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function RemoveGadgetItem(#Gadget, Position)

@Description
  Supprime un élément d'un gadget. 

@Parameter "#Gadget"
  Le gadget à utiliser  

@Parameter "Position"  
  La position de l'élément dans la liste.
@LineBreak 
@LineBreak 
  L'index commence à 0. 
  
@NoReturnValue  
  
@Remarks  
  Cette fonction s'applique aux gadgets 
  suivants :
@LineBreak
@LineBreak
  - @@ComboBoxGadget @LineBreak
  - @@EditorGadget @LineBreak
  - @@PanelGadget @LineBreak
  - @@ListViewGadget @LineBreak
  - @@ListIconGadget @LineBreak
  - @@MDIGadget @LineBreak
  - @@TreeGadget - La suppression d'un noeud 
  entraîne la suppression de tous les éléments 
  enfants du noeud.

@SeeAlso
  @@AddGadgetItem, @@ClearGadgetItems, 
  @@CountGadgetItems

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function ResizeGadget(#Gadget, X, Y, Largeur, Hauteur)

@Description
  Change la taille et la position d'un gadget. 

@Parameter "#Gadget"
  Le gadget à utiliser  

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau
  gadget. 
@Indent
  Pour faciliter le redimensionnement de 
  l'interface en temps réel, la constante 
  @#PB_Ignore peut être spécifiée à chacun 
  des paramètres (X, Y, Largeur ou Hauteur) 
  conservant la valeur précédente de ce 
  paramètre.
@EndIndent

@NoReturnValue

@Example
@Code
  Procedure RedimFen()
    ResizeGadget(0, #PB_Ignore, #PB_Ignore, WindowWidth(0) - 20, WindowHeight(0) - 60) 
    ResizeGadget(1, #PB_Ignore, WindowHeight(0) - 40, WindowWidth(0) - 20, #PB_Ignore) 
  EndProcedure
  
  If OpenWindow(0, 0, 0, 220, 100, "Redimensionner la fenêtre", #PB_Window_SystemMenu | #PB_Window_ScreenCentered | #PB_Window_SizeGadget)
    WindowBounds(0, WindowWidth(0), WindowHeight(0), #PB_Ignore, #PB_Ignore)
  
    EditorGadget(0, 10, 10, WindowWidth(0) - 20, WindowHeight(0) - 60)
    ButtonGadget(1, 10, WindowHeight(0) - 40, WindowWidth(0) - 20, 30, "Bouton")
    
    ; Utiliser BindEvent() pour redimensionner un gadget en temps réel
    BindEvent(#PB_Event_SizeWindow, @RedimFen())
    
    Repeat
      Select WaitWindowEvent()
        Case #PB_Event_CloseWindow
          End
      EndSelect
    ForEver
  EndIf
@EndCode
  
@SeeAlso
  @@GadgetX, @@GadgetY, @@GadgetWidth, 
  @@GadgetHeight

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ScrollBarGadget(#Gadget, X, Y, Largeur, Hauteur, Minimum, Maximum, LongueurPage [, Options]) 

@Description
  Crée une nouvelle barre de défilement 
  (ascenseur vertical ou horizontal) dans 
  la GadgetList courante.
   
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@Parameter "Minimum, Maximum"
  L'intervalle de défilement (valeurs 
  comprises entre 0 et 10 000). 

@Parameter "LongueurPage"  
  Valeur de déplacement de la page.@LineBreak
  Un ascenseur permet de se déplacer par page 
  lorque l'on clique dans la barre de 
  défilement mais en dehors du curseur de 
  déplacement 
  
@Indent
  Exemple : La longueur totale du composant 
  (image, document, container etc...) fait 
  500 pixels. On ne peut en afficher que 100 
  pixels. Donc on aura une valeur minimale 
  de 0, une valeur Maximale de 500 et une
  longueur de page de 100. Le curseur sera 
  5 fois plus petit que la barre de 
  déplacement, car sa dimension est 
  proportionnelle (dimension = 
  Maximum/LongueurPage).
@EndIndent  

  @OptionalParameter "Options"
@FixedFont
  @#PB_ScrollBar_Vertical: La barre de déplacement verticale.
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

  Les fonctions suivantes peuvent être appelées pour agir sur la barre de déplacement :
  - @@GetGadgetState: Renvoie la position actuelle du curseur (valeur comprise dans l'intervalle Minimum - longueur de la page + 1)
  - @@SetGadgetState: Change la position actuelle du curseur.
  - @@GetGadgetAttribute avec un des attributs suivants:
    @#PB_ScrollBar_Minimum   : Renvoie la position minimale de l'ascenseur.
    @#PB_ScrollBar_Maximum   : Renvoie la position maximale de l'ascenseur.
    @#PB_ScrollBar_PageLength: Renvoie la longueur de la page. 

  - @@SetGadgetAttribute: avec un des attributs suivants:
    @#PB_ScrollBar_Minimum   : Change la position minimale de l'ascenseur.
    @#PB_ScrollBar_Maximum   : Change la position maximale de l'ascenseur.
    @#PB_ScrollBar_PageLength: Change la longueur de la page. 
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 305, 140, "ScrollBarGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    TextGadget       (2,  10, 25, 250,  20, "Ascenseur standard  (début = 50, page = 30/100)",#PB_Text_Center)
    ScrollBarGadget  (0,  10, 42, 250,  20, 0, 100, 30)
    SetGadgetState   (0,  50)   ; change la valeur de la 1ère barre de défilement (ID = 0) à 50 sur 100
    TextGadget       (3,  10,115, 250,  20, "Ascenseur vertical  (début = 100, page = 50/300)",#PB_Text_Right)
    ScrollBarGadget  (1, 270, 10,  25, 120 ,0, 300, 50, #PB_ScrollBar_Vertical)
    SetGadgetState   (1, 100)   ; change la valeur de la 2ème barre de défilement (ID = 1) à 100 sur 300
    
    ; Enlevez les commentaires si dessous si vous avez un problème d'affichage
    ;     ResizeGadget(2, #PB_Ignore, #PB_Ignore, GadgetWidth(2, #PB_Gadget_RequiredSize), #PB_Ignore)
    ;     ResizeGadget(0, #PB_Ignore, GadgetY(2) + GadgetHeight(2), #PB_Ignore, #PB_Ignore)
    ;     ResizeGadget(1, GadgetX(2) + GadgetWidth(2), #PB_Ignore, #PB_Ignore, #PB_Ignore)
    ;     ResizeGadget(3, #PB_Ignore, #PB_Ignore, GadgetWidth(2, #PB_Gadget_RequiredSize), #PB_Ignore)
    ;     ResizeWindow(0, #PB_Ignore, #PB_Ignore, GadgetX(2) + GadgetWidth(2)+GadgetWidth(1) + 13, #PB_Ignore) 
    
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image scrollbargadget.png

@Example Evènement scrollBar
@Code
  Procedure BindHScrollDatas()
    SetWindowTitle(0, "ScrollBarGadget (" + GetGadgetState(0) + ")" )
  EndProcedure

  Procedure BindVScrollDatas()
    SetWindowTitle(0, "ScrollBarGadget (" + GetGadgetState(1) + ")" )
  EndProcedure


  If OpenWindow(0, 0, 0, 400, 400, "ScrollBarGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    TextGadget       (2,  10, 25, 350,  30, "Ascenseur standard  (début = 50, page = 30/100)")
   ScrollBarGadget  (0,  10, 50, 350,  20, 0, 100, 30)
    SetGadgetState   (0,  50)   ; change la valeur de la 1ère barre de défilement (ID = 0) à 50 sur 100
    TextGadget       (3,  10, 120, 350,  30, "Ascenseur vertical  (début = 100, page = 50/300)")
    ScrollBarGadget  (1, 175, 160,  25, 120 ,0, 300, 50, #PB_ScrollBar_Vertical)
    SetGadgetState   (1, 100)   ; change la valeur de la 2ème barre de défilement (ID = 1) à 100 sur 300
  
    BindGadgetEvent(0, @ BindHScrollDatas())
    BindGadgetEvent(1, @ BindVScrollDatas())
  
    Repeat 
      Select WaitWindowEvent() 
        Case  #PB_Event_CloseWindow 
          End 
        Case  #PB_Event_Gadget 
          Select EventGadget()
            Case 0
              MessageRequester("Info","L'ascenseur 0 a été utilisé ! (" + GetGadgetState(0) +
                                      ")" ,#PB_MessageRequester_Ok)
            Case 1
              MessageRequester("Info","L'ascenseur 1 a été utilisé ! (" + GetGadgetState(1) +
                                    ")" ,#PB_MessageRequester_Ok) 
            
          EndSelect 
      EndSelect
    ForEver 
  EndIf
@EndCode

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, 
  @@GetGadgetAttribute, @@SetGadgetAttribute, 
  @@ScrollAreaGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ScrollAreaGadget(#Gadget, X, Y, Largeur, Hauteur, LargeurZoneInterne, HauteurZoneInterne [, ValeurDeplacement [, Options]]) 

@Description
  Crée un gadget zone de défilement dans la 
  GadgetList en cours. C'est un container 
  muni de barres de défilement.

@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@Parameter "LargeurZoneInterne, HauteurZoneInterne"
  Les dimensions de la zone interne.@LineBreak
  Elles peuvent également être plus petits que les dimensions extérieures et 
  dans ce cas, les barres de défilements seront masquées. @LineBreak
  (MS Windows limite ces paramètres à 32 000 pixels)
  
@OptionalParameter "ValeurDeplacement"  
  Déplacement de la zone interne quand on 
  presse sur l'une des flèches de défilement.
  
@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_ScrollArea_Flat      : Cadre simple
  @#PB_ScrollArea_Raised    : Cadre élevé
  @#PB_ScrollArea_Single    : Cadre enfoncé
  @#PB_ScrollArea_BorderLess: Sans bordure
  @#PB_ScrollArea_Center    : La zone interne est automatiquement centrée si sa taille est 
                             plus petite que les dimensions du gadget. 
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks  
  Une fois créé, tous les gadgets suivants 
  seront placés dans ce gadget. @LineBreak
  @@CloseGadgetList permet de revenir à la 
  GadgetList précédente. @LineBreak
  @@OpenGadgetList pourra être utilisé pour 
  ajouter des gadgets dynamiquement. 
@LineBreak  
@LineBreak
  Un évènement est généré lorsque 
  l'utilisateur déplace les ascenseurs du 
  gadget.
@LineBreak
@LineBreak
  Les commandes suivantes peuvent être 
  utilisées pour agir sur un ScrollAreaGadget:
@FixedFont
  - @@GetGadgetAttribute: Avec une des constantes suivantes:
    @#PB_ScrollArea_InnerWidth  : Renvoie la largeur (en pixels) de la zone interne du gadget. 
    @#PB_ScrollArea_InnerHeight : Renvoie la hauteur (en pixels) de la zone interne du gadget.  
    @#PB_ScrollArea_X           : Renvoie la position horizontale actuelle de l'ascenseur (en pixels).
    @#PB_ScrollArea_Y           : Renvoie la position verticale actuelle de l'ascenseur (en pixels).
    @#PB_ScrollArea_ScrollStep  : Renvoie la valeur du pas de défilement (en pixels).
  
  - @@SetGadgetAttribute: Avec une des constantes suivantes:
    @#PB_ScrollArea_InnerWidth  : Modifie la largeur (en pixels) de la zone interne du gadget. 
    @#PB_ScrollArea_InnerHeight : Modifie la hauteur (en pixels) de la zone interne du gadget.  
    @#PB_ScrollArea_X           : Modifie la position horizontale actuelle de l'ascenseur (en pixels).
    @#PB_ScrollArea_Y           : Modifie la position verticale actuelle de l'ascenseur (en pixels).
    @#PB_ScrollArea_ScrollStep  : Modifie la valeur du pas de défilement (en pixels).

  - @@SetGadgetColor et @@GetGadgetColor avec la constante @#PB_Gadget_BackColor comme 'TypeCouleur' 
    pour changer la couleur de fond du gadget.

 L'évènement suivant est pris en charge par @@EventType:
  @#PB_EventType_Resize: Le gadget a été redimensionné.
@EndFixedFont


@Example
@Code

  Procedure BindScrollDatas()
    SetWindowTitle(0, "ScrollAreaGadget " +
                      "(" +
                      GetGadgetAttribute(0, #PB_ScrollArea_X) +
                      "," +                      
                      GetGadgetAttribute(0, #PB_ScrollArea_Y) +
                      ")" )
  EndProcedure
  
  If OpenWindow(0, 0, 0, 405, 240, "ScrollAreaGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    ScrollAreaGadget(0, 10, 10, 390,220, 575, 575, 30)
      ButtonGadget  (1, 10, 10, 230, 30,"Bouton 1")
      ButtonGadget  (2, 50, 50, 230, 30,"Bouton 2")
      ButtonGadget  (3, 90, 90, 230, 30,"Bouton 3")
      TextGadget    (4,130,130, 230, 60,"Ceci est le contenu d'une zone de défilement !",#PB_Text_Right)
      CloseGadgetList() 
      
      BindGadgetEvent(0, @ BindScrollDatas())
        
    Repeat 
      Select WaitWindowEvent() 
        Case  #PB_Event_CloseWindow 
          End 
        Case  #PB_Event_Gadget 
          Select EventGadget()
            Case 0
              MessageRequester("Info","Un ascenseur a été utilisé ! (" +
                                      GetGadgetAttribute(0, #PB_ScrollArea_X) +
                                      "," +                      
                                      GetGadgetAttribute(0, #PB_ScrollArea_Y) +
                                      ")" ,#PB_MessageRequester_Ok)
            Case 1
              MessageRequester("Info","Le bouton 1 a été appuyé !",#PB_MessageRequester_Ok)
            Case 2
              MessageRequester("Info","Le bouton 2 a été appuyé !",#PB_MessageRequester_Ok)
            Case 3
              MessageRequester("Info","Le bouton 3 a été appuyé !",#PB_MessageRequester_Ok)
          EndSelect
      EndSelect 
    ForEver 
  EndIf
@EndCode
@LineBreak
@Image scrollareagadget.png

@SeeAlso
  @@GetGadgetAttribute, @@SetGadgetAttribute, 
  @@ScrollBarGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetActiveGadget(#Gadget)

@Description
  Active un gadget et lui donne le focus clavier. 

@Parameter "#Gadget"
  Le gadget à activer. 
  @LineBreak  
  @LineBreak    
  La valeur '-1' supprime le focus clavier de la fenêtre active.
  
@NoReturnValue 
 
@Remarks
  L'activation d'un gadget lui permet de devenir l'objet courant 
  et de recevoir les messages et la gestion des touches.

@Example
@Code
  If OpenWindow(0, 0, 0, 270, 140, "SetActiveGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    StringGadget  (0, 10, 10, 250, 25, "bla bla...")
    ComboBoxGadget(1, 10, 40, 250, 25)
    For a = 1 To 5 : AddGadgetItem(1, -1, "Elément de liste déroulante " + Str(a)) : Next
    SetGadgetState(1, 2)                ; sélectionne le troisième élément (la numérotation commence à 0)
    ButtonGadget  (2, 10,  90, 250, 20, "Activer le gadget de saisie de texte")
    ButtonGadget  (3, 10, 115, 250, 20, "Activer la liste déroulante")
    Repeat
      Evenement = WaitWindowEvent()
      If Evenement = #PB_Event_Gadget
        Select EventGadget()
          Case 2 : SetActiveGadget(0)   ; Activer le gadget 'saisie de texte'
          Case 3 : SetActiveGadget(1)   ; Activer la liste déroulante
        EndSelect
      EndIf
    Until Evenement = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@GetActiveGadget, @@SetActiveWindow

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetAttribute(#Gadget, Attribut, Valeur)

@Description
  Change la valeur d'un attribut d'un gadget. 
  
@Parameter "#Gadget"
  Le gadget à utiliser   
  
@Parameter "Attribut"  
  L'attribut à définir.@LineBreak
  Consultez la documentation de chaque 
  gadget pour les attributs pris en charge 
  et leur signification.
  
@Parameter "Valeur"  
  La valeur à donner à l'attribut.

@NoReturnValue

@Remarks
  Cette fonction est disponible avec les 
  gadgets suivants:
@LineBreak
@LineBreak
  - @@ButtonImageGadget @LineBreak
  - @@CalendarGadget @LineBreak
  - @@CanvasGadget @LineBreak
  - @@DateGadget @LineBreak
  - @@EditorGadget @LineBreak
  - @@ExplorerListGadget @LineBreak
  - @@ListIconGadget @LineBreak
  - @@MDIGadget @LineBreak
  - @@OpenGLGadget @LineBreak 
  - @@ProgressBarGadget @LineBreak
  - @@ScrollAreaGadget @LineBreak
  - @@ScrollBarGadget @LineBreak
  - @@SpinGadget @LineBreak
  - @@SplitterGadget @LineBreak
  - @@StringGadget @LineBreak
  - @@TrackBarGadget @LineBreak
  - @@WebGadget

@SeeAlso
  @@GetGadgetAttribute, 
  @@GetGadgetItemAttribute, 
  @@SetGadgetItemAttribute
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetColor(#Gadget, TypeCouleur, Couleur)

@Description
  Change la couleur de l'attribut 
  'TypeCouleur' d'un gadget. 
  
@Parameter "#Gadget"
  Le gadget à utiliser 
  
@Parameter "TypeCouleur"  
  L'attribut de couleur à changer.
@LineBreak
@LineBreak
  Le paramètre 'TypeCouleur' peut prendre 
  l'une des valeurs suivantes (tous les 
  gadgets ne supportent pas toutes ces 
  valeurs):
@FixedFont
  @#PB_Gadget_FrontColor     : Texte du gadget
  @#PB_Gadget_BackColor      : Fond du gadget
  @#PB_Gadget_LineColor      : Couleur de la grille
  @#PB_Gadget_TitleFrontColor: Couleur du texte dans le titre (pour @@CalendarGadget)
  @#PB_Gadget_TitleBackColor : Couleur du fond dans le titre (pour @@CalendarGadget)
  @#PB_Gadget_GrayTextColor  : Couleur du texte inactif (pour @@CalendarGadget)
@EndFixedFont

@Parameter "Couleur"
  La nouvelle couleur de l'attribut. 
@LineBreak
@LineBreak
  @@RGB peut être utilisé pour obtenir une 
  couleur valide. 
@LineBreak
@LineBreak
  Pour supprimer la couleur personnalisée et 
  revenir à la couleur par défaut, utiliser 
  la valeur @#PB_Default. 
  
@NoReturnValue  
  
@Remarks  
  Cette commande supporte les gadgets suivants:
@LineBreak
@LineBreak
  - @@CalendarGadget @LineBreak
  - @@ContainerGadget @LineBreak
  - @@DateGadget @LineBreak
  - @@EditorGadget @LineBreak
  - @@ExplorerListGadget @LineBreak
  - @@ExplorerTreeGadget @LineBreak
  - @@HyperLinkGadget @LineBreak
  - @@ListViewGadget @LineBreak
  - @@ListIconGadget @LineBreak
  - @@MDIGadget @LineBreak
  - @@ProgressBarGadget (Windows seulement) @LineBreak
  - @@ScrollAreaGadget @LineBreak
  - @@SpinGadget @LineBreak
  - @@StringGadget @LineBreak
  - @@TextGadget @LineBreak 
  - @@TreeGadget 

@OS Windows
  @LineBreak
  @LineBreak
  @Bold "Note:" Avec le support des thèmes 
  activés sur Windows et suivants, les 
  couleurs personnalisées ne seront 
  probablement pas prises en compte sur 
  certains gadgets.
@EndOS

@OS Linux
  @LineBreak
  @LineBreak
  @Bold "Note:" Les versions GTK de Linux ne prennent pas en compte cette fonction alors 
  la coloration sous Linux fonctionne, si elle est supportée par la distribution, le 
  gestionnaire de fenêtres et le thème.
@EndOS

@Example
@Code
  If OpenWindow(0, 0, 0, 210, 170, "SetGadgetColor", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    StringGadget(0, 10, 10, 180, 20, "Chaîne...")
    ListViewGadget(1, 10, 40, 180, 60)
    For i = 0 To 4
      AddGadgetItem(1, -1, "Texte")
    Next i
    ContainerGadget(2, 10, 110, 180, 50, #PB_Container_Raised)
    
    SetGadgetColor(0, #PB_Gadget_BackColor, $00FFFF)
    SetGadgetColor(1, #PB_Gadget_FrontColor, $FFFFFF)
    SetGadgetColor(1, #PB_Gadget_BackColor, $000000)
    SetGadgetColor(2, #PB_Gadget_BackColor, $0000FF)
  
    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image setgadgetcolor.png

@SeeAlso
  @@GetGadgetColor, @@GetGadgetItemColor, 
  @@SetGadgetItemColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetData(#Gadget, Valeur)

@Description
  Associe une valeur à un gadget. 

@Parameter "#Gadget"
  Le gadget à utiliser   
  
@Parameter "Value"
  La valeur à donner.
  
@NoReturnValue  

@Remarks
  Cette valeur peut être récupérée avec 
  @@GetGadgetData.
@LineBreak
@LineBreak
  Tous les gadgets sont supportés par cette 
  commande.

@Example
@Code
  ; Ce programme utilise SetGadgetData pour associer un indice du tableau Messages()
  ; à chaque bouton. Cela rend la boucle d'évènements plus simple car les gadgets
  ; n'ont plus besoin d'être traités séparément un par un
  ;
  Dim Messages.s(2)
  Messages(0) = "Bonjour"
  Messages(1) = "Salut le Monde"
  Messages(2) = "Rien à dire"
  If OpenWindow(0, 0, 0, 230, 100, "SetGadgetData", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ButtonGadget(0,  10, 10, 80, 20, "Bouton 0"): SetGadgetData(0, 1)
    ButtonGadget(1,  10, 40, 80, 20, "Bouton 1"): SetGadgetData(1, 2)
    ButtonGadget(2,  10, 70, 80, 20, "Bouton 2"): SetGadgetData(2, 1)
    ButtonGadget(3, 100, 10, 80, 20, "Bouton 3"): SetGadgetData(3, 2)
    ButtonGadget(4, 100, 40, 80, 20, "Bouton 4") ; aura la valeur 0 car aucune valeur n'a été attribuée
    ButtonGadget(5, 100, 70, 80, 20, "Bouton 5")  
    Repeat
      Evenement = WaitWindowEvent()
      If Evenement = #PB_Event_Gadget
        Valeur = GetGadgetData(EventGadget())
        MessageRequester("Message", Messages(Valeur))
      EndIf
    Until Evenement = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@GetGadgetData, @@GetGadgetItemData, 
  @@SetGadgetItemData

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetFont(#Gadget, PoliceID)

@Description
  Change la police d'un gadget. 

@Parameter "#Gadget"
  Le gadget à utiliser. 
@LineBreak
@LineBreak
  Si la valeur de #Gadget est @#PB_Default,
  alors la police par défaut utilisée par 
  les nouveaux gadgets est changée par la 
  nouvelle valeur.
  
@Parameter "PoliceID"  
  Le numéro d'identification de la police à 
  utiliser.
@LineBreak
@LineBreak
  Si la valeur de 'PoliceID' est @#PB_Default, 
  alors la police par défaut du système 
  d'exploitation sera utilisée.
@LineBreak
@LineBreak
  'PoliceID' peut être facilement obtenu par 
  la fonction @@FontID de la bibliothèque 
  Font.

@NoReturnValue
  
@Example
@Code
  If OpenWindow(0, 0, 0, 222, 130, "SetGadgetFont", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    If LoadFont(0, "Arial", 16)
      SetGadgetFont(#PB_Default, FontID(0))   ; la police par défaut est remplacée par celle chargée (Arial 16)
    EndIf
    ButtonGadget(0, 10, 10, 200, 30, "Bouton - Arial 16")
    SetGadgetFont(#PB_Default, #PB_Default)  ; remet la police par défaut originale (standard)
    ButtonGadget(1, 10, 50, 200, 30, "Bouton - standard")
    If LoadFont(1,"Courier",10, #PB_Font_Bold | #PB_Font_Underline)
      SetGadgetFont(#PB_Default, FontID(1))   ; la police par défaut est remplacée par celle chargée (Courier 10)
    EndIf
    TextGadget(2, 10, 90, 200, 40, "Texte en Courier 10 Gras + souligné", #PB_Text_Center)
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image setgadgetfont.png

@SeeAlso
  @@GetGadgetFont, @@FontID, @@LoadFont
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetItemAttribute(#Gadget, Element, Attribut, Valeur [, Colonne])

@Description
  Change la valeur d'un attribut d'un élément 
  d'un gadget. 

@Parameter "#Gadget"
  Le gadget à utiliser.   
  
@Parameter "Element"  
  L'élément à utiliser. 
@LineBreak
@LineBreak
  Le premier élément commence à 0.
  
@Parameter "Attribut"  
   L'attribut à définir.@LineBreak 
   Voir ci-dessous pour les valeurs prises 
   en charge.
  
@Parameter "Valeur"  
  La valeur à définir pour l'attribut.
  
@OptionalParameter "Colonne"  
   La colonne à utiliser pour les gadgets 
   qui prennent en charge plusieurs colonnes.
@LineBreak
@LineBreak
   La première colonne a indice 0. 
@LineBreak
@LineBreak
   La valeur par défaut est 0 colonne.

@NoReturnValue
   
@Remarks
  Cette fonction est disponible avec les 
  gadgets suivants: 
@FixedFont
  - @@ExplorerListGadget: 
    @#PB_Explorer_ColumnWidth: Change la largeur de la 'Colonne' spécifiée. Le paramètre 'Element' est ignoré.
  
  - @@ListIconGadget: 
    @#PB_ListIcon_ColumnWidth: Change la largeur de la 'Colonne' spécifiée. Le paramètre 'Element' est ignoré.
@EndFixedFont

@SeeAlso
  @@GetGadgetItemAttribute, 
  @@GetGadgetAttribute, 
  @@SetGadgetAttribute
 
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetItemColor(#Gadget, Element, TypeCouleur, Couleur [, Colonne])

@Description
  Change la couleur d'un élément d'un gadget. 

@Parameter "#Gadget"
  Le gadget à utiliser.   
  
@Parameter "Element"  
  L'élément à utiliser. 
@LineBreak
@LineBreak
  Le premier élément commence à 0. 
@LineBreak
@LineBreak
  S'il est égal à @#PB_All, la couleur sera 
  appliquée à tous les éléments de la 
  colonne spécifiée.
  
@Parameter "TypeCouleur"  
  Peut prendre l'une des valeurs suivantes:
@FixedFont
  @#PB_Gadget_FrontColor: Texte de l'élément.
  @#PB_Gadget_BackColor : Fond de l'élément.
@EndFixedFont

@Parameter "Couleur"  
  La nouvelle couleur de l'attribut. 
@LineBreak
@LineBreak
  @@RGB peut être utilisé pour obtenir une 
  couleur valide. 
@LineBreak
@LineBreak
  Pour supprimer la couleur personnalisée et 
  revenir à la couleur par défaut, utiliser 
  la valeur @#PB_Default.
  
@OptionalParameter "Colonne"  
  La colonne à utiliser pour les gadgets qui 
  prennent en charge plusieurs colonnes.
@LineBreak
@LineBreak
  La première colonne a indice 0. 
@LineBreak
@LineBreak
  La valeur par défaut est 0 colonne.
@LineBreak
@LineBreak
  Si le paramètre 'Colonne' est égal à @#PB_All, 
  la couleur sera appliquée à toutes les 
  colonnes de l'élément spécifié.
  
@NoReturnValue

@Remarks
  Cette commande est supportée par les 
  gadgets suivants: 
@FixedFont
  - @@ListIconGadget
  - @@TreeGadget
 @EndFixedFont
 
@OS MacOS
  @LineBreak
  @LineBreak
  @Bold "Note:"  @@SetGadgetItemColor n'est pas pris en charge sur la plate-forme MacOS X.
@EndOS

@OS Windows
  @Bold "Note:" Avec le support des skins 
  activé sur Windows, les couleurs 
  personnalisées ne seront probablement pas
  prises en compte sur certains gadgets.
@EndOS

@OS Linux
  @LineBreak
  @LineBreak
  @Bold "Note:" Les versions GTK de Linux ne prennent pas en compte cette fonction alors 
  la coloration sous Linux fonctionne, si elle est supportée par la distribution, le 
  gestionnaire de fenêtres et le thème.
@EndOS

@Example
@Code
  If OpenWindow(0, 0, 0, 300, 300, "SetGadgetItemColor", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ListIconGadget(0, 10, 10, 280, 280, "Colonne 0", 100)
    AddGadgetColumn(0, 1, "Colonne 1", 100)
    For i = 1 To 10
      AddGadgetItem(0, -1, "Texte "+Str(i)+Chr(10)+"Texte "+Str(i))
    Next 
                                                                  ; la numérotation commence à 0 pour les éléments/colonnes
    SetGadgetItemColor(0, #PB_All, #PB_Gadget_FrontColor, $0000FF,  1) ; tous les éléments de la 2ème colonne en rouge
    SetGadgetItemColor(0,  3, #PB_Gadget_BackColor,  $00FFFF, -1) ; le 4ème élément de toutes les colonnes sur fond jaune
    SetGadgetItemColor(0,  9, #PB_Gadget_BackColor,  $FFFF00,  1) ; le 10ème élément de la 2ème colonne sur fond bleu   
    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image setgadgetitemcolor.png

@SeeAlso
  @@GetGadgetItemColor, @@GetGadgetColor, 
  @@SetGadgetColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetItemData(#Gadget, Element, Valeur)

@Description
  Associe une valeur à un élément d'un gadget. 

@Parameter "#Gadget"
  Le gadget à utiliser.   
  
@Parameter "Element"  
  L'élément à utiliser. 
@LineBreak
@LineBreak  
  Le premier élément commence à 0.
  
@Parameter "Valeur"  
  La valeur à définir.

@NoReturnValue

@Remarks  
  Cette valeur peut être récupérée avec la 
  commande @@GetGadgetItemData. 
@LineBreak
@LineBreak
  Si l'index de l'élément change (par exemple 
  d'autres éléments sont effacés), la valeur 
  restera toujours associée à son élément.
@LineBreak
@LineBreak
  Cette commande est supportée par les 
  gadgets suivants:
@LineBreak
@LineBreak
  - @@ComboBoxGadget @LineBreak
  - @@ListIconGadget @LineBreak
  - @@ListViewGadget @LineBreak
  - @@PanelGadget @LineBreak
  - @@TreeGadget

@Example
@Code
  ; Ce programme utilise SetGadgetItemData pour stocker la position d'origine
  ; de chaque élément pour la connaitre plus tard, même si l'index des éléments a changé.
  ;
  If OpenWindow(0, 0, 0, 290, 250, "SetGadgetItemData", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    ButtonGadget(0,  10, 10, 80, 20, "Ajouter")
    ButtonGadget(1, 100, 10, 80, 20, "Supprimer") 
    ButtonGadget(2, 190, 10, 80, 20, "Test")
    ListViewGadget(3, 10, 40, 260, 200)
    For i = 0 To 10
      AddGadgetItem(3, i, "Ancien élément "+Str(i))
      SetGadgetItemData(3, i, i)
    Next i
   
    Repeat
      Evenement = WaitWindowEvent()
      If Evenement = #PB_Event_Gadget
        element = GetGadgetState(3)
       
        Select EventGadget()       
          Case 0 ; Ajouter         
            AddGadgetItem(3, element, "Nouvel élément")
            If element <> -1
              SetGadgetItemData(3, element, -1)
            Else
              SetGadgetItemData(3, CountGadgetItems(3)-1, -1)
            EndIf
           
          Case 1 ; Supprimer
            If element <> -1
              RemoveGadgetItem(3, element)
            EndIf
           
          Case 2 ; Test
            If element <> -1
              valeur = GetGadgetItemData(3, element)
              If valeur = -1
                MessageRequester("", "C'est un nouvel élément")
              Else
                MessageRequester("", "C'était l'élément numéro "+Str(valeur))
              EndIf
            EndIf
                     
        EndSelect
      EndIf
    Until Evenement = #PB_Event_CloseWindow
  EndIf
@EndCode
 
@SeeAlso
  @@GetGadgetItemData, @@GetGadgetData, 
  @@SetGadgetData
 
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetItemImage(#Gadget, Element, ImageID)

@Description
  Change l'image d'un élément.

@Parameter "#Gadget"
  Le gadget à utiliser.

@Parameter "Element"
  L'élément concerné. 
@LineBreak
@LineBreak
  Le premier élément dans le gadget 
  commence à zéro.

@Parameter "ImageID"
  La nouvelle image à utiliser pour l'élément. 
@LineBreak
@LineBreak
  L'image utilisée doit être dans le format 
  standard 16x16. @LineBreak
  Utilisez la commande @@ImageID pour obtenir 
  l'ID de l'image.
  
@NoReturnValue

@Remarks
  Il s'agit d'une fonction universelle qui 
  fonctionne avec les gadgets suivants:
@FixedFont
  - @@ComboBoxGadget
  - @@ListIconGadget
  - @@PanelGadget (non pris en charge sur OS X)
  - @@TreeGadget
@EndFixedFont

@SeeAlso
  @@AddGadgetItem

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetItemState(#Gadget, Element, Etat)

@Description
  Change l'état d'un élément d'un gadget. 

@Parameter "#Gadget"
  Le gadget à utiliser.   
  
@Parameter "Element"  
  L'élément à utiliser. 
@LineBreak
@LineBreak
  Le premier élément commence à 0.
  
@Parameter "Etat"  
  Le nouvel état de l'élément.

@NoReturnValue

@Remarks  
  Cette commande est disponible pour les 
  gadgets suivants:
@FixedFont 
  - @@CalendarGadget: 'Etat' 
    @#PB_Calendar_Bold : Afficher la date en gras.
    @#PB_Calendar_Normal Afficher la date sans graisse (normal). 
                      'Element' est une date au format PureBasic.
  
  - @@ExplorerListGadget: 'Etat' 
    @#PB_Explorer_Selected : L'élément sera selectionné.

  - @@ListViewGadget: 'Etat' = 1 si l'élément doit être sélectionné, 0 sinon.

  - @@ListIconGadget: 'Etat' est une combinaison des valeurs suivantes:
    @#PB_ListIcon_Selected : L'élément sera selectionné.
    @#PB_ListIcon_Checked  : L'élément aura sa case à cocher associée cochée (créé avec l'option @#PB_ListIcon_CheckBoxes).
    @#PB_ListIcon_Inbetween: L'élément doit avoir sa case à cocher associée dans l'état indéterminé (@#PB_ListIcon_ThreeState).

  - @@TreeGadget    : 'Etat' est une combinaison des valeurs suivantes:
    @#PB_Tree_Selected : L'élément sera sélectionné.
    @#PB_Tree_Expanded : L'élément sera déployé (noeud ouvert).
    @#PB_Tree_Collapsed: L'élément sera fermé.
    @#PB_Tree_Checked  : La case à cocher associée à l'élément sera cochée (créé avec l'option @#PB_Tree_CheckBoxes).
    @#PB_Tree_Inbetween: L'élément doit avoir sa case à cocher associée dans l'état indéterminé.
@EndFixedFont

@Example
@Code
  SetGadgetItemState(0, 1, #PB_Tree_Expanded | #PB_Tree_Selected) ; l'élément 2 sera déployé et sélectionné.
@EndCode  

@SeeAlso
  @@GetGadgetItemState, @@GetGadgetState, 
  @@SetGadgetState

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetItemText(#Gadget, Element, Texte$ [, Colonne])

@Description
  Change le texte d'un élément d'un gadget. 

@Parameter "#Gadget"
  Le gadget à utiliser.   
  
@Parameter "Element"  
  L'élément à utiliser. 
@LineBreak
@LineBreak
  Le premier élément commence à 0.
  
@Parameter "Texte$"  
  Le nouveau texte de l'élément.

@OptionalParameter "Colonne"  
 La colonne à utiliser pour les gadgets qui 
 prennent en charge plusieurs colonnes.
@LineBreak
@LineBreak
 La première colonne a indice 0. 
@LineBreak
@LineBreak
 La valeur par défaut est 0 colonne.
    
@NoReturnValue  

@Remarks
  Cette commande est disponible pour les 
  gadgets suivants:
@FixedFont
  - @@ComboBoxGadget
  - @@EditorGadget
  - @@ExplorerListGadget: Si Element = -1 alors l'entête de la colonne indiquée est changé.
  - @@ListIconGadget    : Si Element = -1 alors l'entête de la colonne indiquée est changé.
  - @@ListViewGadget
  - @@MDIGadget
  - @@PanelGadget
  - @@TreeGadget
  - @@WebGadget: Change le code html dans le gadget avec @#PB_Web_HtmlCode comme 'Element'.
@EndFixedFont

@SeeAlso
  @@GetGadgetItemText, @@GetGadgetText, 
  @@SetGadgetText

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetState(#Gadget, Etat)

@Description
  Change l'état d'un gadget. 
  
@Parameter "#Gadget"
  Le gadget à utiliser.   
  
@Parameter "Etat"  
  Le nouvel état de l'élément.

@NoReturnValue  
  
@Remarks  
  Cette fonction est universelle et 
  s'applique à pratiquement tous les gadgets :
@FixedFont
  - @@ButtonGadget     : change l'état d'un bouton poussoir (@#PB_Button_Toggle): 1 = pressé, 0 = normal. 
  - @@ButtonImageGadget: change l'état d'un bouton poussoir (@#PB_Button_Toggle): 1 = pressé, 0 = normal. 
  - @@CalendarGadget   : Change la date affichée. 
  - @@CheckBoxGadget   : Change l'etat de la case à cocher. Valeurs disponibles:
    @#PB_CheckBox_Checked  : Coche la case.
    @#PB_CheckBox_Unchecked: Décoche la case.
    @#PB_CheckBox_Inbetween: Active l'état intermédiaire 
                            (seulement pour les case à cocher de type @#PB_CheckBox_ThreeState).
  - @@ComboBoxGadget   : Change l'élément sélectionné en cours. 
  - @@DateGadget       : Change la date ou l'heure affichée. Si @#PB_Date_CheckBox est utilisé, 
                         mettre 'Etat' à 0 pour décocher la case à cocher.
  - @@ImageGadget      : Change l'image affichée par le gadget ('Etat' sera un @@ImageID). 
                         Si Etat = 0, l'image est retirée du gadget. 
  - @@IPAddressGadget  : change l'adresse IP courante.
  - @@ListIconGadget   : Change l'élément sélectionné (tous les autres éléments sont alors désélectionnés). 
                         Si 'Etat' = -1, alors aucun élément n'est sélectionné. 
  - @@ListViewGadget   : Change l'élément sélectionné. Si 'Etat' = -1, alors aucun élément n'est sélectionné.
  - @@MDIGadget        : Change la fenêtre fille active (En indiquant son numéro de #fenetre), ou exécute une des actions suivantes:
    @#PB_MDI_Cascade         : Ré-organise les fenêtres filles sous forme de cascade.
    @#PB_MDI_TileVertically  : Ré-organise les fenêtres filles sous forme de mosaïque verticale.
    @#PB_MDI_TileHorizontally: Ré-organise les fenêtres filles sous forme de mosaïque horizontale.
    @#PB_MDI_Next            : Active la fenêtre fille suivante.
    @#PB_MDI_Previous        : Active la fenêtre fille précédente.
    @#PB_MDI_Arrange         : Ré-organise les fenêtres filles qui sont réduites.

  - @@OptionGadget     : 'Etat' = 1 pour l'activer, sinon 0. 
  - @@PanelGadget      : Change l'onglet en cours. 
  - @@ProgressBarGadget: Change la valeur de la barre de progression. 
  - @@ScrollBarGadget  : Change la position du curseur. 
  - @@ShortcutGadget   : Change le raccourci clavier.  
  - @@SpinGadget       : Change la valeur actuelle. 
  - @@SplitterGadget   : Change la position de la barre de séparation (en pixels). 
  - @@TrackBarGadget   : Change la valeur du curseur. La valeur @#PB_ProgressBar_Unknown 
                         peut être utilisée pour indiquer que la progression est inconnue. 
  - @@TreeGadget       : Change l'élément actuellement sélectionné, -1 pour tout déselectionner. 
  - @@WebGadget        : Effectue des actions sur le navigateur.
@EndFixedFont

@SeeAlso
  @@GetGadgetState, @@GetGadgetItemState, 
  @@SetGadgetItemState

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetText(#Gadget, Texte$)

@Description
  Modifie le texte contenu dans un gadget. 
  
@Parameter "#Gadget"
  Le gadget à utiliser.   
  
@Parameter "Texte$"  
  Le nouveau texte de l'élément.

@NoReturnValue

@Remarks
  Cette fonction est particulièrement 
  utile pour :
@LineBreak
@LineBreak
  - @@ButtonGadget @LineBreak  
  - @@ComboBoxGadget @LineBreak
  - @@DateGadget @LineBreak
  - @@EditorGadget @LineBreak
  - @@ExplorerComboGadget @LineBreak
  - @@ExplorerListGadget @LineBreak
  - @@ExplorerTreeGadget @LineBreak
  - @@FrameGadget @LineBreak
  - @@HyperLinkGadget @LineBreak
  - @@ListViewGadget @LineBreak
  - @@StringGadget @LineBreak
  - @@TextGadget @LineBreak
  - @@TreeGadget @LineBreak
  - @@WebGadget

@SeeAlso
  @@GetGadgetText, @@GetGadgetItemText, 
  @@SetGadgetItemText
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ShortcutGadget(#Gadget, X, Y, Largeur, Hauteur, Raccourci)

@Description
  Crée un gadget raccourci clavier dans 
  la GadgetList. 
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@Parameter "Raccourci"
  La combinaison de touches. 
@LineBreak
@LineBreak
  Les valeurs possibles sont les mêmes que 
  celles citées dans @@AddKeyboardShortcut. 
@LineBreak
@LineBreak
  La valeur 0 indique qu'aucun raccourci 
  n'est défini. 

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks  
  - @@GadgetToolTip permet d'ajouter une 
  'mini aide' à ce gadget.
@LineBreak
@LineBreak
  Les fonctions suivantes peuvent être 
  appelées pour contrôler le gadget:
@LineBreak
  - @@GetGadgetState: Renvoie le raccourci 
  clavier actuel. @LineBreak
  - @@SetGadgetState: Change le raccourci 
  clavier actuel.

@Example
@Code
  If OpenWindow(0, 0, 0, 240, 70, "ShortcutGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ShortcutGadget(0, 20, 20, 200, 25, #PB_Shortcut_Control | #PB_Shortcut_A)
    Repeat
      Event = WaitWindowEvent()
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@Seealso
  @@GetGadgetState, @@SetGadgetState, 
  @@AddKeyboardShortcut

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = SpinGadget(#Gadget, X, Y, Largeur, Hauteur, Minimum, Maximum [, Options])

@Description
  Crée un gadget incrémentiel dans la 
  GadgetList.
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@Parameter "Minimum, Maximum"  
  Les valeurs minimales et maximales.
  
@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_Spin_ReadOnly: Le gadget n'est pas éditable, sa valeur ne peut être changée que par les flèches.
  @#PB_Spin_Numeric : Le gadget va mettre à jour automatiquement le texte affiché, donc @@SetGadgetText n'est pas nécessaire.
@EndFixedFont 
 
@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.

@Remarks 
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

  Les fonctions suivantes peuvent être appelées pour contrôler le gadget:
  @@GetGadgetState    : Renvoie la valeur du curseur interne.
  @@SetGadgetState    : Change la valeur du curseur interne.
  @@GetGadgetText     : Renvoie le texte du gadget.
  @@SetGadgetText     : Change le texte du gadget.
  @@GetGadgetAttribute avec un des attributs suivants:
    @#PB_Spin_Minimum: Renvoie la valeur minimale possible.
    @#PB_Spin_Maximum: Renvoie la valeur maximale possible. 

  @@SetGadgetAttribute: avec un des attributs suivants:

    @#PB_Spin_Minimum: Change la valeur minimale possible.
    @#PB_Spin_Maximum: Change la valeur maximale possible. 

  Les évènements suivants sont supportés par @@EventType:
    @#PB_EventType_Change: L'utilisateur a changé le texte dans la zone d'édition.
    @#PB_EventType_Up    : Le bouton 'Haut' a été pressé.
    @#PB_EventType_Down  : Le bouton 'Bas' a été pressé.
  
  - @@SetGadgetColor et @@GetGadgetColor avec les valeurs 'TypeCouleur' suivantes:
    @#PB_Gadget_FrontColor: couleur du texte 
    @#PB_Gadget_BackColor : couleur du fond

@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 160, 70, "SpinGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    SpinGadget     (0, 20, 20, 100, 25, 0, 1000)
    SetGadgetState (0, 5) : SetGadgetText(0, "5")   ; définit la valeur initiale
    Repeat
      Evenement = WaitWindowEvent()
      If Evenement = #PB_Event_Gadget
        If EventGadget() = 0
          SetGadgetText(0,Str(GetGadgetState(0)))
        EndIf
      EndIf
    Until Evenement = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image spingadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, 
  @@GetGadgetText, @@SetGadgetText, 
  @@GetGadgetAttribute, @@SetGadgetAttribute,
  @@GetGadgetColor, @@SetGadgetColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = SplitterGadget(#Gadget, X, Y, Largeur, Hauteur, #Gadget1, #Gadget2 [, Options]) 

@Description
  Crée une zone séparée en deux parties 
  (horizontalement ou verticalement), 
  chacune contenant un gadget fils. 
  @LineBreak
  La barre de séparation peut être déplacée 
  librement par l'utilisateur et les deux 
  gadgets associés seront redimensionnés 
  automatiquement.
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@Parameter "#Gadget1, #Gadget2"
  Les gadgets fils.
  
@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_Splitter_Vertical   : La zone sera séparée verticalement.
  @#PB_Splitter_Separator  : Un motif 3D est affiché dans la barre de séparation.
  @#PB_Splitter_FirstFixed : Quand le SplitterGadget sera redimensionné, le premier gadget associé gardera sa taille.
  @#PB_Splitter_SecondFixed: Quand le SplitterGadget sera redimensionné, le deuxième gadget associé  gardera sa taille.
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks  
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

  Les fonctions suivantes peuvent être utilisées pour agir sur le gadget:
  @@GetGadgetState: Renvoie la position de la barre de séparation, en pixels.
  @@SetGadgetState: Change la position de la barre de séparation, en pixels.
  @@GetGadgetAttribute avec un des attributs suivants:
    @#PB_Splitter_FirstMinimumSize : Renvoie la taille minimale (en pixels) que le premier gadget associé peut avoir. 
    @#PB_Splitter_SecondMinimumSize: Renvoie la taille minimale (en pixels) que le deuxième gadget associé peut avoir.
    @#PB_Splitter_FirstGadget      : Renvoie le numéro du premier gadget.
    @#PB_Splitter_SecondGadget     : Renvoie le numéro du deuxième gadget.

  @@SetGadgetAttribute avec un des attributs suivants:
    @#PB_Splitter_FirstMinimumSize : Fixe la taille minimale (en pixels) que le premier gadget associé peut avoir. 
    @#PB_Splitter_SecondMinimumSize: Fixe la taille minimale (en pixels) que le deuxième gadget associé peut avoir.
    @#PB_Splitter_FirstGadget      : Remplace le premier gadget avec un nouveau.
    @#PB_Splitter_SecondGadget     : Remplace le deuxième gadget avec un nouveau.

  @Bold "Note:" Quand un gadget est remplacé à l'aide de @@SetGadgetAttribute, l'ancien gadget n'est pas automatiquement supprimé. 
  Il sera remis sur la fenêtre qui contient le splitter, pour permettre de permuter les gadgets entre différents splitters 
  sans avoir à les recréer. Si l'ancien gadget doit être supprimé, son numéro peut être recupéré avec @@GetGadgetAttribute 
  puis supprimé par @@FreeGadget après son remplacement. Un gadget ne peut pas être dans deux splitters à la fois.
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 240, 230, "SplitterGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    #Bouton1    = 0 
    #Bouton2    = 1
    #Separateur = 2
      
    ButtonGadget(#Bouton1, 0, 0, 0, 0, "Bouton 1") ; Inutile de préciser la taille ou les coordonnées
    ButtonGadget(#Bouton2, 0, 0, 0, 0, "Bouton 2") ; car elles seront déterminées automatiquement
    SplitterGadget(#Separateur, 5, 5, 230, 130, #Bouton1, #Bouton2, #PB_Splitter_Separator)
      
    TextGadget(3, 10, 135, 210, 90, "Le composant d'interface graphique ci-dessus affiche deux boutons automatiquement redimensionnés à l'intérieur de la zone séparée de taille 230x130.",#PB_Text_Center)
      
    Repeat 
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image splittergadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, 
  @@GetGadgetAttribute, @@SetGadgetAttribute
 
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = StringGadget(#Gadget, X, Y, Largeur, Hauteur, Texte$ [, Options])

@Description
  Crée un gadget de saisie de texte (une 
  seule ligne) dans la GadgetList en cours. 
 
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@Parameter "Texte$"
  Le texte initial. 
@LineBreak
@LineBreak
  Ce gadget accepte une seule ligne de texte. 
  Pour obtenir plusieurs lignes d'entrée, 
  utiliser le gadget @@EditorGadget.
  
@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_String_Numeric   : Seuls des nombres entiers positifs peuvent être saisis.
  @#PB_String_Password  : Mode 'mot de passe', n'affiche que des '*'.
  @#PB_String_ReadOnly  : Mode 'lecture seulement'.
  @#PB_String_LowerCase : Tous les caractères saisis sont transformés en minuscules.
  @#PB_String_UpperCase : Tous les caractères saisis sont transformés en majuscules.
  @#PB_String_BorderLess: Aucune bordure n'est affichée autour du gadget.
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré automatiquement.

@Remarks
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget.

  - Le texte pourra être ensuite modifié par les fonctions @@SetGadgetText et @@GetGadgetText. 

  - Les évènements suivants sont disponibles par l'intermédiaire d'@@EventType:
    @#PB_EventType_Change    : Le texte a été modifié par l'utilisateur.
    @#PB_EventType_Focus     : Le StringGadget obtient le focus.
    @#PB_EventType_LostFocus : Le StringGadget a perdu le focus.

  - Les fonctions suivantes peuvent agir sur le gadget:
    @@SetGadgetColor et @@GetGadgetColor avec les valeurs 'TypeCouleur' suivantes:
      @#PB_Gadget_BackColor    : Couleur de fond
      @#PB_Gadget_FrontColor   : Couleur du texte

  - @@GetGadgetAttribute avec les attributs suivants:
      @#PB_String_MaximumLength: Renvoie le nombre maximal de caractères qui peuvent être entrés.

  - @@SetGadgetAttribute avec les attributs suivants:
      @#PB_String_MaximumLength: Limite le nombre maximum de caractères qui peuvent être entrés.

@EndFixedFont

@Example
@Code
  ; Démonstration des options possibles pour le gadget de saisie de texte...
  If OpenWindow(0, 0, 0, 322, 205, "Les options de StringGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    StringGadget(0, 8,  10, 306, 20, "Gadget saisie de texte normal...")
    StringGadget(1, 8,  35, 306, 20, "1234567", #PB_String_Numeric)
    StringGadget(2, 8,  60, 306, 20, "Gadget saisie de texte en lecture seule", #PB_String_ReadOnly)
    StringGadget(3, 8,  85, 306, 20, "minuscules...", #PB_String_LowerCase)
    StringGadget(4, 8, 110, 306, 20, "majuscules...", #PB_String_UpperCase)
    StringGadget(5, 8, 140, 306, 20, "Gadget saisie de texte sans bordure", #PB_String_BorderLess)
    StringGadget(6, 8, 170, 306, 20, "Mot de passe", #PB_String_Password)
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image stringgadget.png

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, 
  @@GetGadgetColor, @@SetGadgetColor, 
  @@EditorGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = TextGadget(#Gadget, X, Y, Largeur, Hauteur, Texte$ [, Options])

@Description
  Crée un gadget étiquette dans la 
  GadgetList en cours. 

@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@Parameter "Texte$"
  Le texte à afficher.
  
@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_Text_Center: Le texte est centré.
  @#PB_Text_Right : Le texte est aligné à droite.
  @#PB_Text_Border: Un bord est dessiné autour du gadget.
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.

@Remarks
  Son contenu peut être modifié à l'aide des 
  fonctions @@SetGadgetText et @@GetGadgetText.
  La police d'un TextGadget() peut facilement 
  être changée avec @@SetGadgetFont.
@LineBreak
@LineBreak 
  Ce gadget supporte les commandes 
  @@SetGadgetColor et @@GetGadgetColor
  avec les valeurs 'TypeCouleur' suivantes:
@FixedFont
  @#PB_Gadget_BackColor : Couleur de fond
  @#PB_Gadget_FrontColor: Couleur du texte
@EndFixedFont

  Note: Ce gadget ne reçoit pas les évènements utilisateur.
@LineBreak
@LineBreak  
  Note: @@GadgetToolTip ne fonctionne qu'avec Linux.
  
@Example
@Code
  If OpenWindow(0,0,0,270,160,"TextGadget",#PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    TextGadget(0, 10, 10,250,20,"Gadget texte standard (texte aligné à gauche)")
    TextGadget(1, 10, 40,250,20,"Gadget texte (texte aligné à droite)", #PB_Text_Right)
    TextGadget(2, 10, 70,250,20,"Gadget texte (texte centré)",#PB_Text_Center)
    TextGadget(3, 10,100,250,20,"Gadget texte avec bordure",#PB_Text_Border)
    TextGadget(4, 10,130,250,20,"Gadget texte (texte centré) + bordure", #PB_Text_Center | #PB_Text_Border)
    Repeat : Until WaitWindowEvent()=#PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image textgadget.png

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, 
  @@GetGadgetColor, @@SetGadgetColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = TrackBarGadget(#Gadget, X, Y, Largeur, Hauteur, Minimum, Maximum [, Options])

@Description
  Crée un gadget Curseur dans la GadgetList 
  en cours. 
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@Parameter "Minimum, Maximum"
  La plage 'Minimum-Maximum' doit être 
  comprise entre 0 et 10 000.
  
@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_TrackBar_Ticks   : Affiche un trait de marquage à chaque valeur.
  @#PB_TrackBar_Vertical: Le gadget est vertical.
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks  
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

  Les commandes suivantes peuvent être utilisées pour contrôler le gadget:
  - @@GetGadgetState: Renvoie la position actuelle du curseur (Valeur comprise entre 'Minimum' et 'Maximum')
  - @@SetGadgetState: Change la position actuelle du curseur.
  - @@GetGadgetAttribute avec l'un des attributs suivants:
    @#PB_TrackBar_Minimum: Renvoie la valeur minimale.
    @#PB_TrackBar_Maximum: Renvoie la valeur maximale. 

  - @@SetGadgetAttribute avec un des attributs suivants:
    @#PB_TrackBar_Minimum: Change la valeur minimale.
    @#PB_TrackBar_Maximum: Change la valeur maximale. 
@EndFixedFont

@Example
@Code
If OpenWindow(0, 0, 0, 320, 200, "TrackBarGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    TextGadget    (3, 10,  20, 250, 20,"Barre à curseur standard", #PB_Text_Center)
    TrackBarGadget(0, 10,  40, 250, 20, 0, 10000)
    SetGadgetState(0, 5000)
    TextGadget    (4, 10, 100, 250, 20, "Barre à curseur avec traits de marquage", #PB_Text_Center)
    TrackBarGadget(1, 10, 120, 250, 20, 0, 30, #PB_TrackBar_Ticks)
    SetGadgetState(1, 3000)
    TextGadget    (5,  90, 180, 200, 20, "Barre à curseur verticale", #PB_Text_Right)
    TrackBarGadget(2, 270, 10, 20, 170, 0, 10000, #PB_TrackBar_Vertical)
    SetGadgetState(2, 8000)
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image trackbargadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, 
  @@GetGadgetAttribute, @@SetGadgetAttribute

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = TreeGadget(#Gadget, X, Y, Largeur, Hauteur [, Options])

@Description
  Crée un gadget liste arborescente dans la 
  GadgetList en cours. 

@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau 
  gadget.

@OptionalParameter "Options"
  Peut être une combinaison de:
@FixedFont
  @#PB_Tree_AlwaysShowSelection: Montre toujours la sélection, même si le gadget n'est plus actif.
  @#PB_Tree_NoLines            : Cache les lignes reliant les noeuds.
  @#PB_Tree_NoButtons          : Cache les boutons des noeuds.
  @#PB_Tree_CheckBoxes         : Ajoute une case à cocher devant chaque élément.
  @#PB_Tree_ThreeState         : Les cases à cocher peuvent avoir un état "indéterminé".
@EndFixedFont
@Indent
  L'option @#PB_Tree_ThreeState peut être 
  utilisée en combinaison avec l'option 
  @#PB_Tree_CheckBoxes pour obtenir des 
  cases à cocher qui peuvent avoir un état 
  "on", "off" et "indéterminé". 
  L'utilisateur ne peut sélectionner que 
  les états "on" ou "off". L'état 
  "indéterminé" peut être défini en 
  utilisant la fonction @@SetGadgetItemState.
@EndIndent  

@ReturnValue
  Renvoie une valeur non nulle en cas de 
  succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre 
  #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré 
  automatiquement.
  
@Remarks  
  Chaque branche de l'arbre a un niveau 
  assigné qui détermine la relation qu'il 
  a avec l'élément du dessus et du dessous.
  Les éléments avec le même niveau 
  appartiennent à la même branche, les 
  éléments avec un niveau supérieur sont les 
  fils etc.
  Le paramètre 'Options' de la commande 
  @@AddGadgetItem est toujours requis pour 
  les éléments du TreeGadget() et sert à 
  spécifier le niveau de l'élément ajouté. 
  A noter que si un élément est ajouté avec 
  un niveau invalide alors il sera quand 
  même ajouté, au niveau le plus proche.
@FixedFont
  - @@GadgetToolTip permet d'ajouter une 'mini aide' à ce gadget. 

  Les fonctions suivantes peuvent alors être utilisées pour agir sur le contenu de cette liste :
  - @@AddGadgetItem     : Ajoute un élément, et éventuellement une icône
  - @@RemoveGadgetItem  : Efface un élément (et ses sous-éléments)
  - @@ClearGadgetItems  : Supprime tous les éléments
  - @@CountGadgetItems  : Renvoie le nombre d'éléments actuellement contenus dans le gadget.
  - @@GetGadgetItemState: Renvoie l'état de l'élément spécifié.
  - @@SetGadgetItemState: Change l'état de l'élément spécifié.
  - @@GetGadgetItemText : Renvoie le texte de l'élément spécifié.
  - @@SetGadgetItemText : Change le texte de l'élément spécifié.
  - @@SetGadgetItemImage: Change l'image actuelle de l'élément spécifié.
  - @@GetGadgetItemData : Renvoie la valeur personnalisée associée à cet élément.
  - @@SetGadgetItemData : Associe une valeur personnalisée à cet élément.
  - @@GetGadgetState    : Renvoie l'élément selectionné.
  - @@SetGadgetState    : Change l'élément selectionné.
  - @@GetGadgetText     : Renvoie le texte de l'élément sélectionné.
  - @@SetGadgetText     : Change le texte de l'élément sélectionné.
  - @@GetGadgetItemAttribute avec l'attribut suivant:
    @#PB_Tree_SubLevel: Renvoie le niveau actuel de l'élément dans l'arbre.
  
  - @@GadgetItemID: Renvoie le 'handle' système de l'élément spécifié (utile pour les fonctions API)

  - @@SetGadgetColor et @@GetGadgetColor avec les  valeurs 'TypeCouleur' suivantes:
    @#PB_Gadget_FrontColor: Couleur du texte
    @#PB_Gadget_BackColor : Couleur du fond
    @#PB_Gadget_LineColor : Couleur des lignes reliant les noeuds

  - @@SetGadgetItemColor et @@GetGadgetItemColor avec les valeurs 'TypeCouleur' suivantes:
    @#PB_Gadget_FrontColor: Texte de l'élément.
    @#PB_Gadget_BackColor : Fond de l'élément.

  Les évènements suivants sont supportés par @@EventType:
    @#PB_EventType_LeftClick        : Clic gauche sur un élément, ou une case à cocher a été cochée/décochée.
    @#PB_EventType_LeftDoubleClick  : Double-clic gauche sur un élément.
    @#PB_EventType_RightClick       : Clic droit sur un élément.
    @#PB_EventType_RightDoubleClick : Double-Clic droit sur un élément.
    @#PB_EventType_Change           : L'élément courant a changé
    @#PB_EventType_DragStart        : L'utilisateur a essayé de lancer une opération 'Glisser & Déposer'.
                                     @ExamineDraggedItems peut être utilisé pour obtenir les informations sur les éléments déplacés.

  Après un évènement @#PB_EventType_DragStart, la bibliothèque @LibraryLink "dragdrop" "Drag & Drop" 
  peut être utilisée pour commencer une opération de 'Glisser & Déposer'. Sous MacOS X, l'événement 
  @#PB_EventType_DragStart doit être géré à l'aide de @@BindEvent ou de @@BindGadgetEvent.@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 355, 180, "TreeGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    TreeGadget(0, 10, 10, 160, 160)                                           ; liste arborescente standard
    TreeGadget(1, 180, 10, 160, 160, #PB_Tree_CheckBoxes | #PB_Tree_NoLines)  ; liste arborescente avec cases à cocher + sans lignes reliant les noeuds
    For ID = 0 To 1
      For a = 0 To 10
        AddGadgetItem(ID, -1, "Elément normal "+Str(a), 0, 0) ; si vous souhaitez ajouter une image, utilisez 
        AddGadgetItem(ID, -1, "Noeud "+Str(a), 0, 0)          ; ImageID(x) comme 4ème paramètre
        AddGadgetItem(ID, -1, "Sous-élément 1", 0, 1)         ; Ceux-là sont au premier sous-niveau 
        AddGadgetItem(ID, -1, "Sous-élément 2", 0, 1)
        AddGadgetItem(ID, -1, "Sous-élément 3", 0, 1)
        AddGadgetItem(ID, -1, "Sous-élément 4", 0, 1)
        AddGadgetItem(ID, -1, "Fichier "+Str(a), 0, 0) ; sous-niveau 0 à nouveau
      Next
    Next
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image treegadget.png

@SeeAlso
  @@AddGadgetItem, @@RemoveGadgetItem, 
  @@ClearGadgetItems, @@CountGadgetItems, 
  @@GetGadgetItemState, @@SetGadgetItemState, 
  @@GetGadgetItemText, @@SetGadgetItemText, 
  @@SetGadgetItemImage, @@GetGadgetItemData, 
  @@SetGadgetItemData, @@GetGadgetState, 
  @@SetGadgetState, @@GetGadgetText, 
  @@SetGadgetText, @@GetGadgetItemAttribute, 
  @@SetGadgetItemImage, @@GadgetItemID, 
  @@GetGadgetColor, @@SetGadgetColor,
  @@ExplorerTreeGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = UseGadgetList(FenetreID)

@Description
  Sélectionne la GadgetList dans laquelle 
  les gadgets seront ajoutés.@LineBreak 
  Si la GadgetList n'existe pas pour cette 
  fenêtre alors elle sera créée.@LineBreak
  (Par exemple dans le cas d'une fenêtre 
  créée avec l'option @#PB_Window_NoGadgets, 
  voir @@OpenWindow ou parce que ce n'est 
  pas une fenêtre PB)  

@Parameter "FenetreID"  
  L'identifiant de la nouvelle fenêtre dans 
  laquelle les gadgets seront ajoutés. 
@LineBreak
@LineBreak
  'FenetreID' peut être obtenu  facilement 
  avec la commande @@WindowID. 
@LineBreak
@LineBreak
  Si égal à 0, c'est la GadgetList courante 
  qui sera renvoyée par la commande et il 
  n'y aura aucun changement.
  
@ReturnValue
  Renvoie l'identifiant 'FenetreID' de la 
  GadgetList précédente, ou zéro s'il n'y 
  en a pas. 
@LineBreak
@LineBreak
  Cette valeur peut être utilisée pour 
  revenir à la GadgetList précédente.
  
@Example
  Cet exemple montre comment utiliser cette 
  commande pour créer une nouvelle fenêtre 
  avec des gadgets sans interrompre la 
  création de gadgets sur la première 
  fenêtre :
@Code
  If OpenWindow(0, 0, 0, 500, 500, "Fenêtre principale", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ButtonGadget(0, 10, 10, 150, 25, "Bouton 1")
    
    ; Creation d'une seconde fenêtre avec #PB_Window_NoGadgets pour empêcher la création automatique d'une GadgetList
    If OpenWindow(1, 0, 0, 300, 200, "Fenêtre secondaire", #PB_Window_TitleBar | #PB_Window_WindowCentered | #PB_Window_NoGadgets, WindowID(0))     
      OldGadgetList = UseGadgetList(WindowID(1)) ; Creation d'une GadgetList et sauvegarde l'ancienne GadgetList
      
      ButtonGadget(10, 10, 10, 150, 25, "Bouton Fenêtre secondaire") ; Ajoute ce bouton dans la nouvelle GadgetList(Fenêtre secondaire)
      
      UseGadgetList(OldGadgetList)               ; Retour à la GadgetList précédente
    EndIf
    
    ButtonGadget(1, 10, 45, 150, 25, "Bouton 2") ; Ce bouton sera sur la fenêtre principale 
    
    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@OpenWindow, @@WindowID
 
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = WebGadget(#Gadget, X, Y, Largeur, Hauteur, URL$ [, Options]))

@Description
  Crée un Navigateur Internet (WebGadget) dans la GadgetList en cours.
  
@Parameter "#Gadget"
  Le numéro d'identification du nouveau 
  gadget. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" peut être utilisé pour générer 
  automatiquement ce numéro.

@Parameter "X, Y, Largeur, Hauteur"
  La position et les dimensions du nouveau gadget.

@Parameter "URL$"  
  L'URL à charger.

@OptionalParameter "Options"
  Peut être la constante suivante :
@FixedFont
  @#PB_Web_Edge: Utilise le moteur WebView2 pour afficher la page Web (Windows uniquement). 
@EndFixedFont

@ReturnValue
  Renvoie une valeur non nulle en cas de succès, zéro sinon. 
@LineBreak
@LineBreak
  Si @#PB_Any a été utilisé pour le paramètre #Gadget, alors la valeur de retour est le 
  numéro d'identification du gadget, généré automatiquement.
@LineBreak
@LineBreak
  Cette fonction échoue si les composants requis pour le WebGadget ne peuvent pas être chargés. 
  Voir ci-dessous les exigences pour le WebGadget sur chaque OS.

@Remarks
   Les composants suivants sont requis pour utiliser le WebGadget sur chaque OS. 
   Ces composants sont nécessaires pour utiliser le WebGadget, pas seulement pour 
   la compilation du programme.
@LineBreak
@LineBreak
  @Bold "Windows"
@Indent
  Le WebGadget utilise l'objet ActiveX d'Internet Explorer 11 de Windows.@LineBreak 
  Si l'indicateur @#PB_Web_Edge est utilisé, il utilise à la place le composant Edge moderne WebView2.@LineBreak
  WebView2 est le composant basé sur Edge permettant d'afficher une page Web moderne dans une 
  application Windows. Il est intégré à Windows 10 et Windows 11. 
  Pour les anciennes versions de Windows, il doit être installé (si ce n'est déjà fait) : 
  @InternetLink "https://learn.microsoft.com/en-us/microsoft-edge/webview2/concepts/distribution" "guide de distribution".
@EndIndent

  @Bold "Linux"
@Indent
  Le WebGadget utilise la bibliothèque 
  WebKitGtk sur Linux. Le paquet est nommé 
  "libwebkit". 
  Certaines distributions peuvent comprendre 
  une ancienne version de ce paquet qui est 
  nommé «WebKitGtk». 
  Si votre distribution ne contient pas ce 
  paquet alors les sources peuvent être 
  téléchargées sur Internet 
  @InternetLink "https://webkitgtk.org/" "WebKitGtk home page".
@EndIndent

  @Bold "OS X"
@Indent
   Le WebGadget utilise le composant WebKit 
   de OS X. Ce composant est fourni avec 
   le système d'exploitation. 
   Il n'y a pas d'autres exigences.
@EndIndent
  Les fonctions suivantes peuvent être 
  utilisées avec WebGadget:
@FixedFont
  - @@SetGadgetText: Change l'URL.
  - @@GetGadgetText: Renvoie l'URL actuelle.
  - @@SetGadgetState: Effectue une action sur le gadget. 'Etat' peut prendre une des valeurs suivantes:
    @#PB_Web_Back   : Retour en arrière dans la navigation.
    @#PB_Web_Forward: Avance d'un pas dans la navigation.
    @#PB_Web_Stop   : Arrête le chargement de la page.
    @#PB_Web_Refresh: Recharge la page actuelle.


  - @@SetGadgetItemText: avec @#PB_Web_HtmlCode comme 'Element' le code html peut être inséré dans le Gadget. (Windows seulement)

  - @@GetGadgetItemText: Les constantes suivantes peuvent être utilisées pour obtenir une information: (Windows seulement)
    @#PB_Web_HtmlCode      : Renvoie le code html du gadget.
    @#PB_Web_PageTitle     : Renvoie le titre de la page affichée.
    @#PB_Web_StatusMessage : Renvoie le message actuel de la barre d'état.
    @#PB_Web_SelectedText  : Renvoie le texte sélectionné à l'intérieur du gadget.

  - @@SetGadgetAttribute: Définit les attributs suivants: (Windows seulement)
    @#PB_Web_ScrollX            : Fixe la position de la barre de défilement horizontale .
    @#PB_Web_ScrollY            : Fixe la position de la barre de défilement verticale.
    @#PB_Web_BlockPopups        : Bloque les fenêtres popup (Valeur=1 pour bloquer et 0 pour débloquer). @#PB_EventType_PopupWindow est renvoyé si cet attribut est validé. 
    @#PB_Web_BlockPopupMenu     : Bloque le menu popup standard. @#PB_EventType_PopupMenu est renvoyé si cet attribut est validé.
    @#PB_Web_NavigationCallback : Définit une callback pour contrôler (et désactiver) la navigation.
@EndFixedFont

  La callback de la navigation doit avoir le format suivant :  (Windows seulement)
@Code
  Procedure NavigationCallback(Gadget, Url$)
    ;
    ; Renvoie #True pour autoriser cette 
    ;navigation ou #False pour la refuser.
    ;
    ProcedureReturn #True
  EndProcedure
@EndCode

@FixedFont
  - @@GetGadgetAttribute: Pour obtenir les attributs suivants :
    @#PB_Web_ScrollX           : Renvoie la position de la barre de défilement horizontale.
    @#PB_Web_ScrollY           : Renvoie la position de la barre de défilement verticale.
    @#PB_Web_Busy              : Renvoie une valeur différente de zéro si le gadget est occupé à charger une page.
    @#PB_Web_Progress          : Renvoie la progression actuelle (parfois estimée) après un évènement @#PB_EventType_DownloadProgress.
    @#PB_Web_ProgressMax       : Renvoie la progression actuelle maximum (parfois estimée) après un évènement @#PB_EventType_DownloadProgress .
    @#PB_Web_BlockPopups       : Renvoie la valeur actuelle de l'attribut de blocage des fenêtres popup.
    @#PB_Web_BlockPopupMenu    : Renvoie la valeur actuelle de l'attribut de blocage du menu popup.
    @#PB_Web_NavigationCallback: Renvoie la valeur actuelle de la callback (si elle existe).
@EndFixedFont

;  @Bold "Notes:"  Les fenêtres popups et les menus popups ne sont pas supportés pour le WebGadget sous Linux. 
;  Cependant, le @#PB_Web_BlockPopups peut encore être défini pour activer l'évènement @#PB_EventType_PopupWindow. 
;  La même chose s'applique à @#PB_Web_BlockPopupMenu.
;@LineBreak
;@LineBreak
  Les évènements suivants sont supportés 
  par @@EventType pour ce gadget:
@FixedFont
  @#PB_EventType_TitleChange      : Le titre de la page a changé (Windows seulement).
  @#PB_EventType_StatusChange     : Le message de la barre d'état a changé (Windows seulement).
  @#PB_EventType_DownloadStart    : Le téléchargement d'une page a commencé (Windows, OS X).
  @#PB_EventType_DownloadProgress : L'information de progression du téléchargement est disponible avec @@GetGadgetAttribute  (Windows seulement).
  @#PB_EventType_DownloadEnd      : Le téléchargement d'une page s'est terminé (fini ou annulé) (Windows, OS X).
  @#PB_EventType_PopupWindow      : Une fenêtre popup vient d'être bloquée (Windows seulement).
  @#PB_EventType_PopupMenu        : Le menu popup vient d'être bloqué (utile pour afficher un menu personnalisé) (Windows seulement).
@EndFixedFont

@Example
@Code
  If OpenWindow(0,0,0,600,300,"WebGadget",#PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    WebGadget(0,10,10,580,280,"https://www.purebasic.com")
    ; Note: si vous désirez utiliser un fichier local, changez le dernier paramètre en "file://" + chemin + nomdufichier
    Repeat 
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image webgadget.png

@LineBreak
@LineBreak
  Example 2:  (Windows seulement) Utilisation de la procedure NavigationCallback()
@Code
  ; Cet exemple affiche le site Web PureBasic.com. La procédure callback interdit la
  ; navigation vers les 'News' du site (#False retourné), mais l'autorise 
  ; pour tous les autres sites (#True retourné).
    
  Procedure NavigationCallback(Gadget, Url$) 
    If Url$= "https://www.purebasic.com/news.php" 
      MessageRequester("", "Pas de News aujourd'hui !") 
      ProcedureReturn #False 
    Else 
      ProcedureReturn #True 
    EndIf 
  EndProcedure 
  
  If OpenWindow(0, 0, 0, 600, 300, "WebGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    WebGadget(0, 10, 10, 580, 280, "https://www.purebasic.com") 
    SetGadgetAttribute(0, #PB_Web_NavigationCallback, @NavigationCallback()) 
    Repeat 
    Until WaitWindowEvent() = #PB_Event_CloseWindow 
  EndIf
@EndCode

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, 
  @@GetGadgetItemText, @@SetGadgetItemText, 
  @@SetGadgetState, @@GetGadgetAttribute, 
  @@SetGadgetAttribute

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function BindGadgetEvent(#Gadget, @Callback() [, TypeEvenement])  

@Description  
  Ajoute un évènement d'un gadget à la 
  liste des évènements de la fenêtre. 
@LineBreak
  Cet évènement est lié à la callback de 
  la fenêtre.
 
@Parameter "#Gadget"
  Le gadget à utiliser.

@Parameter "@Callback()"
  La procédure à appeler lorsque 
  l'évènement se produit.
@LineBreak
@LineBreak  
  Elle doit être déclarée comme ceci:
@Code
  Procedure EventHandler()
    ; Code ici...
  EndProcedure
@EndCode
  @@EventGadget, @@EventWindow, 
  @@EventMenu, @@EventType et @@EventData 
  sont disponibles pour obtenir plus 
  d'informations sur l'évènement.
@LineBreak
@LineBreak   
  Note: @@WindowEvent et @@WaitWindowEvent ne 
  devraient jamais être appelées à l'intérieur 
  du Callback(), car ça peut verrouiller  un 
  programme ou occasionner un comportement erroné.

@OptionalParameter "TypeEvenement"
  Le type d'évènement à ajouter. 
@LineBreak
@LineBreak 
  @#PB_All peut être utilisé pour lier 
  tous les types d'évènements.  
@LineBreak
@LineBreak   
  - Pour une liste complète des types pris 
  en charge, voir @@EventType.

@NoReturnValue

@Remarks
  D'ordinaire, les évènements sont gérés 
  avec les fonctions @@WindowEvent et 
  @@WaitWindowEvent. Cette fonction ajoute 
  un moyen supplémentaire de gestion des 
  évènements avec PureBasic. Avec cependant 
  un petit plus qu'est la possibilité de 
  gérer les évènements en temps réel car 
  la callback peut être invoquée dès que 
  l'évènement se produit (utile pour 
  @@ScrollBarGadget, @@ScrollAreaGadget 
  etc.). 
@LineBreak
@LineBreak 
  L'évènement ajouté peut être retiré 
  avec @@UnbindGadgetEvent.
 
@Example
@Code
  Procedure ButtonHandler()
    Debug "Clic sur le ButtonGadget #" + EventGadget()
  EndProcedure
  
  OpenWindow(0, 100, 100, 200, 90, "Test Clic", #PB_Window_SystemMenu)
  
  ButtonGadget(0, 10, 10, 180, 30, "Cliquez moi !") 
  BindGadgetEvent(0, @ButtonHandler())
  
  ButtonGadget(1, 10, 50, 180, 30, "Cliquez moi !")
  BindGadgetEvent(1, @ButtonHandler())

  Repeat
    Event = WaitWindowEvent()
  Until Event = #PB_Event_CloseWindow
@EndCode

@SeeAlso 
  @@BindEvent, @@BindMenuEvent, @@UnbindGadgetEvent, 
  @@WindowEvent, @@WaitWindowEvent

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function UnbindGadgetEvent(#Gadget, @Callback() [, TypeEvenement])  

@Description
  Retire un évènement d'un gadget de la 
  liste des évènements de la fenêtre 
  initialement ajouté avec la fonction 
  @@BindGadgetEvent. 
 
@Parameter "#Gadget"
  Le gadget à utiliser.

@Parameter "@Callback()"
  La procédure à retirer.
  
@OptionalParameter "TypeEvenement"
  Le type d'évènement à retirer. 
@LineBreak
@LineBreak 
  Pour une liste complète des types pris 
  en charge, voir @@EventType.

@NoReturnValue

@Remarks
  Si l'évènement correspondant n'est pas 
  trouvé, cette commande n'a aucun effet.
 
@Example
@Code
  Procedure ButtonHandler()
    Debug "Clic sur le ButtonGadget #" + EventGadget()
 
    UnbindGadgetEvent(0, @ButtonHandler()) ; Suppression immédiate
    Debug "Évènement détaché"
  EndProcedure
  
  OpenWindow(0, 100, 100, 200, 50, "Test clic", #PB_Window_SystemMenu)
  
  ButtonGadget(0, 10, 10, 180, 30, "Cliquez moi !")
  
  BindGadgetEvent(0, @ButtonHandler())
  UnbindGadgetEvent(0, @ButtonHandler()) ; 
  
  Repeat
    Event = WaitWindowEvent()
  Until Event = #PB_Event_CloseWindow
@EndCode

@SeeAlso 
  @@BindEvent, @@BindGadgetEvent, 
  @@BindMenuEvent, @@WindowEvent, 
  @@WaitWindowEvent

@SupportedOS
